diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/bin/syncqt qtwin-4.7.4/bin/syncqt
--- qtwin-4.7.4.orig/bin/syncqt	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/bin/syncqt	2011-10-01 22:50:20.454100000 +0200
@@ -105,7 +105,7 @@ sub showUsage
 # Params:  -none-
 #
 # Purpose: Check if script runs on a Unix system or not. Cygwin
-#          systems are _not_ detected as Unix systems.
+#          systems _are_ detected as Unix systems.
 # Returns: 1 if a unix system, else 0.
 ######################################################################
 sub checkUnix {
@@ -119,10 +119,6 @@ sub checkUnix {
         $r = 1;
         (-f "\\usr\\bin\\uname") && ($r = 0);
     }
-    if($r) {
-        $_ = $Config{'osname'};
-        $r = 0 if( /(ms)|(cyg)win/i );
-    }
     return $r;
 }
 
@@ -343,6 +339,24 @@ sub syncHeader {
 }
 
 ######################################################################
+# Syntax:  isSubdirOf(refdir, chkdir)
+# Params:  refdir, string, reference dirpath
+#          chkdir, string, dirpath to be checked
+#
+# Purpose: checks whether chkdir is a subdirectory of refdir.
+# Returns: 1 if yes, else 0.
+######################################################################
+sub isSubdirOf {
+    my ($refdir, $chkdir) = @_;
+    $refdir = substr($refdir, 0, -1) if(substr($refdir, -1, 1) eq "/");
+    $chkdir = substr($chkdir, 0, -1) if(substr($chkdir, -1, 1) eq "/");
+    return 0 if(length($refdir) > length($chkdir));
+    return 0 if(!(substr($chkdir, length($refdir), 1) eq "/"));
+    return 0 if(!($refdir eq substr($chkdir, 0, length($refdir))));
+    return 1;
+}
+
+######################################################################
 # Syntax:  fixPaths(file, dir)
 # Params:  file, string, filepath to be made relative to dir
 #          dir, string, dirpath for point of origin
@@ -352,26 +366,23 @@ sub syncHeader {
 ######################################################################
 sub fixPaths {
     my ($file, $dir) = @_;
-    $dir =~ s=^$basedir/=$out_basedir/= if(!($basedir eq $out_basedir));
     $file =~ s=\\=/=g;
-    $file =~ s/\+/\\+/g;
     $dir =~ s=\\=/=g;
+    $dir =~ s=^$basedir/=$out_basedir/= if(!isSubdirOf($basedir, $out_basedir));
+    $file =~ s/\+/\\+/g;
     $dir =~ s/\+/\\+/g;
 
     #setup
     my $ret = $file;
-    $ret =~ s,/cygdrive/([a-zA-Z])/,$1:/,g;
     my $file_dir = dirname($file);
     if($file_dir eq ".") {
         $file_dir = getcwd();
         $file_dir =~ s=\\=/=g;
     }
-    $file_dir =~ s,/cygdrive/([a-zA-Z])/,$1:/,g;
     if($dir eq ".") {
         $dir = getcwd();
         $dir =~ s=\\=/=g;
     }
-    $dir =~ s,/cygdrive/([a-zA-Z])/,$1:/,g;
     return basename($file) if($file_dir eq $dir);
 
     #guts
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/config.tests/unix/freetype/freetype.cpp qtwin-4.7.4/config.tests/unix/freetype/freetype.cpp
--- qtwin-4.7.4.orig/config.tests/unix/freetype/freetype.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/config.tests/unix/freetype/freetype.cpp	2011-10-01 22:50:20.469700000 +0200
@@ -39,6 +39,9 @@
 **
 ****************************************************************************/
 
+#ifdef Q_CYGWIN_WIN
+#include <choke_me.h>
+#endif
 #include <ft2build.h>
 #include FT_FREETYPE_H
 
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/config.tests/unix/iconv/iconv.pro qtwin-4.7.4/config.tests/unix/iconv/iconv.pro
--- qtwin-4.7.4.orig/config.tests/unix/iconv/iconv.pro	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/config.tests/unix/iconv/iconv.pro	2011-10-01 22:50:20.469700000 +0200
@@ -1,3 +1,3 @@
 SOURCES = iconv.cpp
 CONFIG -= qt dylib app_bundle
-mac|win32-g++*:LIBS += -liconv
+mac|win32-g++*|cygwin-g++*:LIBS += -liconv
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/configure qtwin-4.7.4/configure
--- qtwin-4.7.4.orig/configure	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/configure	2011-10-01 23:14:16.024300000 +0200
@@ -191,6 +191,11 @@ if [ -d /System/Library/Frameworks/Carbo
 else
     PLATFORM_MAC=no
 fi
+if [ -d "C:/Program Files" ]; then
+    PLATFORM_WIN=maybe
+else
+    PLATFORM_WIN=no
+fi
 
 #-----------------------------------------------------------------------------
 # Qt version detection
@@ -226,7 +231,7 @@ fi
 #-------------------------------------------------------------------------------
 # check the license
 #-------------------------------------------------------------------------------
-COMMERCIAL_USER=ask
+COMMERCIAL_USER=no
 CFG_DEV=no
 CFG_NOKIA=no
 CFG_EMBEDDED=no
@@ -300,6 +305,7 @@ earlyArgParse()
             CFG_EMBEDDED="$VAL"
             PLATFORM_X11=no
             PLATFORM_MAC=no
+            PLATFORM_WIN=no
             PLATFORM_QWS=yes
             ;;
         developer-build)
@@ -1216,6 +1222,7 @@ while [ "$#" -gt 0 ]; do
         CFG_EMBEDDED="$VAL"
         PLATFORM_X11=no
         PLATFORM_MAC=no
+        PLATFORM_WIN=no
         PLATFORM_QWS=yes
         ;;
     sse)
@@ -1325,8 +1332,18 @@ while [ "$#" -gt 0 ]; do
     x11)
         PLATFORM_MAC=no
         PLATFORM_QWS=no
+        PLATFORM_WIN=no
         PLATFORM_X11=yes
         ;;
+    win32)
+        if [ "$PLATFORM_WIN" = "maybe" ]; then
+            PLATFORM_WIN=yes
+        else
+            echo "Error: Needed sources for using GDI grahics are missing."
+            echo ""
+            UNKNOWN_OPT=yes
+        fi
+        ;;
     sdk)
         if [ "$PLATFORM_MAC" = "yes" ]; then
             CFG_SDK="$VAL"
@@ -2742,6 +2759,23 @@ case `basename "$XPLATFORM"` in win32-g+
 case "$XPLATFORM" in *symbian*) XPLATFORM_SYMBIAN=yes;; esac
 case "$XPLATFORM" in symbian-sbsv2) XPLATFORM_SYMBIAN_SBSV2=yes;; esac
 
+if [ "$PLATFORM_WIN" = "maybe" ]; then
+    case `basename "$PLATFORM"` in cygwin-g++-win32) PLATFORM_WIN=yes;; esac
+elif [ "$PLATFORM_WIN" = "yes" ]; then
+    case `basename "$PLATFORM"` in
+        cygwin-g++*)
+            PLATFORM=cygwin-g++-win32
+            ;;
+        *)
+            echo >&2
+            echo "   Option 'win32' can be used only when building for" >&2
+            echo "   Cygwin (platform cygwin-g++ or cygwin-g++-win32)." >&2
+            echo >&2
+            exit 2
+            ;;
+    esac
+fi
+
 if [ -d "$PLATFORM" ]; then
   QMAKESPEC="$PLATFORM"
 else
@@ -4208,6 +4242,8 @@ elif [ "$XPLATFORM_SYMBIAN" = "yes" ]; t
     Platform="Qt for Symbian"
 elif [ "$PLATFORM_MAC" = "yes" ]; then
     Platform="Qt for Mac OS X"
+elif [ "$PLATFORM_WIN" = "yes" ]; then
+    Platform="Qt for Cygwin/Win32"
 elif [ "$XPLATFORM_MINGW" = "yes" ]; then
     Platform="Qt for Windows"
 elif [ '!' -z "`getQMakeConf \"$XQMAKESPEC\" | grep QMAKE_LIBS_X11 | awk '{print $3;}'`" ]; then
@@ -4839,7 +4875,9 @@ if ( [ "$CFG_ARCH" = "arm" ] || [ "$CFG_
     fi
 fi
 
-[ "$XPLATFORM_MINGW" = "yes" ] && QMakeVar add styles "windowsxp windowsvista"
+if [ "$XPLATFORM_MINGW" = "yes" ] || [ "$PLATFORM_WIN" = "yes" ]; then
+    QMakeVar add styles "windowsxp windowsvista"
+fi
 
 if [ "$XPLATFORM_SYMBIAN" = "yes" ]; then
     QMakeVar set styles "windows s60"   #overwrite previous default
@@ -6098,6 +6136,7 @@ fi
 [ "x$CFG_EMBEDDED" != "xno" ] && CFG_LIBFREETYPE="$CFG_QWS_FREETYPE"
 [ "x$PLATFORM_MAC" = "xyes" ] && CFG_LIBFREETYPE=no
 [ "$XPLATFORM_MINGW" = "yes" ] && [ "$CFG_LIBFREETYPE" = "auto" ] && CFG_LIBFREETYPE=no
+[ "x$PLATFORM_WIN" = "xyes" ] && CFG_LIBFREETYPE=no
 if [ "$CFG_LIBFREETYPE" = "auto" ]; then
     if "$unixtests/compile.test" "$XQMAKESPEC" "$QMAKE_CONFIG" $OPT_VERBOSE "$relpath" "$outpath" config.tests/unix/freetype "FreeType" $L_FLAGS $I_FLAGS $l_FLAGS $MAC_CONFIG_TEST_COMMANDLINE; then
         CFG_LIBFREETYPE=system
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/mkspecs/cygwin-g++/qmake.conf qtwin-4.7.4/mkspecs/cygwin-g++/qmake.conf
--- qtwin-4.7.4.orig/mkspecs/cygwin-g++/qmake.conf	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/mkspecs/cygwin-g++/qmake.conf	2011-10-01 22:50:20.485300000 +0200
@@ -11,22 +11,22 @@ CONFIG			+= qt warn_on release increment
 QT			+= core gui
 QMAKE_INCREMENTAL_STYLE  = sublib
 
-QMAKE_CC		= gcc
-QMAKE_LEX		= flex
-QMAKE_LEXFLAGS		= 
-QMAKE_YACC		= byacc
-QMAKE_YACCFLAGS		= -d
+QMAKE_CC		= gcc-4
 QMAKE_CFLAGS		= -pipe
 QMAKE_CFLAGS_DEPS	= -M
 QMAKE_CFLAGS_WARN_ON	= -Wall -W
 QMAKE_CFLAGS_WARN_OFF	= -w
 QMAKE_CFLAGS_RELEASE	= -O2
 QMAKE_CFLAGS_DEBUG	= -g
-QMAKE_CFLAGS_SHLIB	=
+QMAKE_CFLAGS_SHLIB	= -DPIC -DDLL_EXPORT
+QMAKE_CFLAGS_STATIC_LIB	=
 QMAKE_CFLAGS_YACC	= -Wno-unused -Wno-parentheses
+QMAKE_CFLAGS_HIDESYMS	=
+QMAKE_CFLAGS_PRECOMPILE	+= -x c-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
+QMAKE_CFLAGS_USE_PRECOMPILE += -include ${QMAKE_PCH_OUTPUT_BASE}
 QMAKE_CFLAGS_THREAD	= -D_REENTRANT
 
-QMAKE_CXX		= g++
+QMAKE_CXX		= g++-4
 QMAKE_CXXFLAGS		= $$QMAKE_CFLAGS
 QMAKE_CXXFLAGS_DEPS	= $$QMAKE_CFLAGS_DEPS
 QMAKE_CXXFLAGS_WARN_ON	= $$QMAKE_CFLAGS_WARN_ON
@@ -34,55 +34,86 @@ QMAKE_CXXFLAGS_WARN_OFF	= $$QMAKE_CFLAGS
 QMAKE_CXXFLAGS_RELEASE	= $$QMAKE_CFLAGS_RELEASE
 QMAKE_CXXFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
 QMAKE_CXXFLAGS_SHLIB	= $$QMAKE_CFLAGS_SHLIB
+QMAKE_CXXFLAGS_STATIC_LIB = $$QMAKE_CFLAGS_STATIC_LIB
 QMAKE_CXXFLAGS_YACC	= $$QMAKE_CFLAGS_YACC
+QMAKE_CXXFLAGS_HIDESYMS	+= $$QMAKE_CFLAGS_HIDESYMS
+QMAKE_CXXFLAGS_PRECOMPILE += -x c++-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
+QMAKE_CXXFLAGS_USE_PRECOMPILE = $$QMAKE_CFLAGS_USE_PRECOMPILE
 QMAKE_CXXFLAGS_THREAD	= $$QMAKE_CFLAGS_THREAD
 
 QMAKE_INCDIR		=
 QMAKE_LIBDIR		=
-QMAKE_INCDIR_X11	= /usr/X11R6/include
-QMAKE_LIBDIR_X11	= /usr/X11R6/lib
+QMAKE_INCDIR_X11	=
+QMAKE_LIBDIR_X11	=
 QMAKE_INCDIR_QT		= $$[QT_INSTALL_HEADERS]
 QMAKE_LIBDIR_QT		= $$[QT_INSTALL_LIBS]
-QMAKE_INCDIR_OPENGL	= /usr/X11R6/include
-QMAKE_LIBDIR_OPENGL	= /usr/X11R6/lib
+QMAKE_INCDIR_OPENGL	=
+QMAKE_LIBDIR_OPENGL	=
 
-QMAKE_LINK		= g++
-QMAKE_LINK_SHLIB	= g++
-QMAKE_LINK_C		= gcc
-QMAKE_LINK_C_SHLIB	= gcc
-QMAKE_LFLAGS		=
-QMAKE_LFLAGS_RELEASE	=
-QMAKE_LFLAGS_DEBUG	=
-QMAKE_LFLAGS_SHLIB	= -shared
+QMAKE_LINK		= g++-4
+QMAKE_LINK_SHLIB	= g++-4
+QMAKE_LINK_C		= gcc-4
+QMAKE_LINK_C_SHLIB	= gcc-4
+QMAKE_LFLAGS		= -shared-libgcc -Wl,--enable-auto-import
+QMAKE_LFLAGS_RELEASE	= -Wl,-s
+QMAKE_LFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
+QMAKE_LFLAGS_SHLIB	= -shared -Wl,--enable-auto-image-base
 QMAKE_LFLAGS_PLUGIN	= $$QMAKE_LFLAGS_SHLIB
-QMAKE_LFLAGS_SONAME	= -Wl,-soname,
+QMAKE_LFLAGS_SONAME	=
 QMAKE_LFLAGS_THREAD	=
-QMAKE_LFLAGS_RPATH	= -Wl,-rpath,
-QMAKE_CYGWIN_SHLIB	= 1
-QMAKE_CYGWIN_EXE	= 1
+QMAKE_LFLAGS_RPATH		=
+
+QMAKE_PCH_OUTPUT_EXT	= .gch
+
+# -Bsymbolic-functions (ld) support
+QMAKE_LFLAGS_BSYMBOLIC_FUNC =
+QMAKE_LFLAGS_DYNAMIC_LIST =
  
 QMAKE_LIBS		=
 QMAKE_LIBS_DYNLOAD	= -ldl
 QMAKE_LIBS_X11		= -lXext -lX11
 QMAKE_LIBS_X11SM	= -lSM -lICE
+QMAKE_LIBS_NIS		=
 QMAKE_LIBS_OPENGL	= -lGLU -lGL
 QMAKE_LIBS_OPENGL_QT	= -lGL
+QMAKE_LIBS_PRIVATE	= -liconv
 QMAKE_LIBS_THREAD	= -lpthread
+QMAKE_LIBS_COMPAT	= -lresolv
 
 QMAKE_MOC		= $$[QT_INSTALL_BINS]/moc
 QMAKE_UIC		= $$[QT_INSTALL_BINS]/uic
 
 QMAKE_AR		= ar cqs
-QMAKE_OBJCOPY           = objcopy
-QMAKE_RANLIB		=
+QMAKE_OBJCOPY		= objcopy
+QMAKE_RANLIB		= ranlib
 
 QMAKE_TAR		= tar -cf
 QMAKE_GZIP		= gzip -9f
 
 QMAKE_COPY		= cp -f
+QMAKE_COPY_FILE		= $(COPY)
+QMAKE_COPY_DIR		= $(COPY) -r
 QMAKE_MOVE		= mv -f
 QMAKE_DEL_FILE		= rm -f
 QMAKE_DEL_DIR		= rmdir
+QMAKE_STRIP		= strip
+QMAKE_STRIPFLAGS_LIB	+= --strip-unneeded
 QMAKE_CHK_DIR_EXISTS	= test -d
 QMAKE_MKDIR		= mkdir -p
+QMAKE_INSTALL_FILE	= install -m 644 -p
+QMAKE_INSTALL_PROGRAM	= install -m 755 -p
+
+QMAKE_LEX		= flex
+QMAKE_LEXFLAGS		= 
+QMAKE_YACC		= byacc
+QMAKE_YACCFLAGS		= -d
+QMAKE_YACCFLAGS_MANGLE	+= -p $base -b $base
+QMAKE_YACC_HEADER	= $base.tab.h
+QMAKE_YACC_SOURCE	= $base.tab.c
+QMAKE_PREFIX_SHLIB	= lib
+QMAKE_EXTENSION_SHLIB	= dll
+QMAKE_PREFIX_STATICLIB	= lib
+QMAKE_EXTENSION_STATICLIB = a
+QMAKE_CYGWIN_SHLIB	= 1
+QMAKE_CYGWIN_EXE	= 1
 load(qt_config)
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/mkspecs/cygwin-g++/qplatformdefs.h qtwin-4.7.4/mkspecs/cygwin-g++/qplatformdefs.h
--- qtwin-4.7.4.orig/mkspecs/cygwin-g++/qplatformdefs.h	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/mkspecs/cygwin-g++/qplatformdefs.h	2011-10-01 22:50:20.500900000 +0200
@@ -61,6 +61,7 @@
 // We are hot - unistd.h should have turned on the specific APIs we requested
 
 
+#include <features.h>
 #include <pthread.h>
 #include <dirent.h>
 #include <fcntl.h>
@@ -68,27 +69,28 @@
 #include <pwd.h>
 #include <signal.h>
 #include <dlfcn.h>
+#include <ctype.h>
 
 #include <sys/types.h>
 #include <sys/ioctl.h>
-// Cygwin does not provide <sys/ipc.h> and <sys/shm.h> because it
-// doesn't support SysV IPC or shared memory. See for example:
-// 	http://afni.nimh.nih.gov/afni/afniboard/messages/1725.html
+#include <sys/ipc.h>
 #include <sys/time.h>
+#include <sys/shm.h>
 #include <sys/socket.h>
 #include <sys/stat.h>
 #include <sys/wait.h>
 //#include <windows.h>
+
 #include <netinet/in.h>
+#include <resolv.h>
+#ifndef QT_NO_IPV6IFNAME
+#include <net/if.h>
+#endif
 
-#define QT_NO_USE_FSEEKO
+#define O_LARGEFILE	0
 #include "../common/posix/qplatformdefs.h"
 
-#undef QT_OPEN_LARGEFILE
-
-#if defined(_XOPEN_SOURCE) && (_XOPEN_SOURCE >= 500)
-#define QT_SNPRINTF		::snprintf
-#define QT_VSNPRINTF		::vsnprintf
-#endif
+#define QT_SNPRINTF	::snprintf
+#define QT_VSNPRINTF	::vsnprintf
 
 #endif // QPLATFORMDEFS_H
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/mkspecs/cygwin-g++-win32/qmake.conf qtwin-4.7.4/mkspecs/cygwin-g++-win32/qmake.conf
--- qtwin-4.7.4.orig/mkspecs/cygwin-g++-win32/qmake.conf	1970-01-01 01:00:00.000000000 +0100
+++ qtwin-4.7.4/mkspecs/cygwin-g++-win32/qmake.conf	2011-10-01 22:50:20.500900000 +0200
@@ -0,0 +1,124 @@
+#
+# qmake configuration for cygwin-g++-win32
+#
+# Written for Qt/Win on Cygwin, using the POSIX API.
+#
+
+MAKEFILE_GENERATOR	= UNIX
+TARGET_PLATFORM		= unix
+TEMPLATE		= app
+CONFIG			+= qt warn_on release incremental link_prl
+QT			+= core gui
+DEFINES			+= UNICODE
+QMAKE_INCREMENTAL_STYLE	= sublib
+QMAKE_COMPILER_DEFINES	+= Q_CYGWIN_WIN
+
+QMAKE_CC		= gcc-4
+QMAKE_CFLAGS		= -pipe -DQ_CYGWIN_WIN -DUNICODE
+QMAKE_CFLAGS_DEPS	= -M
+QMAKE_CFLAGS_WARN_ON	= -Wall -W
+QMAKE_CFLAGS_WARN_OFF	= -w
+QMAKE_CFLAGS_RELEASE	= -O2
+QMAKE_CFLAGS_DEBUG	= -g
+QMAKE_CFLAGS_SHLIB	= -DPIC -DDLL_EXPORT
+QMAKE_CFLAGS_STATIC_LIB =
+QMAKE_CFLAGS_YACC	= -Wno-unused -Wno-parentheses
+QMAKE_CFLAGS_HIDESYMS   =
+QMAKE_CFLAGS_PRECOMPILE += -x c-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
+QMAKE_CFLAGS_USE_PRECOMPILE += -include ${QMAKE_PCH_OUTPUT_BASE}
+QMAKE_CFLAGS_THREAD	= -D_REENTRANT
+
+QMAKE_CXX		= g++-4
+QMAKE_CXXFLAGS		= $$QMAKE_CFLAGS
+QMAKE_CXXFLAGS_DEPS	= $$QMAKE_CFLAGS_DEPS
+QMAKE_CXXFLAGS_WARN_ON	= $$QMAKE_CFLAGS_WARN_ON
+QMAKE_CXXFLAGS_WARN_OFF	= $$QMAKE_CFLAGS_WARN_OFF
+QMAKE_CXXFLAGS_RELEASE	= $$QMAKE_CFLAGS_RELEASE
+QMAKE_CXXFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
+QMAKE_CXXFLAGS_SHLIB	= $$QMAKE_CFLAGS_SHLIB
+QMAKE_CXXFLAGS_STATIC_LIB = $$QMAKE_CFLAGS_STATIC_LIB
+QMAKE_CXXFLAGS_YACC	= $$QMAKE_CFLAGS_YACC
+QMAKE_CXXFLAGS_HIDESYMS += $$QMAKE_CFLAGS_HIDESYMS
+QMAKE_CXXFLAGS_PRECOMPILE = -x c++-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
+QMAKE_CXXFLAGS_USE_PRECOMPILE = $$QMAKE_CFLAGS_USE_PRECOMPILE
+QMAKE_CXXFLAGS_THREAD	= $$QMAKE_CFLAGS_THREAD
+
+QMAKE_INCDIR		=
+QMAKE_LIBDIR		= /usr/lib/w32api
+QMAKE_INCDIR_X11	=
+QMAKE_LIBDIR_X11	=
+QMAKE_INCDIR_QT		= $$[QT_INSTALL_HEADERS]
+QMAKE_LIBDIR_QT		= $$[QT_INSTALL_LIBS]
+QMAKE_INCDIR_OPENGL	=
+QMAKE_LIBDIR_OPENGL	=
+
+QMAKE_LINK		= g++-4
+QMAKE_LINK_SHLIB	= g++-4
+QMAKE_LINK_C		= gcc-4
+QMAKE_LINK_C_SHLIB	= gcc-4
+QMAKE_LFLAGS		=
+QMAKE_LFLAGS_RELEASE	= -Wl,-s
+QMAKE_LFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
+QMAKE_LFLAGS_SHLIB	= -shared  -Wl,--enable-auto-image-base
+QMAKE_LFLAGS_PLUGIN	= $$QMAKE_LFLAGS_SHLIB
+QMAKE_LFLAGS_SONAME	=
+QMAKE_LFLAGS_THREAD	=
+QMAKE_LFLAGS_RPATH	=
+
+QMAKE_PCH_OUTPUT_EXT	= .gch
+
+# -Bsymbolic-functions (ld) support
+QMAKE_LFLAGS_BSYMBOLIC_FUNC =
+QMAKE_LFLAGS_DYNAMIC_LIST =
+
+QMAKE_LIBS		=
+QMAKE_LIBS_DYNLOAD	= -ldl
+QMAKE_LIBS_X11		=
+QMAKE_LIBS_X11SM	=
+QMAKE_LIBS_NIS		=
+QMAKE_LIBS_CORE		= -lkernel32 -luser32 -lshell32 -luuid -lole32 -ladvapi32
+QMAKE_LIBS_GUI		= -lgdi32 -lcomdlg32 -loleaut32 -limm32 -lwinmm -lwinspool -lole32 -luuid -luser32 -ladvapi32
+QMAKE_LIBS_OPENGL	= -lopengl32 -lglu32 -lgdi32 -luser32
+QMAKE_LIBS_OPENGL_QT	= $$QMAKE_LIBS_OPENGL
+QMAKE_LIBS_PRIVATE	= -liconv
+QMAKE_LIBS_THREAD	= -lpthread
+QMAKE_LIBS_COMPAT	= -ladvapi32 -lshell32 -lcomdlg32 -luser32 -lgdi32
+
+QMAKE_MOC		= $$[QT_INSTALL_BINS]/moc
+QMAKE_UIC		= $$[QT_INSTALL_BINS]/uic
+
+QMAKE_AR		= ar cqs
+QMAKE_OBJCOPY		= objcopy
+QMAKE_RANLIB		= ranlib
+
+QMAKE_TAR		= tar -cf
+QMAKE_GZIP		= gzip -9f
+
+QMAKE_COPY		= cp -f
+QMAKE_COPY_FILE		= $(COPY)
+QMAKE_COPY_DIR		= $(COPY) -r
+QMAKE_MOVE		= mv -f
+QMAKE_DEL_FILE		= rm -f
+QMAKE_DEL_DIR		= rmdir
+QMAKE_STRIP		= strip
+QMAKE_STRIPFLAGS_LIB	+= --strip-unneeded
+QMAKE_CHK_DIR_EXISTS	= test -d
+QMAKE_MKDIR		= mkdir -p
+QMAKE_INSTALL_FILE	= install -m 644 -p
+QMAKE_INSTALL_PROGRAM	= install -m 755 -p
+
+QMAKE_LEX		= flex
+QMAKE_LEXFLAGS		+= 
+QMAKE_YACC		= byacc
+QMAKE_YACCFLAGS		+= -d
+QMAKE_YACCFLAGS_MANGLE	+= -p $base -b $base
+QMAKE_YACC_HEADER	= $base.tab.h
+QMAKE_YACC_SOURCE	= $base.tab.c
+QMAKE_PREFIX_SHLIB	= lib
+QMAKE_EXTENSION_SHLIB	= dll
+QMAKE_PREFIX_STATICLIB	= lib
+QMAKE_EXTENSION_STATICLIB = a
+QMAKE_CYGWIN_EXE	= 1
+# uncomment for building shared libs
+#QMAKE_CYGWIN_SHLIB	= 1
+load(qt_config)
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/mkspecs/cygwin-g++-win32/qplatformdefs.h qtwin-4.7.4/mkspecs/cygwin-g++-win32/qplatformdefs.h
--- qtwin-4.7.4.orig/mkspecs/cygwin-g++-win32/qplatformdefs.h	1970-01-01 01:00:00.000000000 +0100
+++ qtwin-4.7.4/mkspecs/cygwin-g++-win32/qplatformdefs.h	2011-10-01 23:58:09.994300000 +0200
@@ -0,0 +1,104 @@
+/****************************************************************************
+**
+** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
+** All rights reserved.
+** Contact: Nokia Corporation (qt-info@nokia.com)
+**
+** This file is part of the qmake spec of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#ifndef QPLATFORMDEFS_H
+#define QPLATFORMDEFS_H
+
+#ifdef UNICODE
+#ifndef _UNICODE
+#define _UNICODE
+#endif
+#endif
+
+// Get Qt defines/settings
+
+#include "qglobal.h"
+
+// Set any POSIX/XOPEN defines at the top of this file to turn on specific APIs
+
+// 1) need to reset default environment if _BSD_SOURCE is defined
+// 2) need to specify POSIX thread interfaces explicitly in glibc 2.0
+// 3) it seems older glibc need this to include the X/Open stuff
+#ifndef _GNU_SOURCE
+#  define _GNU_SOURCE
+#endif
+
+#include <unistd.h>
+
+
+// We are hot - unistd.h should have turned on the specific APIs we requested
+
+
+#include <features.h>
+#include <pthread.h>
+#include <dirent.h>
+#include <fcntl.h>
+#include <grp.h>
+#include <pwd.h>
+#include <signal.h>
+#include <dlfcn.h>
+#include <ctype.h>
+
+#include <sys/types.h>
+#include <sys/ioctl.h>
+#include <sys/ipc.h>
+#include <sys/time.h>
+#include <sys/shm.h>
+#include <sys/socket.h>
+#include <sys/stat.h>
+#include <sys/wait.h>
+
+#define NOMINMAX
+#include <qt_windows.h>
+
+#include <netinet/in.h>
+#include <resolv.h>
+#ifndef QT_NO_IPV6IFNAME
+#include <net/if.h>
+#endif
+
+#define O_LARGEFILE	0
+#include "../common/posix/qplatformdefs.h"
+
+#define QT_SNPRINTF	::snprintf
+#define QT_VSNPRINTF	::vsnprintf
+
+#endif // QPLATFORMDEFS_H
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/mkspecs/features/uitools.prf qtwin-4.7.4/mkspecs/features/uitools.prf
--- qtwin-4.7.4.orig/mkspecs/features/uitools.prf	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/mkspecs/features/uitools.prf	2011-10-01 22:50:20.563300000 +0200
@@ -9,6 +9,6 @@ CONFIG(debug, debug|release) {
     mac: QTUITOOLS_LINKAGE = -lQtUiTools_debug
     win32: QTUITOOLS_LINKAGE = -lQtUiToolsd
 }
-LIBS += $$QTUITOOLS_LINKAGE
+LIBS += $$QTUITOOLS_LINKAGE $$LIBS
 
 INCLUDEPATH = $$QMAKE_INCDIR_QT/QtUiTools $$INCLUDEPATH
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/mkspecs/win32-g++/qmake.conf qtwin-4.7.4/mkspecs/win32-g++/qmake.conf
--- qtwin-4.7.4.orig/mkspecs/win32-g++/qmake.conf	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/mkspecs/win32-g++/qmake.conf	2011-10-01 22:50:20.563300000 +0200
@@ -6,7 +6,7 @@
 
 MAKEFILE_GENERATOR	= MINGW
 TEMPLATE		= app
-CONFIG			+= qt warn_on release link_prl copy_dir_files debug_and_release debug_and_release_target precompile_header
+CONFIG			+= qt warn_on release incremental link_prl
 QT			+= core gui
 DEFINES			+= UNICODE QT_LARGEFILE_SUPPORT
 QMAKE_COMPILER_DEFINES  += __GNUC__ WIN32
@@ -14,12 +14,12 @@ QMAKE_COMPILER_DEFINES  += __GNUC__ WIN3
 QMAKE_EXT_OBJ           = .o
 QMAKE_EXT_RES           = _res.o
 
-QMAKE_CC		= gcc
+QMAKE_CC		= i686-pc-mingw32-gcc
 QMAKE_LEX		= flex
 QMAKE_LEXFLAGS		=
 QMAKE_YACC		= byacc
 QMAKE_YACCFLAGS		= -d
-QMAKE_CFLAGS		=
+QMAKE_CFLAGS		= -pipe -isystem /usr/i686-pc-mingw32/sys-root/mingw/include
 QMAKE_CFLAGS_DEPS	= -M
 QMAKE_CFLAGS_WARN_ON	= -Wall
 QMAKE_CFLAGS_WARN_OFF	= -w
@@ -27,7 +27,7 @@ QMAKE_CFLAGS_RELEASE	= -O2
 QMAKE_CFLAGS_DEBUG	= -g
 QMAKE_CFLAGS_YACC	= -Wno-unused -Wno-parentheses
 
-QMAKE_CXX		= g++
+QMAKE_CXX		= i686-pc-mingw32-g++
 QMAKE_CXXFLAGS		= $$QMAKE_CFLAGS
 QMAKE_CXXFLAGS_DEPS	= $$QMAKE_CFLAGS_DEPS
 QMAKE_CXXFLAGS_WARN_ON	= $$QMAKE_CFLAGS_WARN_ON
@@ -42,6 +42,7 @@ QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexcepti
 QMAKE_CXXFLAGS_EXCEPTIONS_OFF = -fno-exceptions
 
 QMAKE_INCDIR		=
+QMAKE_LIBDIR		= c:/cygwin/lib/w32api
 QMAKE_INCDIR_QT		= $$[QT_INSTALL_HEADERS]
 QMAKE_LIBDIR_QT		= $$[QT_INSTALL_LIBS]
 
@@ -50,13 +51,13 @@ QMAKE_RUN_CC_IMP	= $(CC) -c $(CFLAGS) $(
 QMAKE_RUN_CXX		= $(CXX) -c $(CXXFLAGS) $(INCPATH) -o $obj $src
 QMAKE_RUN_CXX_IMP	= $(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<
 
-QMAKE_LINK		= g++
-QMAKE_LINK_C		= gcc
+QMAKE_LINK		= i686-pc-mingw32-g++
+QMAKE_LINK_C		= i686-pc-mingw32-gcc
 QMAKE_LFLAGS		=
 QMAKE_LFLAGS_EXCEPTIONS_ON = -mthreads
 QMAKE_LFLAGS_EXCEPTIONS_OFF =
 QMAKE_LFLAGS_RELEASE	= -Wl,-s
-QMAKE_LFLAGS_DEBUG	=
+QMAKE_LFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
 QMAKE_LFLAGS_CONSOLE	= -Wl,-subsystem,console
 QMAKE_LFLAGS_WINDOWS	= -Wl,-subsystem,windows
 QMAKE_LFLAGS_DLL        = -shared
@@ -78,8 +79,8 @@ QMAKE_LIBS_QT_ENTRY     = -lmingw32 -lqt
     MINGW_IN_SHELL      = 1
 	QMAKE_DIR_SEP		= /
 	QMAKE_QMAKE		~= s,\\\\,/,
-	QMAKE_COPY		= cp
-	QMAKE_COPY_DIR		= cp -r
+	QMAKE_COPY		= cp -p -f
+	QMAKE_COPY_DIR		= $(COPY) -r
 	QMAKE_MOVE		= mv
 	QMAKE_DEL_FILE		= rm
 	QMAKE_MKDIR		= mkdir -p
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/projects.pro qtwin-4.7.4/projects.pro
--- qtwin-4.7.4.orig/projects.pro	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/projects.pro	2011-10-01 22:50:20.563300000 +0200
@@ -145,7 +145,7 @@ CONFIG -= qt
 
 #qmake
 qmake.path=$$[QT_INSTALL_BINS]
-win32 {
+win32|cygwin-g++* {
    qmake.files=$$QT_BUILD_TREE/bin/qmake.exe
 } else {
    qmake.files=$$QT_BUILD_TREE/bin/qmake
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/qmake/generators/makefile.cpp qtwin-4.7.4/qmake/generators/makefile.cpp
--- qtwin-4.7.4.orig/qmake/generators/makefile.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/qmake/generators/makefile.cpp	2011-10-01 22:50:20.578900000 +0200
@@ -1088,6 +1088,13 @@ MakefileGenerator::prlFileName(bool fixi
         int dot = ret.indexOf('.');
         if(dot != -1)
             ret.truncate(dot);
+#ifdef Q_OS_CYGWIN
+        if(ret.startsWith("cyg"))
+            ret = "lib" + ret.mid(3);
+        int dash = ret.indexOf('-');
+        if(dash != -1)
+            ret.truncate(dash);
+#endif
         ret += Option::prl_ext;
     }
     if(!project->isEmpty("QMAKE_BUNDLE"))
@@ -1261,7 +1268,7 @@ MakefileGenerator::writeInstalls(QTextSt
                 target += "\n";
             do_default = false;
             for(QStringList::Iterator wild_it = tmp.begin(); wild_it != tmp.end(); ++wild_it) {
-                QString wild = Option::fixPathToTargetOS((*wild_it), false, false);
+                QString wild = Option::fixPathToTargetOS((*wild_it), false, false).replace('\\', '/');
                 QString dirstr = qmake_getpwd(), filestr = wild;
                 int slsh = filestr.lastIndexOf(Option::dir_sep);
                 if(slsh != -1) {
@@ -1300,7 +1307,7 @@ MakefileGenerator::writeInstalls(QTextSt
                     uninst.append(rm_dir_contents + " " + filePrefixRoot(root, fileFixify(dst + filestr, FileFixifyAbsolute, false)));
                     continue;
                 }
-                QString local_dirstr = Option::fixPathToLocalOS(dirstr, true);
+                QString local_dirstr = Option::fixPathToLocalOS(dirstr, true).replace('\\', '/');
                 QStringList files = QDir(local_dirstr).entryList(QStringList(filestr));
                 const QStringList &installConfigValues = project->values((*it) + ".CONFIG");
                 if (installConfigValues.contains("no_check_exist") && files.isEmpty()) {
@@ -2310,6 +2317,16 @@ MakefileGenerator::findSubDirsSubTargets
                 st->out_directory = st->in_directory;
             else
                 st->out_directory = fileFixify(st->in_directory, qmake_getpwd(), Option::output_dir);
+#ifdef Q_OS_WIN
+            if (st->in_directory.startsWith(Option::output_dir, Qt::CaseInsensitive)) {
+                const int index = Option::output_dir.lastIndexOf('/', -2);
+                if (index > 0) {
+                    const QString prefix = Option::output_dir.mid(index + 1);
+                    if (st->out_directory.startsWith(prefix))
+                        st->out_directory = st->out_directory.mid(prefix.length());
+                }
+            }
+#endif
             if(!project->isEmpty(fixedSubdir + ".makefile")) {
                 st->makefile = project->first(fixedSubdir + ".makefile");
             } else {
@@ -2714,12 +2731,12 @@ MakefileGenerator::writeMakeQmake(QTextS
                     t << escapeDependencyPath(specdir() + Option::dir_sep + "qmake.conf") << " ";
             }
             const QStringList &included = project->values("QMAKE_INTERNAL_INCLUDED_FILES");
-            t << escapeDependencyPaths(included).join(" \\\n\t\t") << "\n\t"
+            t << escapeDependencyPaths(included).replaceInStrings("\\", "/").join(" \\\n\t\t") << "\n\t"
               << qmake << endl;
             for(int include = 0; include < included.size(); ++include) {
-                const QString i(included.at(include));
+                QString i(included.at(include));
                 if(!i.isEmpty())
-                    t << i << ":" << endl;
+                    t << i.replace('\\', '/') << ":" << endl;
             }
         }
         if(project->first("QMAKE_ORIG_TARGET") != "qmake") {
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/qmake/generators/makefiledeps.cpp qtwin-4.7.4/qmake/generators/makefiledeps.cpp
--- qtwin-4.7.4.orig/qmake/generators/makefiledeps.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/qmake/generators/makefiledeps.cpp	2011-10-01 22:50:20.578900000 +0200
@@ -237,7 +237,8 @@ QStringList QMakeSourceFileInfo::depende
             if(place.children) {
                 for(int i = 0; i < place.used_nodes; i++) {
                     place.children[i]->traversed = false; //reset flag
-                    ret.append(place.children[i]->file.real());
+                    QString fn = place.children[i]->file.real();
+                    ret.append(fn.replace('\\', '/'));
                 }
            }
        }
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/qmake/generators/unix/unixmake.cpp qtwin-4.7.4/qmake/generators/unix/unixmake.cpp
--- qtwin-4.7.4.orig/qmake/generators/unix/unixmake.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/qmake/generators/unix/unixmake.cpp	2011-10-01 22:50:20.578900000 +0200
@@ -720,14 +720,14 @@ UnixMakefileGenerator::defaultInstall(co
         bundle = true;
     } else if(project->first("TEMPLATE") == "app") {
         target = "$(QMAKE_TARGET)";
+        if(!project->isEmpty("QMAKE_CYGWIN_EXE") && !target.endsWith(".exe"))
+                target += ".exe";
     } else if(project->first("TEMPLATE") == "lib") {
-        if(project->isEmpty("QMAKE_CYGWIN_SHLIB")) {
-            if(!project->isActiveConfig("staticlib") && !project->isActiveConfig("plugin")) {
-                if(project->isEmpty("QMAKE_HPUX_SHLIB")) {
-                    links << "$(TARGET0)" << "$(TARGET1)" << "$(TARGET2)";
-                } else {
-                    links << "$(TARGET0)";
-                }
+        if(!project->isActiveConfig("staticlib") && !project->isActiveConfig("plugin")) {
+            if(project->isEmpty("QMAKE_HPUX_SHLIB") && project->isEmpty("QMAKE_CYGWIN_SHLIB")) {
+                links << "$(TARGET0)" << "$(TARGET1)" << "$(TARGET2)";
+            } else {
+                links << "$(TARGET0)";
             }
         }
     }
@@ -817,7 +817,10 @@ UnixMakefileGenerator::defaultInstall(co
                     if(lslash != -1)
                         link = link.right(link.length() - (lslash + 1));
                     QString dst_link = filePrefixRoot(root, fileFixify(targetdir + link, FileFixifyAbsolute));
-                    ret += "\n\t-$(SYMLINK) \"$(TARGET)\" \"" + dst_link + "\"";
+                    if(project->isEmpty("QMAKE_CYGWIN_SHLIB"))
+                        ret += "\n\t-$(SYMLINK) \"$(TARGET)\" \"" + dst_link + "\"";
+                    else
+                        ret += "\n\t-$(INSTALL_FILE) \"" + destdir + "$(TARGET0)\" \"" + dst_link + "\"";
                     if(!uninst.isEmpty())
                         uninst.append("\n\t");
                     uninst.append("-$(DEL_FILE) \"" + dst_link + "\"");
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/qmake/generators/unix/unixmake2.cpp qtwin-4.7.4/qmake/generators/unix/unixmake2.cpp
--- qtwin-4.7.4.orig/qmake/generators/unix/unixmake2.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/qmake/generators/unix/unixmake2.cpp	2011-10-01 22:50:20.594500000 +0200
@@ -565,6 +565,14 @@ UnixMakefileGenerator::writeMakeParts(QT
             if(!project->isEmpty("QMAKE_POST_LINK"))
                 t << "\n\t" << var("QMAKE_POST_LINK");
             t << endl << endl;
+        } else if(!project->isEmpty("QMAKE_CYGWIN_SHLIB")) {
+            t << "\n\t"
+              << "-$(DEL_FILE) $(TARGET) $(TARGET0)" << "\n\t"
+              << var("QMAKE_LINK_SHLIB_CMD") << "\n\t";
+            if(!destdir.isEmpty())
+                t  << "-$(DEL_FILE) " << destdir << "$(TARGET)\n\t"
+                   << "-$(DEL_FILE) " << destdir << "$(TARGET0)\n\t"
+                   << "-$(MOVE) $(TARGET) $(TARGET0) " << destdir;
         } else if(project->isEmpty("QMAKE_HPUX_SHLIB")) {
             t << "\n\t"
               << "-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)" << "\n\t"
@@ -1012,8 +1020,8 @@ void UnixMakefileGenerator::init2()
         }
         if(!project->isEmpty("TARGET"))
             project->values("TARGET").first().prepend(project->first("DESTDIR"));
-       if (!project->values("QMAKE_CYGWIN_EXE").isEmpty())
-            project->values("TARGET_EXT").append(".exe");
+       if(!project->isEmpty("QMAKE_CYGWIN_EXE"))
+            project->values("TARGET").first() += ".exe";
     } else if (project->isActiveConfig("staticlib")) {
         project->values("TARGET").first().prepend(project->first("QMAKE_PREFIX_STATICLIB"));
         project->values("TARGET").first() += "." + project->first("QMAKE_EXTENSION_STATICLIB");
@@ -1046,7 +1054,7 @@ void UnixMakefileGenerator::init2()
         } else if(project->isActiveConfig("plugin")) {
             QString prefix;
             if(!project->isActiveConfig("no_plugin_name_prefix"))
-                prefix = "lib";
+                prefix = project->first("QMAKE_PREFIX_SHLIB");
             project->values("TARGET_x.y.z").append(prefix +
                                                         project->first("TARGET") + "." +
                                                         project->first("QMAKE_EXTENSION_PLUGIN"));
@@ -1059,6 +1067,11 @@ void UnixMakefileGenerator::init2()
                                                         project->first("QMAKE_EXTENSION_PLUGIN") +
                                                         "." + project->first("VER_MAJ"));
             project->values("TARGET") = project->values("TARGET_x.y.z");
+        } else if (!project->isEmpty("QMAKE_CYGWIN_SHLIB")) {
+            project->values("TARGET_").append("lib" + project->first("TARGET") + ".dll.a");
+            project->values("TARGET_x").append("cyg" + project->first("TARGET") + "-" +
+                    project->first("VER_MAJ") + "." + project->first("QMAKE_EXTENSION_SHLIB"));
+            project->values("TARGET") = project->values("TARGET_x");
         } else if (!project->isEmpty("QMAKE_HPUX_SHLIB")) {
             project->values("TARGET_").append("lib" + project->first("TARGET") + ".sl");
             if(project->isActiveConfig("lib_version_first"))
@@ -1182,6 +1195,8 @@ void UnixMakefileGenerator::init2()
                 project->values("QMAKE_LFLAGS") += project->values("QMAKE_LFLAGS_SONAME");
         } else {
             project->values("QMAKE_LFLAGS") += project->values("QMAKE_LFLAGS_SHLIB");
+            if(!project->isEmpty("QMAKE_CYGWIN_SHLIB"))
+                project->values("QMAKE_LFLAGS") += QString("-Wl,--out-implib,$(TARGET0)");
             if(!project->isEmpty("QMAKE_LFLAGS_COMPAT_VERSION")) {
                 if(project->isEmpty("COMPAT_VERSION"))
                     project->values("QMAKE_LFLAGS") += QString(project->first("QMAKE_LFLAGS_COMPAT_VERSION") +
@@ -1250,6 +1265,13 @@ UnixMakefileGenerator::libtoolFileName(b
     int dot = ret.indexOf('.');
     if(dot != -1)
         ret = ret.left(dot);
+#ifdef Q_OS_CYGWIN
+    if(ret.startsWith("cyg"))
+        ret = "lib" + ret.mid(3);
+    int dash = ret.indexOf('-');
+    if(dash != -1)
+        ret = ret.left(dash);
+#endif
     ret += Option::libtool_ext;
     if(!project->isEmpty("QMAKE_LIBTOOL_DESTDIR"))
         ret.prepend(project->first("QMAKE_LIBTOOL_DESTDIR") + Option::dir_sep);
@@ -1289,9 +1311,13 @@ UnixMakefileGenerator::writeLibtoolFile(
     if(project->isActiveConfig("plugin")) {
         t << var("TARGET");
     } else {
-        if (project->isEmpty("QMAKE_HPUX_SHLIB"))
-            t << var("TARGET_x.y.z") << " ";
-        t << var("TARGET_x") << " " << var("TARGET_");
+        if (!project->isEmpty("QMAKE_CYGWIN_SHLIB")) {
+            t << var("TARGET_");
+        } else {
+            if (project->isEmpty("QMAKE_HPUX_SHLIB"))
+                t << var("TARGET_x.y.z") << " ";
+            t << var("TARGET_x") << " " << var("TARGET_");
+        }
     }
     t << "'\n\n";
 
@@ -1340,11 +1366,16 @@ UnixMakefileGenerator::pkgConfigFileName
     int slsh = ret.lastIndexOf(Option::dir_sep);
     if(slsh != -1)
         ret = ret.right(ret.length() - slsh - 1);
-    if(ret.startsWith("lib"))
+    if(ret.startsWith("lib") || ret.startsWith("cyg"))
         ret = ret.mid(3);
     int dot = ret.indexOf('.');
     if(dot != -1)
         ret = ret.left(dot);
+#ifdef Q_OS_CYGWIN
+    int dash = ret.indexOf('-');
+    if(dash != -1)
+        ret = ret.left(dash);
+#endif
     ret += Option::pkgcfg_ext;
     if(!project->isEmpty("QMAKE_PKGCONFIG_DESTDIR"))
         ret.prepend(project->first("QMAKE_PKGCONFIG_DESTDIR") + Option::dir_sep);
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/qmake/generators/win32/mingw_make.cpp qtwin-4.7.4/qmake/generators/win32/mingw_make.cpp
--- qtwin-4.7.4.orig/qmake/generators/win32/mingw_make.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/qmake/generators/win32/mingw_make.cpp	2011-10-01 22:50:20.594500000 +0200
@@ -386,7 +386,7 @@ void MingwMakefileGenerator::writeLibDir
         if (libDirs[i].endsWith("\\"))
             libDirs[i].chop(1);
     }
-    t << valGlue(libDirs, libArg+quote, quote+" "+libArg+quote, quote) << " ";
+    t << valGlue(libDirs, libArg+quote, quote+" "+libArg+quote, quote).replace('\\','/') << " ";
 }
 
 void MingwMakefileGenerator::writeObjectsPart(QTextStream &t)
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/qmake/generators/win32/winmakefile.cpp qtwin-4.7.4/qmake/generators/win32/winmakefile.cpp
--- qtwin-4.7.4.orig/qmake/generators/win32/winmakefile.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/qmake/generators/win32/winmakefile.cpp	2011-10-01 22:50:20.594500000 +0200
@@ -714,7 +714,7 @@ void Win32MakefileGenerator::writeStanda
     }
     t << "dist:" << "\n\t"
       << "$(ZIP) " << var("QMAKE_ORIG_TARGET") << ".zip " << "$(SOURCES) $(DIST) "
-      << dist_files.join(" ") << " " << var("TRANSLATIONS") << " ";
+      << dist_files.join(" ").replace('\\', '/') << " " << var("TRANSLATIONS") << " ";
     if(!project->isEmpty("QMAKE_EXTRA_COMPILERS")) {
         const QStringList &quc = project->values("QMAKE_EXTRA_COMPILERS");
         for(QStringList::ConstIterator it = quc.begin(); it != quc.end(); ++it) {
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/qmake/Makefile.win32-g++-sh qtwin-4.7.4/qmake/Makefile.win32-g++-sh
--- qtwin-4.7.4.orig/qmake/Makefile.win32-g++-sh	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/qmake/Makefile.win32-g++-sh	2011-10-01 22:50:20.594500000 +0200
@@ -11,8 +11,8 @@ endif
 #
 # specific stuff for mingw g++ make
 #
-CXX	    =	g++
-CFLAGS	    =	-c -o$@ -O \
+CXX	    =	i686-pc-mingw32-g++
+CFLAGS	    =	-c -o$@ -isystem /usr/i686-pc-mingw32/sys-root/mingw/include \
 		-I. -Igenerators -Igenerators/unix \
 		-Igenerators/win32 -Igenerators/mac \
 		-Igenerators/symbian \
@@ -27,9 +27,9 @@ CFLAGS	    =	-c -o$@ -O \
 		-DQT_BUILD_QMAKE -DQT_NO_THREAD -DQT_NO_QOBJECT -DQT_NO_GEOM_VARIANT -DQT_NO_DATASTREAM \
 		-DQT_BOOTSTRAPPED -DQLIBRARYINFO_EPOCROOT
 CXXFLAGS    =   $(CFLAGS)
-LFLAGS	    = -static-libgcc -static-libstdc++ -s
-LIBS	    = -lole32 -luuid -ladvapi32 -lkernel32
-LINKQMAKE   =	g++ $(LFLAGS) -o qmake.exe $(OBJS) $(QTOBJS) $(LIBS)
+LFLAGS	    = -static-libgcc -s
+LIBS	    = -L/usr/lib/w32api -lole32 -luuid -ladvapi32 -lkernel32
+LINKQMAKE   =	i686-pc-mingw32-g++ $(LFLAGS) -o qmake.exe $(OBJS) $(QTOBJS) $(LIBS)
 ADDCLEAN    =
 
 
@@ -100,10 +100,10 @@ Makefile: Makefile.win32-g++-sh
 	@echo "Out of date, please rerun configure"
 
 clean::
-	-del $(OBJS) $(QTOBJS) $(ADDCLEAN)
+	-rm -f $(OBJS) $(QTOBJS) $(ADDCLEAN)
 
 distclean:: clean
-	-del qmake
+	-rm -f qmake.exe
 
 .c.o:
 	$(CXX) $(CFLAGS) $<
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/qmake/option.cpp qtwin-4.7.4/qmake/option.cpp
--- qtwin-4.7.4.orig/qmake/option.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/qmake/option.cpp	2011-10-01 22:50:20.610100000 +0200
@@ -553,7 +553,7 @@ Option::init(int argc, char **argv)
 void Option::applyHostMode()
 {
    if (Option::host_mode == Option::HOST_WIN_MODE) {
-       Option::dir_sep = "\\";
+       Option::dir_sep = "/";
        Option::obj_ext = ".obj";
    } else {
        Option::dir_sep = "/";
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/jit/JITStubs.cpp qtwin-4.7.4/src/3rdparty/javascriptcore/JavaScriptCore/jit/JITStubs.cpp
--- qtwin-4.7.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/jit/JITStubs.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/3rdparty/javascriptcore/JavaScriptCore/jit/JITStubs.cpp	2011-10-01 22:50:20.610100000 +0200
@@ -68,7 +68,7 @@ using namespace std;
 
 namespace JSC {
 
-#if OS(DARWIN) || OS(WINDOWS)
+#if OS(DARWIN) || OS(WINDOWS) || OS(CYGWIN)
 #define SYMBOL_STRING(name) "_" #name
 #else
 #define SYMBOL_STRING(name) #name
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Collector.cpp qtwin-4.7.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Collector.cpp
--- qtwin-4.7.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Collector.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Collector.cpp	2011-10-01 22:50:20.610100000 +0200
@@ -53,7 +53,7 @@
 #include <mach/thread_act.h>
 #include <mach/vm_map.h>
 
-#elif OS(WINDOWS)
+#elif OS(WINDOWS) || OS(CYGWIN)
 
 #include <windows.h>
 #include <malloc.h>
@@ -594,7 +594,7 @@ static inline void* currentThreadStackBa
     // FIXME: why only for MSVC?
     PNT_TIB64 pTib = reinterpret_cast<PNT_TIB64>(NtCurrentTeb());
     return reinterpret_cast<void*>(pTib->StackBase);
-#elif OS(WINDOWS) && CPU(X86) && COMPILER(GCC)
+#elif (OS(WINDOWS) || OS(CYGWIN)) && CPU(X86) && COMPILER(GCC)
     // offset 0x18 from the FS segment register gives a pointer to
     // the thread information block for the current thread
     NT_TIB* pTib;
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h qtwin-4.7.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h
--- qtwin-4.7.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/Platform.h	2011-10-01 22:50:20.625700000 +0200
@@ -435,6 +435,11 @@
 #define WTF_OS_SYMBIAN 1
 #endif
 
+/* OS(CYGWIN) - Cygwin; note that for this platform OS(UNIX) is also defined */
+#if defined(__CYGWIN__)
+#define WTF_OS_CYGWIN 1
+#endif
+
 /* OS(UNIX) - Any Unix-like system */
 #if   OS(AIX)              \
     || OS(ANDROID)          \
@@ -690,7 +695,7 @@
 
 #if !OS(WINDOWS) && !OS(SOLARIS) && !OS(QNX) \
     && !OS(SYMBIAN) && !OS(HAIKU) && !OS(RVCT) \
-    && !OS(ANDROID) && !OS(AIX) && !OS(HPUX)
+    && !OS(ANDROID) && !OS(AIX) && !OS(HPUX) && !OS(CYGWIN)
 #define HAVE_TM_GMTOFF 1
 #define HAVE_TM_ZONE 1
 #define HAVE_TIMEGM 1
@@ -874,7 +879,7 @@
 #define WTF_USE_JSVALUE64 1
 #elif CPU(ARM) || CPU(PPC64)
 #define WTF_USE_JSVALUE32 1
-#elif OS(WINDOWS) && COMPILER(MINGW)
+#elif (OS(WINDOWS) && COMPILER(MINGW)) || OS(CYGWIN)
 /* Using JSVALUE32_64 causes padding/alignement issues for JITStubArg
 on MinGW. See https://bugs.webkit.org/show_bug.cgi?id=29268 */
 #define WTF_USE_JSVALUE32 1
@@ -915,6 +920,9 @@ on MinGW. See https://bugs.webkit.org/sh
 #elif CPU(X86) && OS(WINDOWS) && COMPILER(MSVC)
     #define ENABLE_JIT 1
     #define WTF_USE_JIT_STUB_ARGUMENT_REGISTER 1
+#elif CPU(X86) && OS(CYGWIN) && GCC_VERSION >= 40100
+    #define ENABLE_JIT 1
+    #define WTF_USE_JIT_STUB_ARGUMENT_VA_LIST 1
 #elif CPU(X86) && OS(LINUX) && GCC_VERSION >= 40100
     #define ENABLE_JIT 1
     #define WTF_USE_JIT_STUB_ARGUMENT_VA_LIST 1
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/3rdparty/sqlite/sqlite3.c qtwin-4.7.4/src/3rdparty/sqlite/sqlite3.c
--- qtwin-4.7.4.orig/src/3rdparty/sqlite/sqlite3.c	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/3rdparty/sqlite/sqlite3.c	2011-10-01 22:50:20.703700000 +0200
@@ -27032,6 +27032,7 @@ SQLITE_API int sqlite3_os_end(void){
 #include <winbase.h>
 
 #ifdef __CYGWIN__
+#include <cygwin/version.h>
 # include <sys/cygwin.h>
 #endif
 
@@ -28741,8 +28742,13 @@ static int winFullPathname(
 ){
   
 #if defined(__CYGWIN__)
+  UNUSED_PARAMETER(pVfs);
+#if CYGWIN_VERSION_DLL_MAJOR >= 1007
+  cygwin_conv_path(CCP_POSIX_TO_WIN_A, zRelative, zFull, nFull);
+#else
   UNUSED_PARAMETER(nFull);
   cygwin_conv_to_full_win32_path(zRelative, zFull);
+#endif
   return SQLITE_OK;
 #endif
 
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/3rdparty/webkit/JavaScriptCore/jit/JITStubs.cpp qtwin-4.7.4/src/3rdparty/webkit/JavaScriptCore/jit/JITStubs.cpp
--- qtwin-4.7.4.orig/src/3rdparty/webkit/JavaScriptCore/jit/JITStubs.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/3rdparty/webkit/JavaScriptCore/jit/JITStubs.cpp	2011-10-01 22:50:20.719300000 +0200
@@ -65,7 +65,7 @@ using namespace std;
 
 namespace JSC {
 
-#if OS(DARWIN) || OS(WINDOWS)
+#if OS(DARWIN) || OS(WINDOWS) || OS(CYGWIN)
 #define SYMBOL_STRING(name) "_" #name
 #else
 #define SYMBOL_STRING(name) #name
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/3rdparty/webkit/JavaScriptCore/runtime/Collector.cpp qtwin-4.7.4/src/3rdparty/webkit/JavaScriptCore/runtime/Collector.cpp
--- qtwin-4.7.4.orig/src/3rdparty/webkit/JavaScriptCore/runtime/Collector.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/3rdparty/webkit/JavaScriptCore/runtime/Collector.cpp	2011-10-01 22:50:20.719300000 +0200
@@ -53,7 +53,7 @@
 #include <mach/thread_act.h>
 #include <mach/vm_map.h>
 
-#elif OS(WINDOWS)
+#elif OS(WINDOWS) || OS(CYGWIN)
 
 #include <windows.h>
 #include <malloc.h>
@@ -546,7 +546,7 @@ static inline void* currentThreadStackBa
         MOV pTib, EAX
     }
     return static_cast<void*>(pTib->StackBase);
-#elif OS(WINDOWS) && CPU(X86) && COMPILER(GCC)
+#elif (OS(WINDOWS) || OS(CYGWIN)) && CPU(X86) && COMPILER(GCC)
     // offset 0x18 from the FS segment register gives a pointer to
     // the thread information block for the current thread
     NT_TIB* pTib;
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/3rdparty/webkit/JavaScriptCore/wtf/Platform.h qtwin-4.7.4/src/3rdparty/webkit/JavaScriptCore/wtf/Platform.h
--- qtwin-4.7.4.orig/src/3rdparty/webkit/JavaScriptCore/wtf/Platform.h	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/3rdparty/webkit/JavaScriptCore/wtf/Platform.h	2011-10-01 22:50:20.719300000 +0200
@@ -325,6 +325,11 @@
 #define WTF_OS_AIX 1
 #endif
 
+/* OS(CYGWIN) - Cygwin; note that for this platform OS(UNIX) is also defined */
+#if defined(__CYGWIN__)
+#define WTF_OS_CYGWIN 1
+#endif
+
 /* OS(DARWIN) - Any Darwin-based OS, including Mac OS X and iPhone OS */
 #ifdef __APPLE__
 #define WTF_OS_DARWIN 1
@@ -685,7 +690,7 @@
 
 #if !OS(WINDOWS) && !OS(SOLARIS) && !OS(QNX) \
     && !OS(SYMBIAN) && !OS(HAIKU) && !OS(RVCT) \
-    && !OS(ANDROID) && !PLATFORM(BREWMP)
+    && !OS(ANDROID) && !PLATFORM(BREWMP) && !OS(CYGWIN)
 #define HAVE_TM_GMTOFF 1
 #define HAVE_TM_ZONE 1
 #define HAVE_TIMEGM 1
@@ -889,7 +894,7 @@
 #define WTF_USE_JSVALUE64 1
 #elif CPU(ARM) || CPU(PPC64) || CPU(MIPS)
 #define WTF_USE_JSVALUE32 1
-#elif OS(WINDOWS) && COMPILER(MINGW)
+#elif (OS(WINDOWS) && COMPILER(MINGW)) || OS(CYGWIN)
 /* Using JSVALUE32_64 causes padding/alignement issues for JITStubArg
 on MinGW. See https://bugs.webkit.org/show_bug.cgi?id=29268 */
 #define WTF_USE_JSVALUE32 1
@@ -933,6 +938,9 @@ on MinGW. See https://bugs.webkit.org/sh
 #elif CPU(X86) && OS(WINDOWS) && COMPILER(MSVC)
     #define ENABLE_JIT 1
     #define WTF_USE_JIT_STUB_ARGUMENT_REGISTER 1
+#elif CPU(X86) && OS(CYGWIN) && GCC_VERSION >= 40100
+    #define ENABLE_JIT 1
+    #define WTF_USE_JIT_STUB_ARGUMENT_VA_LIST 1
 #elif CPU(X86) && OS(LINUX) && GCC_VERSION >= 40100
     #define ENABLE_JIT 1
     #define WTF_USE_JIT_STUB_ARGUMENT_VA_LIST 1
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/3rdparty/webkit/WebCore/loader/FTPDirectoryParser.cpp qtwin-4.7.4/src/3rdparty/webkit/WebCore/loader/FTPDirectoryParser.cpp
--- qtwin-4.7.4.orig/src/3rdparty/webkit/WebCore/loader/FTPDirectoryParser.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/3rdparty/webkit/WebCore/loader/FTPDirectoryParser.cpp	2011-10-01 22:50:20.734900000 +0200
@@ -37,7 +37,7 @@
 using namespace WTF;
 
 namespace WebCore {
-#if PLATFORM(QT) && defined(Q_WS_WIN32)
+#if PLATFORM(QT) && defined(Q_WS_WIN32) && !defined(Q_CYGWIN_WIN)
 
 // Replacement for gmtime_r() which is not available on MinGW.
 // We use this on Win32 Qt platform for portability.
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/3rdparty/webkit/WebCore/plugins/PluginDatabase.cpp qtwin-4.7.4/src/3rdparty/webkit/WebCore/plugins/PluginDatabase.cpp
--- qtwin-4.7.4.orig/src/3rdparty/webkit/WebCore/plugins/PluginDatabase.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/3rdparty/webkit/WebCore/plugins/PluginDatabase.cpp	2011-10-01 22:50:20.734900000 +0200
@@ -410,7 +410,9 @@ void PluginDatabase::getPluginPathsInDir
     // FIXME: This should be a case insensitive set.
     HashSet<String> uniqueFilenames;
 
-#if defined(XP_UNIX)
+#if defined(__CYGWIN__)
+    String fileNameFilter("*.dll");
+#elif defined(XP_UNIX)
     String fileNameFilter("*.so");
 #else
     String fileNameFilter("");
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/animation/qabstractanimation_p.h qtwin-4.7.4/src/corelib/animation/qabstractanimation_p.h
--- qtwin-4.7.4.orig/src/corelib/animation/qabstractanimation_p.h	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/animation/qabstractanimation_p.h	2011-10-01 22:50:20.734900000 +0200
@@ -59,7 +59,7 @@
 #include <QtCore/qelapsedtimer.h>
 #include <private/qobject_p.h>
 
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
 #include <qt_windows.h>
 #endif
 
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/arch/arch.pri qtwin-4.7.4/src/corelib/arch/arch.pri
--- qtwin-4.7.4.orig/src/corelib/arch/arch.pri	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/arch/arch.pri	2011-10-01 22:50:20.734900000 +0200
@@ -1,7 +1,7 @@
-win32:HEADERS += arch/qatomic_windows.h \
+win32|cygwin-g++-win32:HEADERS += arch/qatomic_windows.h \
                  arch/qatomic_generic.h
 
-win32-g++*:HEADERS += arch/qatomic_i386.h \
+win32-g++*|cygwin-g++-win32:HEADERS += arch/qatomic_i386.h \
                       arch/qatomic_x86_64.h
 
 mac:HEADERS += arch/qatomic_macosx.h \
@@ -12,7 +12,7 @@ symbian:HEADERS +=  arch/qatomic_symbian
 
 vxworks:HEADERS += arch/qatomic_vxworks.h
 
-!wince*:!win32:!mac:!symbian:HEADERS += arch/qatomic_alpha.h \
+!wince*:!win32:!mac:!symbian:!cygwin-g++-win32:HEADERS += arch/qatomic_alpha.h \
                        arch/qatomic_avr32.h \
                        arch/qatomic_ia64.h \
                        arch/qatomic_parisc.h \
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/codecs/qtextcodec.cpp qtwin-4.7.4/src/corelib/codecs/qtextcodec.cpp
--- qtwin-4.7.4.orig/src/corelib/codecs/qtextcodec.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/codecs/qtextcodec.cpp	2011-10-01 22:50:20.750500000 +0200
@@ -598,7 +598,7 @@ static void setupLocaleMapper()
     localeMapper = QTextCodec::codecForName("System");
 #else
 
-#ifndef QT_NO_ICONV
+#if !defined(QT_NO_ICONV) && !defined(Q_OS_CYGWIN)
     localeMapper = QTextCodec::codecForName("System");
 #endif
 
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/concurrent/qtconcurrentexception.cpp qtwin-4.7.4/src/corelib/concurrent/qtconcurrentexception.cpp
--- qtwin-4.7.4.orig/src/corelib/concurrent/qtconcurrentexception.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/concurrent/qtconcurrentexception.cpp	2011-10-01 22:50:20.750500000 +0200
@@ -205,7 +205,7 @@ void ExceptionStore::throwPossibleExcept
 {
     /* On win32-g++, with GCC 3.4.2 std::uncaught_exception() isn't reliable. */
     if (hasException()
-#ifndef Q_CC_MINGW
+#ifndef Q_CC_GNU
         && std::uncaught_exception() == false
 #endif
             ) {
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/corelib.pro qtwin-4.7.4/src/corelib/corelib.pro
--- qtwin-4.7.4.orig/src/corelib/corelib.pro	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/corelib.pro	2011-10-01 22:50:20.750500000 +0200
@@ -22,7 +22,7 @@ include(xml/xml.pri)
 mac|darwin:LIBS_PRIVATE += -framework ApplicationServices
 
 mac:lib_bundle:DEFINES += QT_NO_DEBUG_PLUGIN_CHECK
-win32:DEFINES-=QT_NO_CAST_TO_ASCII
+win32|cygwin-g++-win32:DEFINES-=QT_NO_CAST_TO_ASCII
 
 QMAKE_LIBS += $$QMAKE_LIBS_CORE
 
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/global/qglobal.cpp qtwin-4.7.4/src/corelib/global/qglobal.cpp
--- qtwin-4.7.4.orig/src/corelib/global/qglobal.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/global/qglobal.cpp	2011-10-01 22:50:20.766100000 +0200
@@ -1704,7 +1704,7 @@ static QSysInfo::MacVersion macVersion()
 }
 const QSysInfo::MacVersion QSysInfo::MacintoshVersion = macVersion();
 
-#elif defined(Q_OS_WIN32) || defined(Q_OS_CYGWIN) || defined(Q_OS_WINCE)
+#elif defined(Q_OS_WIN32) || defined(Q_CYGWIN_WIN) || defined(Q_OS_WINCE)
 
 QT_BEGIN_INCLUDE_NAMESPACE
 #include "qt_windows.h"
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/global/qglobal.h qtwin-4.7.4/src/corelib/global/qglobal.h
--- qtwin-4.7.4.orig/src/corelib/global/qglobal.h	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/global/qglobal.h	2011-10-01 22:50:20.766100000 +0200
@@ -815,6 +815,8 @@ namespace QT_NAMESPACE {}
 #    if !defined(QT_NO_S60)
 #      define Q_WS_S60
 #    endif
+#  elif defined(Q_CYGWIN_WIN)
+#    define Q_WS_WIN32
 #  elif !defined(Q_WS_QWS)
 #    define Q_WS_X11
 #  endif
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/global/qnamespace.h qtwin-4.7.4/src/corelib/global/qnamespace.h
--- qtwin-4.7.4.orig/src/corelib/global/qnamespace.h	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/global/qnamespace.h	2011-10-01 22:50:20.766100000 +0200
@@ -1216,7 +1216,7 @@ public:
     };
 #endif // Q_OS_MAC
 
-#if defined(Q_OS_WIN) || defined(Q_OS_CYGWIN)
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
 #ifndef qdoc
     typedef int WindowsVersion;
 
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/global/qt_windows.h qtwin-4.7.4/src/corelib/global/qt_windows.h
--- qtwin-4.7.4.orig/src/corelib/global/qt_windows.h	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/global/qt_windows.h	2011-10-01 22:50:20.781700000 +0200
@@ -53,7 +53,7 @@
 #endif
 #endif
 
-#if defined(Q_CC_MINGW)
+#if defined(Q_CC_GNU)
 // mingw's windows.h does not set _WIN32_WINNT, resulting breaking compilation
 #ifndef WINVER
 #define WINVER 0x500
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/io/io.pri qtwin-4.7.4/src/corelib/io/io.pri
--- qtwin-4.7.4.orig/src/corelib/io/io.pri	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/io/io.pri	2011-10-01 22:50:20.781700000 +0200
@@ -73,6 +73,7 @@ win32 {
             HEADERS += io/qfilesystemwatcher_fsevents_p.h
             SOURCES += io/qsettings_mac.cpp io/qfilesystemwatcher_fsevents.cpp
         }
+	cygwin-g++-win32:SOURCES += io/qsettings_win.cpp
 
         linux-*:!symbian {
             SOURCES += \
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/io/qdir.cpp qtwin-4.7.4/src/corelib/io/qdir.cpp
--- qtwin-4.7.4.orig/src/corelib/io/qdir.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/io/qdir.cpp	2011-10-01 22:50:20.781700000 +0200
@@ -61,11 +61,16 @@
 
 #include <stdlib.h>
 
+#ifdef Q_OS_CYGWIN
+#include <sys/cygwin.h>
+#include <cygwin/version.h>
+#endif
+
 QT_BEGIN_NAMESPACE
 
 static QString driveSpec(const QString &path)
 {
-#if defined(Q_OS_WIN) || defined(Q_OS_SYMBIAN)
+#if defined(Q_OS_WIN) || defined(Q_OS_SYMBIAN) || defined(Q_OS_CYGWIN)
     if (path.size() < 2)
         return QString();
     char c = path.at(0).toAscii();
@@ -168,7 +173,7 @@ public:
     {
         if ((p.endsWith(QLatin1Char('/')) || p.endsWith(QLatin1Char('\\')))
                 && p.length() > 1) {
-#if defined(Q_OS_WIN) || defined(Q_OS_SYMBIAN)
+#if defined(Q_OS_WIN) || defined(Q_OS_SYMBIAN) || defined(Q_OS_CYGWIN)
             if (!(p.length() == 3 && p.at(1) == QLatin1Char(':')))
 #endif
                 p.truncate(p.length() - 1);
@@ -738,7 +743,7 @@ QString QDir::relativeFilePath(const QSt
         fileDriveMissing = true;
     }
 
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_OS_CYGWIN)
     if (fileDrive.toLower() != dirDrive.toLower()
         || (file.startsWith(QLatin1String("//"))
         && !dir.startsWith(QLatin1String("//"))))
@@ -759,7 +764,7 @@ QString QDir::relativeFilePath(const QSt
 
     int i = 0;
     while (i < dirElts.size() && i < fileElts.size() &&
-#if defined(Q_OS_WIN) || defined(Q_OS_SYMBIAN)
+#if defined(Q_OS_WIN) || defined(Q_OS_SYMBIAN) || defined(Q_OS_CYGWIN)
            dirElts.at(i).toLower() == fileElts.at(i).toLower())
 #else
            dirElts.at(i) == fileElts.at(i))
@@ -840,6 +845,125 @@ QString QDir::fromNativeSeparators(const
 }
 
 /*!
+    On Cygwin, returns \a pathName converted to native Windows style.
+    On Windows, this method is an alias for toNativeSeparators().
+    On Unix and others, returns the unmodified argument.
+
+    \sa posixPath()
+*/
+QString QDir::win32Path(const QString &pathName)
+{
+#if defined(Q_OS_CYGWIN)
+    if (pathName.isEmpty())
+        return pathName;
+
+# if CYGWIN_VERSION_DLL_MAJOR >= 1007
+    QByteArray buf(PATH_MAX, Qt::Uninitialized);
+    if (cygwin_conv_path(CCP_POSIX_TO_WIN_A | CCP_RELATIVE,
+                pathName.toUtf8().constData(), buf.data(), buf.size())) {
+        qWarning("win32Path: Cannot convert path: '%s'", qPrintable(pathName));
+        return pathName;
+    }
+    return QString::fromUtf8(buf.constData());
+# else
+    QByteArray buf(PATH_MAX, Qt::Uninitialized);
+    cygwin_conv_to_win32_path(pathName.toLocal8Bit().constData(), buf.data());
+    return QString::fromLocal8Bit(buf.constData());
+# endif
+#elif defined(Q_FS_FAT) || defined(Q_OS_OS2EMX) || defined(Q_OS_SYMBIAN)
+    return toNativeSeparators(pathName);
+#else
+    return pathName;
+#endif
+}
+
+/*!
+    On Cygwin, returns \a pathList converted to native Windows style.
+    On Windows, Unix and others, returns the unmodified argument.
+*/
+QString QDir::win32PathList(const QString &pathList)
+{
+#if defined(Q_OS_CYGWIN)
+    if (pathList.isEmpty())
+        return pathList;
+
+# if CYGWIN_VERSION_DLL_MAJOR >= 1007
+    char const * const pl = pathList.toUtf8().constData();
+    if (!cygwin_posix_path_list_p(pl))
+        return pathList;
+
+    int const size = cygwin_conv_path_list(CCP_POSIX_TO_WIN_A | CCP_RELATIVE,
+                                           pl, NULL, 0);
+    QByteArray buf(size, Qt::Uninitialized);
+    if (cygwin_conv_path_list(CCP_POSIX_TO_WIN_A | CCP_RELATIVE,
+                              pl, buf.data(), buf.size())) {
+        qWarning("win32PathList: Cannot convert path list: '%s'", qPrintable(pathList));
+        return pathList;
+    }
+    return QString::fromUtf8(buf.constData());
+# else
+    char const * const pl = pathList.toLocal8Bit().constData();
+    if (!cygwin_posix_path_list_p(pl))
+        return pathList;
+    int const size = cygwin_posix_to_win32_path_list_buf_size(pl);
+    QByteArray buf(size, Qt::Uninitialized);
+    cygwin_posix_to_win32_path_list(pl, buf.data());
+    return QString::fromLocal8Bit(buf.constData());
+# endif
+#else
+    return pathList;
+#endif
+}
+
+/*!
+    On Cygwin, returns \a pathName converted to posix style.
+    On Windows, Unix and others, returns the unmodified argument.
+
+    \sa win32Path()
+*/
+QString QDir::posixPath(const QString &pathName)
+{
+#if defined(Q_OS_CYGWIN)
+    if (pathName.isEmpty())
+        return pathName;
+
+# if CYGWIN_VERSION_DLL_MAJOR >= 1007
+    bool isWinAbsPath = pathName.startsWith(QLatin1Char('\\')) ||
+                (pathName.size() > 1 && pathName.at(1) == QLatin1Char(':'));
+
+    if (!isWinAbsPath) {
+        QString path(pathName);
+        for (int i = 0; i < (int)path.length(); ++i) {
+            if (path[i] == QLatin1Char('\\'))
+                path[i] = QLatin1Char('/');
+        }
+        return path;
+    }
+
+    QByteArray buf(PATH_MAX, Qt::Uninitialized);
+
+    if (cygwin_conv_path(CCP_WIN_A_TO_POSIX | CCP_RELATIVE,
+                pathName.toUtf8().constData(), buf.data(), buf.size())) {
+        qWarning("posixPath: Cannot convert path: '%s'", qPrintable(pathName));
+        QString path(pathName);
+        for (int i = 0; i < (int)path.length(); ++i) {
+            if (path[i] == QLatin1Char('\\'))
+                path[i] = QLatin1Char('/');
+        }
+        return path;
+    }
+    return QString::fromUtf8(buf.constData());
+# else
+    QByteArray buf(PATH_MAX, Qt::Uninitialized);
+    cygwin_conv_to_posix_path(pathName.toLocal8Bit().constData(), buf.data());
+    return QString::fromLocal8Bit(buf.constData());
+# endif
+#else
+    return pathName;
+#endif
+}
+
+/*!
     Changes the QDir's directory to \a dirName.
 
     Returns true if the new directory exists and is readable;
@@ -1713,7 +1837,9 @@ QFileInfoList QDir::drives()
 */
 QChar QDir::separator()
 {
-#if defined (Q_FS_FAT) || defined(Q_WS_WIN) || defined(Q_OS_SYMBIAN)
+#if defined(Q_OS_CYGWIN)
+    return QLatin1Char('/');
+#elif defined (Q_FS_FAT) || defined(Q_WS_WIN) || defined(Q_OS_SYMBIAN)
     return QLatin1Char('\\');
 #elif defined(Q_OS_UNIX)
     return QLatin1Char('/');
@@ -1971,12 +2097,20 @@ QString QDir::cleanPath(const QString &p
     QChar *out = outVector.data();
 
     const QChar *p = name.unicode();
+#ifdef Q_OS_CYGWIN
+    bool unc = false;
+#endif
     for (int i = 0, last = -1, iwrite = 0; i < len; ++i) {
         if (p[i] == QLatin1Char('/')) {
             while (i < len-1 && p[i+1] == QLatin1Char('/')) {
-#if defined(Q_OS_WIN) && !defined(Q_OS_WINCE) //allow unc paths
+#if defined(Q_OS_WIN) && !defined(Q_OS_WINCE) // allow unc paths
                 if (!i)
                     break;
+#elif defined(Q_OS_CYGWIN)
+                if (!i) {
+                    unc = true;
+                    break;
+                }
 #endif
                 i++;
             }
@@ -2036,6 +2170,8 @@ QString QDir::cleanPath(const QString &p
             } else if (last != -1 && iwrite - last == 1) {
 #if defined(Q_OS_WIN) || defined(Q_OS_SYMBIAN)
                 eaten = (iwrite > 2);
+#elif defined(Q_OS_CYGWIN)
+                eaten = unc ? (iwrite > 2) : true;
 #else
                 eaten = true;
 #endif
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/io/qdir.h qtwin-4.7.4/src/corelib/io/qdir.h
--- qtwin-4.7.4.orig/src/corelib/io/qdir.h	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/io/qdir.h	2011-10-01 22:50:20.781700000 +0200
@@ -150,6 +150,9 @@ public:
 #endif
     static QString toNativeSeparators(const QString &pathName);
     static QString fromNativeSeparators(const QString &pathName);
+    static QString win32Path(const QString &pathName);
+    static QString win32PathList(const QString &pathList);
+    static QString posixPath(const QString &pathName);
 
     bool cd(const QString &dirName);
     bool cdUp();
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/io/qfsfileengine.cpp qtwin-4.7.4/src/corelib/io/qfsfileengine.cpp
--- qtwin-4.7.4.orig/src/corelib/io/qfsfileengine.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/io/qfsfileengine.cpp	2011-10-01 22:50:20.797300000 +0200
@@ -148,7 +148,7 @@ QString QFSFileEnginePrivate::canonicali
     if (path.size() == 1 && path.at(0) == QLatin1Char('/'))
         return path;
 #endif
-#if defined(Q_OS_LINUX) || defined(Q_OS_SYMBIAN) || defined(Q_OS_MAC)
+#if defined(Q_OS_UNIX)
     // ... but Linux with uClibc does not have it
 #if !defined(__UCLIBC__)
     char *ret = 0;
@@ -188,7 +188,7 @@ QString QFSFileEnginePrivate::canonicali
 
     known.insert(path);
     do {
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_OS_CYGWIN)
         // UNC, skip past the first two elements
         if (separatorPos == 0 && tmpPath.startsWith(QLatin1String("//")))
             separatorPos = tmpPath.indexOf(slash, 2);
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/io/qfsfileengine_iterator_unix.cpp qtwin-4.7.4/src/corelib/io/qfsfileengine_iterator_unix.cpp
--- qtwin-4.7.4.orig/src/corelib/io/qfsfileengine_iterator_unix.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/io/qfsfileengine_iterator_unix.cpp	2011-10-01 22:50:20.797300000 +0200
@@ -53,7 +53,7 @@ class QFSFileEngineIteratorPlatformSpeci
 public:
     inline QFSFileEngineIteratorPlatformSpecificData()
         : dir(0), dirEntry(0), done(false)
-#if defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_CYGWIN) && !defined(Q_OS_SYMBIAN)
+#if defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_SYMBIAN)
           , mt_file(0)
 #endif
     {}
@@ -62,7 +62,7 @@ public:
     QT_DIRENT *dirEntry;
     bool done;
 
-#if defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_CYGWIN) && !defined(Q_OS_SYMBIAN)
+#if defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_SYMBIAN)
     // for readdir_r
     QT_DIRENT *mt_file;
 #endif
@@ -75,7 +75,7 @@ void QFSFileEngineIterator::advance()
     if (!platform->dir)
         return;
 
-#if defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_CYGWIN) && !defined(Q_OS_SYMBIAN)
+#if defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_SYMBIAN)
     if (QT_READDIR_R(platform->dir, platform->mt_file, &platform->dirEntry) != 0)
         platform->done = true;
 #else
@@ -86,7 +86,7 @@ void QFSFileEngineIterator::advance()
         QT_CLOSEDIR(platform->dir);
         platform->dir = 0;
         platform->done = true;
-#if defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_CYGWIN) && !defined(Q_OS_SYMBIAN)
+#if defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_SYMBIAN)
         delete [] platform->mt_file;
         platform->mt_file = 0;
 #endif
@@ -102,7 +102,7 @@ void QFSFileEngineIterator::deletePlatfo
 {
     if (platform->dir) {
         QT_CLOSEDIR(platform->dir);
-#if defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_CYGWIN) && !defined(Q_OS_SYMBIAN)
+#if defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_SYMBIAN)
         delete [] platform->mt_file;
         platform->mt_file = 0;
 #endif
@@ -123,7 +123,7 @@ bool QFSFileEngineIterator::hasNext() co
             if ((int) maxPathName == -1)
                 maxPathName = FILENAME_MAX;
             maxPathName += sizeof(QT_DIRENT) + 1;
-#if defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_CYGWIN) && !defined(Q_OS_SYMBIAN)
+#if defined(_POSIX_THREAD_SAFE_FUNCTIONS) && !defined(Q_OS_SYMBIAN)
             if (that->platform->mt_file)
                 delete [] that->platform->mt_file;
             that->platform->mt_file = (QT_DIRENT *)new char[maxPathName];
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/io/qfsfileengine_p.h qtwin-4.7.4/src/corelib/io/qfsfileengine_p.h
--- qtwin-4.7.4.orig/src/corelib/io/qfsfileengine_p.h	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/io/qfsfileengine_p.h	2011-10-01 22:50:20.797300000 +0200
@@ -71,7 +71,7 @@ class Q_AUTOTEST_EXPORT QFSFileEnginePri
     Q_DECLARE_PUBLIC(QFSFileEngine)
 
 public:
-#ifdef Q_WS_WIN
+#if defined(Q_WS_WIN) && !defined(Q_CYGWIN_WIN)
     static QString longFileName(const QString &path);
 #endif
     static QString canonicalized(const QString &path);
@@ -108,7 +108,7 @@ public:
     bool unmap(uchar *ptr);
 
     FILE *fh;
-#ifdef Q_WS_WIN
+#if defined(Q_WS_WIN) && !defined(Q_CYGWIN_WIN)
     HANDLE fileHandle;
     HANDLE mapHandle;
     QHash<uchar *, DWORD /* offset % AllocationGranularity */> maps;
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/io/qfsfileengine_unix.cpp qtwin-4.7.4/src/corelib/io/qfsfileengine_unix.cpp
--- qtwin-4.7.4.orig/src/corelib/io/qfsfileengine_unix.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/io/qfsfileengine_unix.cpp	2011-10-01 22:50:20.812900000 +0200
@@ -117,6 +117,26 @@ void QFSFileEnginePrivate::setSymbianErr
 
 #endif
 
+#ifdef Q_OS_CYGWIN
+static QString nativeAbsoluteFilePath(const QString &path)
+{
+    QString absPath;
+    QVarLengthArray<wchar_t, MAX_PATH> buf(qMax(MAX_PATH, path.size() + 1));
+    wchar_t *fileName = 0;
+    DWORD retLen = GetFullPathName((wchar_t*)path.utf16(), buf.size(), buf.data(), &fileName);
+    if (retLen > (DWORD)buf.size()) {
+        buf.resize(retLen);
+        retLen = GetFullPathName((wchar_t*)path.utf16(), buf.size(), buf.data(), &fileName);
+    }
+    if (retLen != 0)
+        absPath = QString::fromWCharArray(buf.data(), retLen);
+    // Readd ending whitespace stripped off by GetFullPathName
+    if (!path.isEmpty() && path.at(path.size() - 1) == QLatin1Char(' '))
+        absPath.append(QLatin1Char(' '));
+    return absPath.replace(QLatin1Char('\\'), QLatin1Char('/'));
+}
+#endif
+
 /*!
     \internal
 
@@ -559,7 +579,7 @@ bool QFSFileEngine::rmdir(const QString
 
 bool QFSFileEngine::caseSensitive() const
 {
-#if defined(Q_OS_SYMBIAN)
+#if defined(Q_OS_SYMBIAN) || defined(Q_OS_CYGWIN)
     return false;
 #else
     return true;
@@ -1035,17 +1055,40 @@ QString QFSFileEngine::fileName(FileName
         int slash = d->filePath.lastIndexOf(QLatin1Char('/'));
         if (slash != -1)
             return d->filePath.mid(slash + 1);
+#ifdef Q_OS_CYGWIN
+	int colon = d->filePath.lastIndexOf(QLatin1Char(':'));
+	if(colon != -1)
+	    return d->filePath.mid(colon + 1);
+#endif
     } else if (file == PathName) {
         int slash = d->filePath.lastIndexOf(QLatin1Char('/'));
-        if (slash == -1)
+        if (slash == -1) {
+#ifdef Q_OS_CYGWIN
+	    if (d->filePath.length() >= 2 && d->filePath[1] == QLatin1Char(':'))
+		return d->filePath.left(2);
+#endif
             return QLatin1String(".");
-        else if (!slash)
-            return QLatin1String("/");
-        return d->filePath.left(slash);
+	} else {
+	    if (!slash)
+		return QLatin1String("/");
+#ifdef Q_OS_CYGWIN
+	    if (slash == 2 && d->filePath[1] == QLatin1Char(':'))
+		++slash;
+#endif
+	    return d->filePath.left(slash);
+	}
     } else if (file == AbsoluteName || file == AbsolutePathName) {
         QString ret;
+#ifndef Q_OS_CYGWIN
         if (d->filePath.isEmpty() || !d->filePath.startsWith(QLatin1Char('/')))
             ret = QDir::currentPath();
+#else
+	if (isRelativePath())
+            ret = QDir::currentPath();
+	else if (d->filePath.size() > 2 && d->filePath[1] == QLatin1Char(':')
+		&& d->filePath[2] != QLatin1Char('/'))
+	    ret = nativeAbsoluteFilePath(d->filePath);
+#endif
         if (!d->filePath.isEmpty() && d->filePath != QLatin1String(".")) {
             if (!ret.isEmpty() && !ret.endsWith(QLatin1Char('/')))
                 ret += QLatin1Char('/');
@@ -1063,6 +1106,10 @@ QString QFSFileEngine::fileName(FileName
                 return QDir::currentPath();
             else if (!slash)
                 return QLatin1String("/");
+#ifdef Q_OS_CYGWIN
+	    else if (ret[0] != QLatin1Char('/') && slash == 2)
+		return ret.left(3);      // include the slash
+#endif
             return ret.left(slash);
         }
         return ret;
@@ -1160,6 +1207,13 @@ bool QFSFileEngine::isRelativePath() con
     Q_D(const QFSFileEngine);
 #if defined(Q_OS_SYMBIAN)
     return isRelativePathSymbian(d->filePath);
+#elif defined(Q_OS_CYGWIN)
+    int len = d->filePath.length();
+    if (len == 0)
+        return true;
+    return d->filePath[0] != QLatin1Char('/')
+        && (len < 2 || !(d->filePath[0].isLetter()
+                         && d->filePath[1] == QLatin1Char(':')));
 #else
     return d->filePath.length() ? d->filePath[0] != QLatin1Char('/') : true;
 #endif
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/io/qprocess.cpp qtwin-4.7.4/src/corelib/io/qprocess.cpp
--- qtwin-4.7.4.orig/src/corelib/io/qprocess.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/io/qprocess.cpp	2011-10-01 22:50:20.812900000 +0200
@@ -93,7 +93,7 @@ QT_END_NAMESPACE
 #include <qsocketnotifier.h>
 #include <qtimer.h>
 
-#ifdef Q_WS_WIN
+#if defined(Q_WS_WIN) && !defined(Q_CYGWIN_WIN)
 #include <private/qwineventnotifier_p.h>
 #endif
 
@@ -751,10 +751,10 @@ QProcessPrivate::QProcessPrivate()
     dying = false;
     emittedReadyRead = false;
     emittedBytesWritten = false;
-#ifdef Q_WS_WIN
+#if defined(Q_WS_WIN) && !defined(Q_CYGWIN_WIN)
     pipeWriter = 0;
     processFinishedNotifier = 0;
-#endif // Q_WS_WIN
+#endif // Q_WS_WIN && !Q_CYGWIN_WIN
 #ifdef Q_OS_UNIX
     serial = 0;
 #endif
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/io/qprocess_unix.cpp qtwin-4.7.4/src/corelib/io/qprocess_unix.cpp
--- qtwin-4.7.4.orig/src/corelib/io/qprocess_unix.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/io/qprocess_unix.cpp	2011-10-01 22:50:20.812900000 +0200
@@ -473,6 +473,8 @@ static char **_q_dupEnvironment(const QH
     // copy it over.
 #if defined(Q_OS_MAC)
     static const char libraryPath[] = "DYLD_LIBRARY_PATH";
+#elif defined(Q_OS_CYGWIN)
+    static const char libraryPath[] = "PATH";
 #else
     static const char libraryPath[] = "LD_LIBRARY_PATH";
 #endif
@@ -670,6 +672,9 @@ void QProcessPrivate::startProcess()
     // to keep the lock held to avoid a race to catch the child.
     processManager()->add(childPid, q);
     pid = Q_PID(childPid);
+#ifdef Q_OS_CYGWIN
+    usleep(300000);
+#endif
     processManager()->unlock();
 
     // parent
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/io/qsettings.cpp qtwin-4.7.4/src/corelib/io/qsettings.cpp
--- qtwin-4.7.4.orig/src/corelib/io/qsettings.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/io/qsettings.cpp	2011-10-01 22:50:20.828500000 +0200
@@ -148,7 +148,7 @@ Q_AUTOTEST_EXPORT_HELPER bool qIsLikelyT
     return qt_isEvilFsTypeName(buf.f_fstypename);
 }
 
-#elif defined(Q_OS_LINUX) || defined(Q_OS_HURD)
+#elif defined(Q_OS_LINUX) || defined(Q_OS_HURD) || defined(Q_OS_CYGWIN)
 QT_BEGIN_INCLUDE_NAMESPACE
 # include <sys/vfs.h>
 # ifdef QT_LINUXBASE
@@ -373,7 +373,7 @@ QSettingsPrivate *QSettingsPrivate::crea
 }
 #endif
 
-#if !defined(Q_OS_WIN)
+#if !defined(Q_OS_WIN) && (!defined(Q_CYGWIN_WIN) || defined(QT_BUILD_QMAKE))
 QSettingsPrivate *QSettingsPrivate::create(const QString &fileName, QSettings::Format format)
 {
     return new QConfFileSettingsPrivate(fileName, format);
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/io/qsettings_win.cpp qtwin-4.7.4/src/corelib/io/qsettings_win.cpp
--- qtwin-4.7.4.orig/src/corelib/io/qsettings_win.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/io/qsettings_win.cpp	2011-10-01 22:50:20.828500000 +0200
@@ -378,8 +378,10 @@ typedef QVector<RegistryKey> RegistryKey
 class QWinSettingsPrivate : public QSettingsPrivate
 {
 public:
+#ifndef Q_CYGWIN_WIN
     QWinSettingsPrivate(QSettings::Scope scope, const QString &organization,
                         const QString &application);
+#endif
     QWinSettingsPrivate(QString rKey);
     ~QWinSettingsPrivate();
 
@@ -400,6 +402,7 @@ private:
     bool deleteWriteHandleOnExit;
 };
 
+#ifndef Q_CYGWIN_WIN
 QWinSettingsPrivate::QWinSettingsPrivate(QSettings::Scope scope, const QString &organization,
                                          const QString &application)
     : QSettingsPrivate(QSettings::NativeFormat, scope, organization, application)
@@ -427,6 +430,7 @@ QWinSettingsPrivate::QWinSettingsPrivate
     if (regList.isEmpty())
         setStatus(QSettings::AccessError);
 }
+#endif
 
 QWinSettingsPrivate::QWinSettingsPrivate(QString rPath)
     : QSettingsPrivate(QSettings::NativeFormat)
@@ -824,6 +828,7 @@ bool QWinSettingsPrivate::isWritable() c
     return writeHandle() != 0;
 }
 
+#ifndef Q_CYGWIN_WIN
 QSettingsPrivate *QSettingsPrivate::create(QSettings::Format format, QSettings::Scope scope,
                                            const QString &organization, const QString &application)
 {
@@ -833,10 +838,15 @@ QSettingsPrivate *QSettingsPrivate::crea
         return new QConfFileSettingsPrivate(format, scope, organization, application);
     }
 }
+#endif
 
 QSettingsPrivate *QSettingsPrivate::create(const QString &fileName, QSettings::Format format)
 {
-    if (format == QSettings::NativeFormat) {
+    if (format == QSettings::NativeFormat
+#ifdef Q_CYGWIN_WIN
+	    && fileName.startsWith(QLatin1String("HKEY_"))
+#endif
+	    ) {
         return new QWinSettingsPrivate(fileName);
     } else {
         return new QConfFileSettingsPrivate(fileName, format);
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/io/qtemporaryfile.cpp qtwin-4.7.4/src/corelib/io/qtemporaryfile.cpp
--- qtwin-4.7.4.orig/src/corelib/io/qtemporaryfile.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/io/qtemporaryfile.cpp	2011-10-01 22:50:20.828500000 +0200
@@ -278,7 +278,7 @@ static int _gettemp(char *path, int *doo
     /*NOTREACHED*/
 }
 
-#ifndef Q_WS_WIN
+#if !defined(Q_WS_WIN) || defined(Q_CYGWIN_WIN)
 static int qt_mkstemps(char *path, int slen)
 {
     int fd = 0;
@@ -366,7 +366,7 @@ bool QTemporaryFileEngine::open(QIODevic
     int suffixLength = qfilename.length() - (qfilename.lastIndexOf(QLatin1String("XXXXXX"), -1, Qt::CaseSensitive) + 6);
     char *filename = qstrdup(qfilename.toLocal8Bit());
 
-#ifndef Q_WS_WIN
+#if !defined(Q_WS_WIN) || defined(Q_CYGWIN_WIN)
     int fd = qt_mkstemps(filename, suffixLength);
     if (fd != -1) {
         // First open the fd as an external file descriptor to
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/io/qurl.cpp qtwin-4.7.4/src/corelib/io/qurl.cpp
--- qtwin-4.7.4.orig/src/corelib/io/qurl.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/io/qurl.cpp	2011-10-01 22:50:20.844100000 +0200
@@ -6033,7 +6033,7 @@ QUrl QUrl::fromLocalFile(const QString &
 {
     QUrl url;
     url.setScheme(QLatin1String("file"));
-    QString deslashified = localFile;
+    QString deslashified = QDir::posixPath(localFile);
     deslashified.replace(QLatin1Char('\\'), QLatin1Char('/'));
 
 
@@ -6280,7 +6280,7 @@ QString QUrl::dirPath() const
     QFileInfo fileInfo(path());
     if (fileInfo.isAbsolute()) {
         QString absPath = fileInfo.absolutePath();
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_OS_CYGWIN)
         if (absPath.size() > 1 && absPath.at(1) == QLatin1Char(':'))
             absPath = absPath.mid(2);
 #endif
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/kernel/kernel.pri qtwin-4.7.4/src/corelib/kernel/kernel.pri
--- qtwin-4.7.4.orig/src/corelib/kernel/kernel.pri	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/kernel/kernel.pri	2011-10-01 22:50:20.844100000 +0200
@@ -88,7 +88,21 @@ mac {
 		kernel/qcore_mac.cpp
 }
 
-unix:!symbian {
+cygwin-g++-win32 {
+        SOURCES += \
+                kernel/qcore_unix.cpp \
+                kernel/qcrashhandler.cpp \
+                kernel/qsharedmemory_unix.cpp \
+                kernel/qsystemsemaphore_unix.cpp \
+                kernel/qeventdispatcher_cygwin.cpp \
+                kernel/qcoreapplication_win.cpp
+        HEADERS += \
+                kernel/qcore_unix_p.h \
+                kernel/qcrashhandler_p.h \
+                kernel/qeventdispatcher_cygwin_p.h
+}
+
+unix:!symbian:!cygwin-g++-win32 {
 	SOURCES += \
                 kernel/qcore_unix.cpp \
                 kernel/qcrashhandler.cpp \
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/kernel/qcoreapplication.cpp qtwin-4.7.4/src/corelib/kernel/qcoreapplication.cpp
--- qtwin-4.7.4.orig/src/corelib/kernel/qcoreapplication.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/kernel/qcoreapplication.cpp	2011-10-01 22:50:20.844100000 +0200
@@ -72,6 +72,8 @@
 #  include "qeventdispatcher_symbian_p.h"
 #  include "private/qcore_symbian_p.h"
 #  include <apacmdln.h>
+#elif defined(Q_CYGWIN_WIN)
+#  include "qeventdispatcher_cygwin_p.h"
 #elif defined(Q_OS_UNIX)
 #  if !defined(QT_NO_GLIB)
 #    include "qeventdispatcher_glib_p.h"
@@ -174,7 +176,7 @@ CApaCommandLine* QCoreApplicationPrivate
 extern QString qAppFileName();
 #endif
 
-#if !defined(Q_OS_WIN)
+#if !defined(Q_OS_WIN) && !defined(Q_CYGWIN_WIN)
 #ifdef Q_OS_MAC
 QString QCoreApplicationPrivate::macMenuBarName()
 {
@@ -368,6 +370,8 @@ void QCoreApplicationPrivate::createEven
     Q_Q(QCoreApplication);
 #if defined(Q_OS_SYMBIAN)
     eventDispatcher = new QEventDispatcherSymbian(q);
+#elif defined(Q_CYGWIN_WIN)
+    eventDispatcher = new QEventDispatcherCygwin(q);
 #elif defined(Q_OS_UNIX)
 #  if !defined(QT_NO_GLIB)
     if (qgetenv("QT_NO_GLIB").isEmpty() && QEventDispatcherGlib::versionSupported())
@@ -1986,7 +1990,7 @@ QString QCoreApplication::applicationFil
     d->cachedApplicationFilePath = appPath;
     return d->cachedApplicationFilePath;
 
-#elif defined( Q_OS_UNIX )
+#elif defined( Q_OS_UNIX ) && !defined(Q_CYGWIN_WIN)
 #  ifdef Q_OS_LINUX
     // Try looking for a /proc/<pid>/exe symlink first which points to
     // the absolute path of the executable
@@ -2129,7 +2133,7 @@ QStringList QCoreApplication::arguments(
         qWarning("QCoreApplication::arguments: Please instantiate the QApplication object first");
         return list;
     }
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
     QString cmdline = QString::fromWCharArray(GetCommandLine());
 
 #if defined(Q_OS_WINCE)
@@ -2502,7 +2506,7 @@ bool QCoreApplication::filterEvent(void
         *result = 0;
     if (d->eventFilter)
         return d->eventFilter(message, result);
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
     return winEventFilter(reinterpret_cast<MSG *>(message), result);
 #else
     return false;
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/kernel/qcoreapplication.h qtwin-4.7.4/src/corelib/kernel/qcoreapplication.h
--- qtwin-4.7.4.orig/src/corelib/kernel/qcoreapplication.h	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/kernel/qcoreapplication.h	2011-10-01 22:50:20.844100000 +0200
@@ -199,6 +199,7 @@ private:
     Q_DISABLE_COPY(QCoreApplication)
 
     friend class QEventDispatcherUNIXPrivate;
+    friend class QEventDispatcherCygwinPrivate;
     friend class QApplication;
     friend class QApplicationPrivate;
     friend class QETWidget;
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/kernel/qcoreapplication_win.cpp qtwin-4.7.4/src/corelib/kernel/qcoreapplication_win.cpp
--- qtwin-4.7.4.orig/src/corelib/kernel/qcoreapplication_win.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/kernel/qcoreapplication_win.cpp	2011-10-01 22:50:20.859700000 +0200
@@ -45,6 +45,7 @@
 #include "qt_windows.h"
 #include "qvector.h"
 #include "qmutex.h"
+#include "qdir.h"
 #include "qfileinfo.h"
 #include "qcorecmdlineargs_p.h"
 #include <private/qthread_p.h>
@@ -98,7 +99,7 @@ Q_CORE_EXPORT QString qAppFileName()
     if (v == 0)
         return QString();
     else if (v <= MAX_PATH)
-        return QString::fromWCharArray(buffer);
+        return QDir::posixPath(QString::fromWCharArray(buffer));
 
     // MAX_PATH sized buffer wasn't large enough to contain the full path, use heap
     wchar_t *b = 0;
@@ -117,7 +118,7 @@ Q_CORE_EXPORT QString qAppFileName()
     QString res = QString::fromWCharArray(b);
     free(b);
 
-    return res;
+    return QDir::posixPath(res);
 }
 
 QString QCoreApplicationPrivate::appName() const
@@ -218,6 +219,7 @@ bool QCoreApplication::winEventFilter(MS
     return false;
 }
 
+#ifndef Q_CYGWIN_WIN
 void QCoreApplicationPrivate::removePostedTimerEvent(QObject *object, int timerId)
 {
     QThreadData *data = object->d_func()->threadData;
@@ -239,6 +241,7 @@ void QCoreApplicationPrivate::removePost
             }
     }
 }
+#endif
 
 #if defined(Q_WS_WIN) && !defined(QT_NO_DEBUG_STREAM)
 /*****************************************************************************
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/kernel/qcorecmdlineargs_p.h qtwin-4.7.4/src/corelib/kernel/qcorecmdlineargs_p.h
--- qtwin-4.7.4.orig/src/corelib/kernel/qcorecmdlineargs_p.h	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/kernel/qcorecmdlineargs_p.h	2011-10-02 01:08:32.000000000 +0200
@@ -58,11 +58,11 @@
 
 QT_BEGIN_NAMESPACE
 
-#if defined(Q_OS_WIN32) || defined(Q_OS_WINCE) || defined(Q_OS_SYMBIAN)
+#if defined(Q_OS_WIN32) || defined(Q_OS_WINCE) || defined(Q_OS_SYMBIAN) || defined(Q_CYGWIN_WIN)
 
 QT_BEGIN_INCLUDE_NAMESPACE
 #include "QtCore/qvector.h"
-#if defined(Q_OS_WIN32) || defined(Q_OS_WINCE)
+#if defined(Q_OS_WIN32) || defined(Q_OS_WINCE) || defined(Q_CYGWIN_WIN)
 #  include "qt_windows.h"
 #endif
 QT_END_INCLUDE_NAMESPACE
@@ -132,7 +132,7 @@ static QVector<Char*> qWinCmdLine(Char *
     return argv;
 }
 
-#if defined(Q_OS_WIN32) || defined(Q_OS_WINCE)
+#if defined(Q_OS_WIN32) || defined(Q_OS_WINCE) || defined(Q_CYGWIN_WIN)
 static inline QStringList qWinCmdArgs(QString cmdLine) // not const-ref: this might be modified
 {
     QStringList args;
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/kernel/qeventdispatcher_cygwin.cpp qtwin-4.7.4/src/corelib/kernel/qeventdispatcher_cygwin.cpp
--- qtwin-4.7.4.orig/src/corelib/kernel/qeventdispatcher_cygwin.cpp	1970-01-01 01:00:00.000000000 +0100
+++ qtwin-4.7.4/src/corelib/kernel/qeventdispatcher_cygwin.cpp	2011-10-01 23:49:41.780900000 +0200
@@ -0,0 +1,988 @@
+/****************************************************************************
+**
+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
+** All rights reserved.
+** Contact: Nokia Corporation (qt-info@nokia.com)
+**
+** This file is part of the QtCore module of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#include "qplatformdefs.h"
+
+#include "qcoreapplication.h"
+#include "qpair.h"
+#include "qsocketnotifier.h"
+#include "qthread.h"
+#include "qelapsedtimer.h"
+
+#include "qeventdispatcher_cygwin_p.h"
+#include <private/qthread_p.h>
+#include <private/qcoreapplication_p.h>
+#include <private/qcore_unix_p.h>
+
+#include <errno.h>
+#include <stdio.h>
+#include <stdlib.h>
+
+#if (_POSIX_MONOTONIC_CLOCK-0 <= 0) || defined(QT_BOOTSTRAPPED)
+#  include <sys/times.h>
+#endif
+
+//#define DEBUG_QEVENTDISPATCHER
+
+QT_BEGIN_NAMESPACE
+
+#ifndef WM_TOUCH
+#  define WM_TOUCH 0x0240
+#endif
+#ifndef QT_NO_GESTURES
+#ifndef WM_GESTURE
+#  define WM_GESTURE 0x0119
+#  define WM_GESTURENOTIFY 0x011A
+#endif
+#endif // QT_NO_GESTURES
+
+extern uint qGlobalPostedEventsCount();
+
+Q_CORE_EXPORT bool qt_disable_lowpriority_timers=false;
+
+/*****************************************************************************
+ UNIX signal handling
+ *****************************************************************************/
+
+static sig_atomic_t signal_received;
+static sig_atomic_t signals_fired[NSIG];
+
+static void signalHandler(int sig)
+{
+    signals_fired[sig] = 1;
+    signal_received = 1;
+}
+
+
+QEventDispatcherCygwinPrivate::QEventDispatcherCygwinPrivate()
+{
+    extern Qt::HANDLE qt_application_thread_id;
+    mainThread = (QThread::currentThreadId() == qt_application_thread_id);
+    bool pipefail = false;
+
+    // initialize the common parts of the event loop
+    if (qt_safe_pipe(thread_pipe, O_NONBLOCK) == -1) {
+        perror("QEventDispatcherCygwinPrivate(): Unable to create thread pipe");
+        pipefail = true;
+    }
+
+    if (pipefail)
+        qFatal("QEventDispatcherCygwinPrivate(): Can not continue without a thread pipe");
+
+    sn_highest = -1;
+
+    interrupt = false;
+}
+
+QEventDispatcherCygwinPrivate::~QEventDispatcherCygwinPrivate()
+{
+    // cleanup the common parts of the event loop
+    close(thread_pipe[0]);
+    close(thread_pipe[1]);
+
+    // cleanup timers
+    qDeleteAll(timerList);
+}
+
+int QEventDispatcherCygwinPrivate::doSelect(QEventLoop::ProcessEventsFlags flags, timeval *timeout)
+{
+    Q_Q(QEventDispatcherCygwin);
+
+    // needed in QEventDispatcherCygwin::select()
+    timerList.updateCurrentTime();
+
+    int nsel;
+    do {
+        if (mainThread) {
+            while (signal_received) {
+                signal_received = 0;
+                for (int i = 0; i < NSIG; ++i) {
+                    if (signals_fired[i]) {
+                        signals_fired[i] = 0;
+                        emit QCoreApplication::instance()->unixSignal(i);
+                    }
+                }
+            }
+        }
+
+        // Process timers and socket notifiers - the common UNIX stuff
+        int highest = 0;
+        if (! (flags & QEventLoop::ExcludeSocketNotifiers) && (sn_highest >= 0)) {
+            // return the highest fd we can wait for input on
+                sn_vec[0].select_fds = sn_vec[0].enabled_fds;
+                sn_vec[1].select_fds = sn_vec[1].enabled_fds;
+                sn_vec[2].select_fds = sn_vec[2].enabled_fds;
+            highest = sn_highest;
+        } else {
+            FD_ZERO(&sn_vec[0].select_fds);
+            FD_ZERO(&sn_vec[1].select_fds);
+            FD_ZERO(&sn_vec[2].select_fds);
+        }
+
+        FD_SET(thread_pipe[0], &sn_vec[0].select_fds);
+        highest = qMax(highest, thread_pipe[0]);
+
+        nsel = q->select(highest + 1,
+                         &sn_vec[0].select_fds,
+                         &sn_vec[1].select_fds,
+                         &sn_vec[2].select_fds,
+                         timeout);
+    } while (nsel == -1 && (errno == EINTR || errno == EAGAIN));
+
+    if (nsel == -1) {
+        if (errno == EBADF) {
+            // it seems a socket notifier has a bad fd... find out
+            // which one it is and disable it
+            fd_set fdset;
+            timeval tm;
+            tm.tv_sec = tm.tv_usec = 0l;
+
+            for (int type = 0; type < 3; ++type) {
+                QSockNotType::List &list = sn_vec[type].list;
+                if (list.size() == 0)
+                    continue;
+
+                for (int i = 0; i < list.size(); ++i) {
+                    QSockNot *sn = list[i];
+
+                    FD_ZERO(&fdset);
+                    FD_SET(sn->fd, &fdset);
+
+                    int ret = -1;
+                    do {
+                        switch (type) {
+                        case 0: // read
+                            ret = select(sn->fd + 1, &fdset, 0, 0, &tm);
+                            break;
+                        case 1: // write
+                            ret = select(sn->fd + 1, 0, &fdset, 0, &tm);
+                            break;
+                        case 2: // except
+                            ret = select(sn->fd + 1, 0, 0, &fdset, &tm);
+                            break;
+                        }
+                    } while (ret == -1 && (errno == EINTR || errno == EAGAIN));
+
+                    if (ret == -1 && errno == EBADF) {
+                        // disable the invalid socket notifier
+                        static const char *t[] = { "Read", "Write", "Exception" };
+                        qWarning("QSocketNotifier: Invalid socket %d and type '%s', disabling...",
+                                 sn->fd, t[type]);
+                        sn->obj->setEnabled(false);
+                    }
+                }
+            }
+        } else {
+            // EINVAL... shouldn't happen, so let's complain to stderr
+            // and hope someone sends us a bug report
+            perror("select");
+        }
+    }
+
+    // some other thread woke us up... consume the data on the thread pipe so that
+    // select doesn't immediately return next time
+    int nevents = 0;
+    if (nsel > 0 && FD_ISSET(thread_pipe[0], &sn_vec[0].select_fds)) {
+        char c[16];
+        while (::read(thread_pipe[0], c, sizeof(c)) > 0)
+            ;
+        if (!wakeUps.testAndSetRelease(1, 0)) {
+            // hopefully, this is dead code
+            qWarning("QEventDispatcherCygwin: internal error, wakeUps.testAndSetRelease(1, 0) failed!");
+        }
+        ++nevents;
+    }
+
+    // activate socket notifiers
+    if (! (flags & QEventLoop::ExcludeSocketNotifiers) && nsel > 0 && sn_highest >= 0) {
+        // if select says data is ready on any socket, then set the socket notifier
+        // to pending
+        for (int i=0; i<3; i++) {
+            QSockNotType::List &list = sn_vec[i].list;
+            for (int j = 0; j < list.size(); ++j) {
+                QSockNot *sn = list[j];
+                if (FD_ISSET(sn->fd, &sn_vec[i].select_fds))
+                    q->setSocketNotifierPending(sn->obj);
+            }
+        }
+    }
+    return (nevents + q->activateSocketNotifiers());
+}
+
+/*
+ * Internal functions for manipulating timer data structures.  The
+ * timerBitVec array is used for keeping track of timer identifiers.
+ */
+
+QTimerInfoList::QTimerInfoList()
+{
+#if (_POSIX_MONOTONIC_CLOCK-0 <= 0)
+    if (!QElapsedTimer::isMonotonic()) {
+        // not using monotonic timers, initialize the timeChanged() machinery
+        previousTime = qt_gettime();
+
+        tms unused;
+        previousTicks = times(&unused);
+
+        ticksPerSecond = sysconf(_SC_CLK_TCK);
+        msPerTick = 1000/ticksPerSecond;
+    } else {
+        // detected monotonic timers
+        previousTime.tv_sec = previousTime.tv_usec = 0;
+        previousTicks = 0;
+        ticksPerSecond = 0;
+        msPerTick = 0;
+    }
+#endif
+
+    firstTimerInfo = 0;
+
+    // 50 msec
+    timer_wait_max.tv_sec = 0l;
+    timer_wait_max.tv_usec = 50000l;
+}
+
+timeval QTimerInfoList::updateCurrentTime()
+{
+    return (currentTime = qt_gettime());
+}
+
+#if (_POSIX_MONOTONIC_CLOCK-0 <= 0) || defined(QT_BOOTSTRAPPED)
+
+template <>
+timeval qAbs(const timeval &t)
+{
+    timeval tmp = t;
+    if (tmp.tv_sec < 0) {
+        tmp.tv_sec = -tmp.tv_sec - 1;
+        tmp.tv_usec -= 1000000;
+    }
+    if (tmp.tv_sec == 0 && tmp.tv_usec < 0) {
+        tmp.tv_usec = -tmp.tv_usec;
+    }
+    return normalizedTimeval(tmp);
+}
+
+/*
+  Returns true if the real time clock has changed by more than 10%
+  relative to the processor time since the last time this function was
+  called. This presumably means that the system time has been changed.
+
+  If /a delta is nonzero, delta is set to our best guess at how much the system clock was changed.
+*/
+bool QTimerInfoList::timeChanged(timeval *delta)
+{
+    struct tms unused;
+    clock_t currentTicks = times(&unused);
+
+    clock_t elapsedTicks = currentTicks - previousTicks;
+    timeval elapsedTime = currentTime - previousTime;
+
+    timeval elapsedTimeTicks;
+    elapsedTimeTicks.tv_sec = elapsedTicks / ticksPerSecond;
+    elapsedTimeTicks.tv_usec = (((elapsedTicks * 1000) / ticksPerSecond) % 1000) * 1000;
+
+    timeval dummy;
+    if (!delta)
+        delta = &dummy;
+    *delta = elapsedTime - elapsedTimeTicks;
+
+    previousTicks = currentTicks;
+    previousTime = currentTime;
+
+    // If tick drift is more than 10% off compared to realtime, we assume that the clock has
+    // been set. Of course, we have to allow for the tick granularity as well.
+    timeval tickGranularity;
+    tickGranularity.tv_sec = 0;
+    tickGranularity.tv_usec = msPerTick * 1000;
+    return elapsedTimeTicks < ((qAbs(*delta) - tickGranularity) * 10);
+}
+
+void QTimerInfoList::repairTimersIfNeeded()
+{
+    if (QElapsedTimer::isMonotonic())
+        return;
+    timeval delta;
+    if (timeChanged(&delta))
+        timerRepair(delta);
+}
+
+#else // !(_POSIX_MONOTONIC_CLOCK-0 <= 0) && !defined(QT_BOOTSTRAPPED)
+
+void QTimerInfoList::repairTimersIfNeeded()
+{
+}
+
+#endif
+
+/*
+  insert timer info into list
+*/
+void QTimerInfoList::timerInsert(QTimerInfo *ti)
+{
+    int index = size();
+    while (index--) {
+        register const QTimerInfo * const t = at(index);
+        if (!(ti->timeout < t->timeout))
+            break;
+    }
+    insert(index+1, ti);
+}
+
+/*
+  repair broken timer
+*/
+void QTimerInfoList::timerRepair(const timeval &diff)
+{
+    // repair all timers
+    for (int i = 0; i < size(); ++i) {
+        register QTimerInfo *t = at(i);
+        t->timeout = t->timeout + diff;
+    }
+}
+
+/*
+  Returns the time to wait for the next timer, or null if no timers
+  are waiting.
+
+  The result is bounded to timer_wait_max.
+*/
+bool QTimerInfoList::timerWait(timeval &tm)
+{
+    timeval currentTime = updateCurrentTime();
+    repairTimersIfNeeded();
+
+    // Find first waiting timer not already active
+    QTimerInfo *t = 0;
+    for (QTimerInfoList::const_iterator it = constBegin(); it != constEnd(); ++it) {
+        if (!(*it)->activateRef) {
+            t = *it;
+            break;
+        }
+    }
+
+    if (!t)
+      return false;
+
+    if (currentTime < t->timeout) {
+        // time to wait
+        tm = t->timeout - currentTime;
+    } else {
+        // no time to wait
+        tm.tv_sec  = 0;
+        tm.tv_usec = 0;
+    }
+
+    if (timer_wait_max < tm)
+        tm = timer_wait_max;
+
+    return true;
+}
+
+void QTimerInfoList::registerTimer(int timerId, int interval, QObject *object)
+{
+    QTimerInfo *t = new QTimerInfo;
+    t->id = timerId;
+    t->interval.tv_sec  = interval / 1000;
+    t->interval.tv_usec = (interval % 1000) * 1000;
+    t->timeout = updateCurrentTime() + t->interval;
+    t->obj = object;
+    t->activateRef = 0;
+
+    timerInsert(t);
+}
+
+bool QTimerInfoList::unregisterTimer(int timerId)
+{
+    // set timer inactive
+    for (int i = 0; i < count(); ++i) {
+        register QTimerInfo *t = at(i);
+        if (t->id == timerId) {
+            // found it
+            removeAt(i);
+            if (t == firstTimerInfo)
+                firstTimerInfo = 0;
+            if (t->activateRef)
+                *(t->activateRef) = 0;
+
+            // release the timer id
+            if (!QObjectPrivate::get(t->obj)->inThreadChangeEvent)
+                QAbstractEventDispatcherPrivate::releaseTimerId(timerId);
+
+            delete t;
+            return true;
+        }
+    }
+    // id not found
+    return false;
+}
+
+bool QTimerInfoList::unregisterTimers(QObject *object)
+{
+    if (isEmpty())
+        return false;
+    for (int i = 0; i < count(); ++i) {
+        register QTimerInfo *t = at(i);
+        if (t->obj == object) {
+            // object found
+            removeAt(i);
+            if (t == firstTimerInfo)
+                firstTimerInfo = 0;
+            if (t->activateRef)
+                *(t->activateRef) = 0;
+
+            // release the timer id
+            if (!QObjectPrivate::get(t->obj)->inThreadChangeEvent)
+                QAbstractEventDispatcherPrivate::releaseTimerId(t->id);
+
+            delete t;
+            // move back one so that we don't skip the new current item
+            --i;
+        }
+    }
+    return true;
+}
+
+QList<QPair<int, int> > QTimerInfoList::registeredTimers(QObject *object) const
+{
+    QList<QPair<int, int> > list;
+    for (int i = 0; i < count(); ++i) {
+        register const QTimerInfo * const t = at(i);
+        if (t->obj == object)
+            list << QPair<int, int>(t->id, t->interval.tv_sec * 1000 + t->interval.tv_usec / 1000);
+    }
+    return list;
+}
+
+/*
+    Activate pending timers, returning how many where activated.
+*/
+int QTimerInfoList::activateTimers()
+{
+    if (qt_disable_lowpriority_timers || isEmpty())
+        return 0; // nothing to do
+
+    int n_act = 0, maxCount = 0;
+    firstTimerInfo = 0;
+
+    timeval currentTime = updateCurrentTime();
+    repairTimersIfNeeded();
+
+
+    // Find out how many timer have expired
+    for (QTimerInfoList::const_iterator it = constBegin(); it != constEnd(); ++it) {
+        if (currentTime < (*it)->timeout)
+            break;
+        maxCount++;
+    }
+
+    //fire the timers.
+    while (maxCount--) {
+        if (isEmpty())
+            break;
+
+        QTimerInfo *currentTimerInfo = first();
+        if (currentTime < currentTimerInfo->timeout)
+            break; // no timer has expired
+
+        if (!firstTimerInfo) {
+            firstTimerInfo = currentTimerInfo;
+        } else if (firstTimerInfo == currentTimerInfo) {
+            // avoid sending the same timer multiple times
+            break;
+        } else if (currentTimerInfo->interval <  firstTimerInfo->interval
+                   || currentTimerInfo->interval == firstTimerInfo->interval) {
+            firstTimerInfo = currentTimerInfo;
+        }
+
+        // remove from list
+        removeFirst();
+
+        // determine next timeout time
+        currentTimerInfo->timeout += currentTimerInfo->interval;
+        if (currentTimerInfo->timeout < currentTime)
+            currentTimerInfo->timeout = currentTime + currentTimerInfo->interval;
+
+        // reinsert timer
+        timerInsert(currentTimerInfo);
+        if (currentTimerInfo->interval.tv_usec > 0 || currentTimerInfo->interval.tv_sec > 0)
+            n_act++;
+
+        if (!currentTimerInfo->activateRef) {
+            // send event, but don't allow it to recurse
+            currentTimerInfo->activateRef = &currentTimerInfo;
+
+            QTimerEvent e(currentTimerInfo->id);
+            QCoreApplication::sendEvent(currentTimerInfo->obj, &e);
+
+            if (currentTimerInfo)
+                currentTimerInfo->activateRef = 0;
+        }
+    }
+
+    firstTimerInfo = 0;
+    return n_act;
+}
+
+QEventDispatcherCygwin::QEventDispatcherCygwin(QObject *parent)
+    : QAbstractEventDispatcher(*new QEventDispatcherCygwinPrivate, parent)
+{ }
+
+QEventDispatcherCygwin::QEventDispatcherCygwin(QEventDispatcherCygwinPrivate &dd, QObject *parent)
+    : QAbstractEventDispatcher(dd, parent)
+{ }
+
+QEventDispatcherCygwin::~QEventDispatcherCygwin()
+{
+    Q_D(QEventDispatcherCygwin);
+    d->threadData->eventDispatcher = 0;
+}
+
+int QEventDispatcherCygwin::select(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds,
+                                 timeval *timeout)
+{
+    return qt_safe_select(nfds, readfds, writefds, exceptfds, timeout);
+}
+
+/*!
+    \internal
+*/
+void QEventDispatcherCygwin::registerTimer(int timerId, int interval, QObject *obj)
+{
+#ifndef QT_NO_DEBUG
+    if (timerId < 1 || interval < 0 || !obj) {
+        qWarning("QEventDispatcherCygwin::registerTimer: invalid arguments");
+        return;
+    } else if (obj->thread() != thread() || thread() != QThread::currentThread()) {
+        qWarning("QObject::startTimer: timers cannot be started from another thread");
+        return;
+    }
+#endif
+
+    Q_D(QEventDispatcherCygwin);
+    d->timerList.registerTimer(timerId, interval, obj);
+}
+
+/*!
+    \internal
+*/
+bool QEventDispatcherCygwin::unregisterTimer(int timerId)
+{
+#ifndef QT_NO_DEBUG
+    if (timerId < 1) {
+        qWarning("QEventDispatcherCygwin::unregisterTimer: invalid argument");
+        return false;
+    } else if (thread() != QThread::currentThread()) {
+        qWarning("QObject::killTimer: timers cannot be stopped from another thread");
+        return false;
+    }
+#endif
+
+    Q_D(QEventDispatcherCygwin);
+    return d->timerList.unregisterTimer(timerId);
+}
+
+/*!
+    \internal
+*/
+bool QEventDispatcherCygwin::unregisterTimers(QObject *object)
+{
+#ifndef QT_NO_DEBUG
+    if (!object) {
+        qWarning("QEventDispatcherCygwin::unregisterTimers: invalid argument");
+        return false;
+    } else if (object->thread() != thread() || thread() != QThread::currentThread()) {
+        qWarning("QObject::killTimers: timers cannot be stopped from another thread");
+        return false;
+    }
+#endif
+
+    Q_D(QEventDispatcherCygwin);
+    return d->timerList.unregisterTimers(object);
+}
+
+QList<QEventDispatcherCygwin::TimerInfo>
+QEventDispatcherCygwin::registeredTimers(QObject *object) const
+{
+    if (!object) {
+        qWarning("QEventDispatcherCygwin:registeredTimers: invalid argument");
+        return QList<TimerInfo>();
+    }
+
+    Q_D(const QEventDispatcherCygwin);
+    return d->timerList.registeredTimers(object);
+}
+
+/*****************************************************************************
+ Socket notifier type
+ *****************************************************************************/
+QSockNotType::QSockNotType()
+{
+    FD_ZERO(&select_fds);
+    FD_ZERO(&enabled_fds);
+    FD_ZERO(&pending_fds);
+}
+
+QSockNotType::~QSockNotType()
+{
+    for (int i = 0; i < list.size(); ++i)
+        delete list[i];
+}
+
+/*****************************************************************************
+ QEventDispatcher implementations for Cygwin
+ *****************************************************************************/
+
+void QEventDispatcherCygwin::registerSocketNotifier(QSocketNotifier *notifier)
+{
+    Q_ASSERT(notifier);
+    int sockfd = notifier->socket();
+    int type = notifier->type();
+#ifndef QT_NO_DEBUG
+    if (sockfd < 0
+        || unsigned(sockfd) >= FD_SETSIZE) {
+        qWarning("QSocketNotifier: Internal error");
+        return;
+    } else if (notifier->thread() != thread()
+               || thread() != QThread::currentThread()) {
+        qWarning("QSocketNotifier: socket notifiers cannot be enabled from another thread");
+        return;
+    }
+#endif
+
+    Q_D(QEventDispatcherCygwin);
+    QSockNotType::List &list = d->sn_vec[type].list;
+    fd_set *fds  = &d->sn_vec[type].enabled_fds;
+    QSockNot *sn;
+
+    sn = new QSockNot;
+    sn->obj = notifier;
+    sn->fd = sockfd;
+    sn->queue = &d->sn_vec[type].pending_fds;
+
+    int i;
+    for (i = 0; i < list.size(); ++i) {
+        QSockNot *p = list[i];
+        if (p->fd < sockfd)
+            break;
+        if (p->fd == sockfd) {
+            static const char *t[] = { "Read", "Write", "Exception" };
+            qWarning("QSocketNotifier: Multiple socket notifiers for "
+                      "same socket %d and type %s", sockfd, t[type]);
+        }
+    }
+    list.insert(i, sn);
+
+    FD_SET(sockfd, fds);
+    d->sn_highest = qMax(d->sn_highest, sockfd);
+}
+
+void QEventDispatcherCygwin::unregisterSocketNotifier(QSocketNotifier *notifier)
+{
+    Q_ASSERT(notifier);
+    int sockfd = notifier->socket();
+    int type = notifier->type();
+#ifndef QT_NO_DEBUG
+    if (sockfd < 0
+        || unsigned(sockfd) >= FD_SETSIZE) {
+        qWarning("QSocketNotifier: Internal error");
+        return;
+    } else if (notifier->thread() != thread()
+               || thread() != QThread::currentThread()) {
+        qWarning("QSocketNotifier: socket notifiers cannot be disabled from another thread");
+        return;
+    }
+#endif
+
+    Q_D(QEventDispatcherCygwin);
+    QSockNotType::List &list = d->sn_vec[type].list;
+    fd_set *fds  =  &d->sn_vec[type].enabled_fds;
+    QSockNot *sn = 0;
+    int i;
+    for (i = 0; i < list.size(); ++i) {
+        sn = list[i];
+        if(sn->obj == notifier && sn->fd == sockfd)
+            break;
+    }
+    if (i == list.size()) // not found
+        return;
+
+    FD_CLR(sockfd, fds);                        // clear fd bit
+    FD_CLR(sockfd, sn->queue);
+    d->sn_pending_list.removeAll(sn);                // remove from activation list
+    list.removeAt(i);                                // remove notifier found above
+    delete sn;
+
+    if (d->sn_highest == sockfd) {                // find highest fd
+        d->sn_highest = -1;
+        for (int i=0; i<3; i++) {
+            if (!d->sn_vec[i].list.isEmpty())
+                d->sn_highest = qMax(d->sn_highest,  // list is fd-sorted
+                                     d->sn_vec[i].list[0]->fd);
+        }
+    }
+}
+
+void QEventDispatcherCygwin::setSocketNotifierPending(QSocketNotifier *notifier)
+{
+    Q_ASSERT(notifier);
+    int sockfd = notifier->socket();
+    int type = notifier->type();
+#ifndef QT_NO_DEBUG
+    if (sockfd < 0
+        || unsigned(sockfd) >= FD_SETSIZE) {
+        qWarning("QSocketNotifier: Internal error");
+        return;
+    }
+    Q_ASSERT(notifier->thread() == thread() && thread() == QThread::currentThread());
+#endif
+
+    Q_D(QEventDispatcherCygwin);
+    QSockNotType::List &list = d->sn_vec[type].list;
+    QSockNot *sn = 0;
+    int i;
+    for (i = 0; i < list.size(); ++i) {
+        sn = list[i];
+        if(sn->obj == notifier && sn->fd == sockfd)
+            break;
+    }
+    if (i == list.size()) // not found
+        return;
+
+    // We choose a random activation order to be more fair under high load.
+    // If a constant order is used and a peer early in the list can
+    // saturate the IO, it might grab our attention completely.
+    // Also, if we're using a straight list, the callback routines may
+    // delete other entries from the list before those other entries are
+    // processed.
+    if (! FD_ISSET(sn->fd, sn->queue)) {
+        if (d->sn_pending_list.isEmpty()) {
+            d->sn_pending_list.append(sn);
+        } else {
+            d->sn_pending_list.insert((qrand() & 0xff) %
+                                      (d->sn_pending_list.size()+1), sn);
+        }
+        FD_SET(sn->fd, sn->queue);
+    }
+}
+
+int QEventDispatcherCygwin::activateTimers()
+{
+    Q_ASSERT(thread() == QThread::currentThread());
+    Q_D(QEventDispatcherCygwin);
+    return d->timerList.activateTimers();
+}
+
+int QEventDispatcherCygwin::activateSocketNotifiers()
+{
+    Q_D(QEventDispatcherCygwin);
+    if (d->sn_pending_list.isEmpty())
+        return 0;
+
+    // activate entries
+    int n_act = 0;
+    QEvent event(QEvent::SockAct);
+    while (!d->sn_pending_list.isEmpty()) {
+        QSockNot *sn = d->sn_pending_list.takeFirst();
+        if (FD_ISSET(sn->fd, sn->queue)) {
+            FD_CLR(sn->fd, sn->queue);
+            QCoreApplication::sendEvent(sn->obj, &event);
+            ++n_act;
+        }
+    }
+    return n_act;
+}
+
+bool QEventDispatcherCygwin::processEvents(QEventLoop::ProcessEventsFlags flags)
+{
+    Q_D(QEventDispatcherCygwin);
+    d->interrupt = false;
+    emit awake();
+
+    bool canWait;
+    bool retVal = false;
+    int nevents = 0;
+    do {
+	QCoreApplicationPrivate::sendPostedEvents(0, 0, d->threadData);
+
+	while (!d->interrupt) {
+	    MSG msg;
+	    bool haveMessage;
+	    if (!(flags & QEventLoop::ExcludeUserInputEvents) && !d->queuedUserInputEvents.isEmpty()) {
+		// process queued user input events
+		haveMessage = true;
+		msg = d->queuedUserInputEvents.takeFirst();
+	    } else {
+		haveMessage = PeekMessage(&msg, 0, 0, 0, PM_REMOVE);
+#ifdef DEBUG_QEVENTDISPATCHER
+		const char * findWMstr(uint msgID);
+		const char * msgstr = findWMstr(msg.message);
+		if (msgstr)
+		    qDebug("peekmessage (%s)", msgstr);
+		else
+		    qDebug("peekmessage (0x%x)", msg.message);
+#endif
+		if (haveMessage && (flags & QEventLoop::ExcludeUserInputEvents)
+		    && ((msg.message >= WM_KEYFIRST
+			 && msg.message <= WM_KEYLAST)
+			|| (msg.message >= WM_MOUSEFIRST
+			    && msg.message <= WM_MOUSELAST)
+			|| msg.message == WM_MOUSEWHEEL
+			|| msg.message == WM_MOUSEHWHEEL
+			|| msg.message == WM_TOUCH
+#ifndef QT_NO_GESTURES
+			|| msg.message == WM_GESTURE
+			|| msg.message == WM_GESTURENOTIFY
+#endif
+			|| msg.message == WM_CLOSE)) {
+		    // queue user input events for later processing
+		    haveMessage = false;
+		    d->queuedUserInputEvents.append(msg);
+		}
+	    }
+	    if (haveMessage) {
+		if (msg.message == WM_QUIT) {
+		    if (QCoreApplication::instance())
+			QCoreApplication::instance()->quit();
+		    return false;
+		}
+		if (!filterEvent(&msg)) {
+		    TranslateMessage(&msg);
+                    DispatchMessage(&msg);
+		}
+	    } else {
+		// nothing todo so break
+		break;
+	    }
+	    retVal = true;
+	}
+
+	canWait = (!retVal
+		   && d->threadData->canWait
+		   && !d->interrupt
+		   && (flags & QEventLoop::WaitForMoreEvents));
+
+	const uint exclude_all =
+	    QEventLoop::ExcludeSocketNotifiers | QEventLoop::WaitForMoreEvents;
+	if (!retVal || ((uint)flags & exclude_all) != exclude_all) {
+
+	    // Process timers and socket notifiers
+
+	    if (canWait)
+		emit aboutToBlock();
+
+	    if (!d->interrupt) {
+		// return the maximum time we can wait for an event.
+		timeval wait_tm = { 0l, 50000l };
+		d->timerList.timerWait(wait_tm);
+
+		if (!canWait) {
+		    // no time to wait
+		    wait_tm.tv_sec  = 0l;
+		    wait_tm.tv_usec = 0l;
+		}
+
+		nevents += d->doSelect(flags, &wait_tm);
+
+		// activate timers
+		nevents += activateTimers();
+	    }
+	}
+    } while (canWait && nevents == 0);
+
+    // return true if we handled events, false otherwise
+    return retVal || (nevents > 0);
+}
+
+bool QEventDispatcherCygwin::hasPendingEvents()
+{
+    MSG msg;
+    return qGlobalPostedEventsCount() || PeekMessage(&msg, NULL, 0, 0, PM_NOREMOVE);
+}
+
+void QEventDispatcherCygwin::wakeUp()
+{
+    Q_D(QEventDispatcherCygwin);
+    if (d->wakeUps.testAndSetAcquire(0, 1)) {
+        char c = 0;
+        qt_safe_write( d->thread_pipe[1], &c, 1 );
+    }
+}
+
+void QEventDispatcherCygwin::interrupt()
+{
+    Q_D(QEventDispatcherCygwin);
+    d->interrupt = true;
+    wakeUp();
+}
+
+void QEventDispatcherCygwin::flush()
+{ }
+
+void QEventDispatcherCygwin::startingUp()
+{ }
+
+void QEventDispatcherCygwin::closingDown()
+{ }
+
+bool QEventDispatcherCygwin::event(QEvent *e)
+{
+    return QAbstractEventDispatcher::event(e);
+}
+
+
+
+
+void QCoreApplication::watchUnixSignal(int sig, bool watch)
+{
+    if (sig < NSIG) {
+        struct sigaction sa;
+        sigemptyset(&(sa.sa_mask));
+        sa.sa_flags = 0;
+        if (watch)
+            sa.sa_handler = signalHandler;
+        else
+            sa.sa_handler = SIG_DFL;
+        sigaction(sig, &sa, 0);
+    }
+}
+
+QT_END_NAMESPACE
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/kernel/qeventdispatcher_cygwin_p.h qtwin-4.7.4/src/corelib/kernel/qeventdispatcher_cygwin_p.h
--- qtwin-4.7.4.orig/src/corelib/kernel/qeventdispatcher_cygwin_p.h	1970-01-01 01:00:00.000000000 +0100
+++ qtwin-4.7.4/src/corelib/kernel/qeventdispatcher_cygwin_p.h	2011-10-01 23:50:56.114700000 +0200
@@ -0,0 +1,213 @@
+/****************************************************************************
+**
+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
+** All rights reserved.
+** Contact: Nokia Corporation (qt-info@nokia.com)
+**
+** This file is part of the QtCore module of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#ifndef QEVENTDISPATCHER_CYGWIN_P_H
+#define QEVENTDISPATCHER_CYGWIN_P_H
+
+//
+//  W A R N I N G
+//  -------------
+//
+// This file is not part of the Qt API.  It exists purely as an
+// implementation detail.  This header file may change from version to
+// version without notice, or even be removed.
+//
+// We mean it.
+//
+
+#include "QtCore/qabstracteventdispatcher.h"
+#include "QtCore/qlist.h"
+#include "QtCore/qt_windows.h"
+#include "private/qabstracteventdispatcher_p.h"
+#include "private/qcore_unix_p.h"
+#include "private/qpodlist_p.h"
+#include "QtCore/qvarlengtharray.h"
+
+#include <sys/time.h>
+#include <sys/select.h>
+
+QT_BEGIN_NAMESPACE
+
+// internal timer info
+struct QTimerInfo {
+    int id;           // - timer identifier
+    timeval interval; // - timer interval
+    timeval timeout;  // - when to sent event
+    QObject *obj;     // - object to receive event
+    QTimerInfo **activateRef; // - ref from activateTimers
+};
+
+class QTimerInfoList : public QList<QTimerInfo*>
+{
+#if (_POSIX_MONOTONIC_CLOCK-0 <= 0) || defined(QT_BOOTSTRAPPED)
+    timeval previousTime;
+    clock_t previousTicks;
+    int ticksPerSecond;
+    int msPerTick;
+
+    bool timeChanged(timeval *delta);
+#endif
+
+    // state variables used by activateTimers()
+    QTimerInfo *firstTimerInfo;
+
+    // maximum time to wait for an event
+    timeval timer_wait_max;
+
+public:
+    QTimerInfoList();
+
+    timeval currentTime;
+    timeval updateCurrentTime();
+
+    // must call updateCurrentTime() first!
+    void repairTimersIfNeeded();
+
+    bool timerWait(timeval &);
+    void timerInsert(QTimerInfo *);
+    void timerRepair(const timeval &);
+
+    void registerTimer(int timerId, int interval, QObject *object);
+    bool unregisterTimer(int timerId);
+    bool unregisterTimers(QObject *object);
+    QList<QPair<int, int> > registeredTimers(QObject *object) const;
+
+    int activateTimers();
+};
+
+struct QSockNot
+{
+    QSocketNotifier *obj;
+    int fd;
+    fd_set *queue;
+};
+
+class QSockNotType
+{
+public:
+    QSockNotType();
+    ~QSockNotType();
+
+    typedef QPodList<QSockNot*, 32> List;
+
+    List list;
+    fd_set select_fds;
+    fd_set enabled_fds;
+    fd_set pending_fds;
+
+};
+
+class QEventDispatcherCygwinPrivate;
+
+class Q_CORE_EXPORT QEventDispatcherCygwin : public QAbstractEventDispatcher
+{
+    Q_OBJECT
+    Q_DECLARE_PRIVATE(QEventDispatcherCygwin)
+
+public:
+    explicit QEventDispatcherCygwin(QObject *parent = 0);
+    ~QEventDispatcherCygwin();
+
+    bool processEvents(QEventLoop::ProcessEventsFlags flags);
+    bool hasPendingEvents();
+
+    void registerSocketNotifier(QSocketNotifier *notifier);
+    void unregisterSocketNotifier(QSocketNotifier *notifier);
+
+    void registerTimer(int timerId, int interval, QObject *object);
+    bool unregisterTimer(int timerId);
+    bool unregisterTimers(QObject *object);
+    QList<TimerInfo> registeredTimers(QObject *object) const;
+
+    void wakeUp();
+    void interrupt();
+    void flush();
+
+    void startingUp();
+    void closingDown();
+
+    bool event(QEvent *e);
+
+protected:
+    QEventDispatcherCygwin(QEventDispatcherCygwinPrivate &dd, QObject *parent = 0);
+
+    void setSocketNotifierPending(QSocketNotifier *notifier);
+
+    int activateTimers();
+    int activateSocketNotifiers();
+
+    virtual int select(int nfds,
+                       fd_set *readfds, fd_set *writefds, fd_set *exceptfds,
+                       timeval *timeout);
+};
+
+class Q_CORE_EXPORT QEventDispatcherCygwinPrivate : public QAbstractEventDispatcherPrivate
+{
+    Q_DECLARE_PUBLIC(QEventDispatcherCygwin)
+
+public:
+    QEventDispatcherCygwinPrivate();
+    ~QEventDispatcherCygwinPrivate();
+
+    int doSelect(QEventLoop::ProcessEventsFlags flags, timeval *timeout);
+
+    bool mainThread;
+    int thread_pipe[2];
+
+    // highest fd for all socket notifiers
+    int sn_highest;
+    // 3 socket notifier types - read, write and exception
+    QSockNotType sn_vec[3];
+
+    QTimerInfoList timerList;
+
+    // pending socket notifiers list
+    QSockNotType::List sn_pending_list;
+
+    QAtomicInt wakeUps;
+    bool interrupt;
+
+    QList<MSG> queuedUserInputEvents;
+};
+
+QT_END_NAMESPACE
+
+#endif // QEVENTDISPATCHER_CYGWIN_P_H
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/plugin/plugin.pri qtwin-4.7.4/src/corelib/plugin/plugin.pri
--- qtwin-4.7.4.orig/src/corelib/plugin/plugin.pri	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/plugin/plugin.pri	2011-10-01 22:50:20.922100000 +0200
@@ -26,4 +26,8 @@ unix {
 	SOURCES += plugin/qlibrary_unix.cpp
 }
 
+cygwin-g++-win32 {
+	SOURCES += plugin/qsystemlibrary.cpp
+}
+
 LIBS_PRIVATE += $$QMAKE_LIBS_DYNLOAD
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/plugin/qlibrary.cpp qtwin-4.7.4/src/corelib/plugin/qlibrary.cpp
--- qtwin-4.7.4.orig/src/corelib/plugin/qlibrary.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/plugin/qlibrary.cpp	2011-10-01 22:50:20.922100000 +0200
@@ -508,7 +508,7 @@ bool QLibraryPrivate::loadPlugin()
  */
 bool QLibrary::isLibrary(const QString &fileName)
 {
-#if defined(Q_OS_WIN32) || defined(Q_OS_WINCE)
+#if defined(Q_OS_WIN32) || defined(Q_OS_WINCE) || defined(Q_OS_CYGWIN)
     return fileName.endsWith(QLatin1String(".dll"));
 #elif defined(Q_OS_SYMBIAN)
     // Plugin stubs are also considered libraries in Symbian.
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/plugin/qlibrary_p.h qtwin-4.7.4/src/corelib/plugin/qlibrary_p.h
--- qtwin-4.7.4.orig/src/corelib/plugin/qlibrary_p.h	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/plugin/qlibrary_p.h	2011-10-01 22:50:20.937700000 +0200
@@ -53,7 +53,7 @@
 // We mean it.
 //
 
-#ifdef Q_WS_WIN
+#if defined(Q_WS_WIN) && !defined(Q_CYGWIN_WIN)
 # include "QtCore/qt_windows.h"
 #endif
 #include "QtCore/qlibrary.h"
@@ -72,7 +72,7 @@ class QLibraryPrivate
 {
 public:
 
-#ifdef Q_WS_WIN
+#if defined(Q_WS_WIN) && !defined(Q_CYGWIN_WIN)
     HINSTANCE
 #else
     void *
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/plugin/qlibrary_unix.cpp qtwin-4.7.4/src/corelib/plugin/qlibrary_unix.cpp
--- qtwin-4.7.4.orig/src/corelib/plugin/qlibrary_unix.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/plugin/qlibrary_unix.cpp	2011-10-01 22:50:20.937700000 +0200
@@ -136,6 +136,13 @@ bool QLibraryPrivate::load_sys()
 
 #elif defined(Q_OS_SYMBIAN)
         suffixes << QLatin1String(".dll");
+#elif defined(Q_OS_CYGWIN)
+        prefixes << QLatin1String("cyg");
+        if (!fullVersion.isEmpty()) {
+            suffixes << QString::fromLatin1("-%1.dll").arg(fullVersion);
+        } else {
+            suffixes << QLatin1String(".dll");
+        }
 #else
         if (!fullVersion.isEmpty()) {
             suffixes << QString::fromLatin1(".so.%1").arg(fullVersion);
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/plugin/qsystemlibrary.cpp qtwin-4.7.4/src/corelib/plugin/qsystemlibrary.cpp
--- qtwin-4.7.4.orig/src/corelib/plugin/qsystemlibrary.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/plugin/qsystemlibrary.cpp	2011-10-01 22:50:20.937700000 +0200
@@ -43,6 +43,7 @@
 #include <QtCore/qvarlengtharray.h>
 #include <QtCore/qstringlist.h>
 #include <QtCore/qfileinfo.h>
+#include <QtCore/qdir.h>
 
 /*!
 
@@ -110,12 +111,12 @@ HINSTANCE QSystemLibrary::load(const wch
 
 #if !defined(QT_BOOTSTRAPPED)
     if (!onlySystemDirectory)
-        searchOrder << QFileInfo(qAppFileName()).path();
+        searchOrder << QDir::win32Path(QFileInfo(qAppFileName()).path());
 #endif
     searchOrder << qSystemDirectory();
 
     if (!onlySystemDirectory) {
-        const QString PATH(QLatin1String(qgetenv("PATH").constData()));
+        const QString PATH(QDir::win32PathList(QLatin1String(qgetenv("PATH").constData())));
         searchOrder << PATH.split(QLatin1Char(';'), QString::SkipEmptyParts);
     }
     QString fileName = QString::fromWCharArray(libraryName);
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/plugin/qsystemlibrary_p.h qtwin-4.7.4/src/corelib/plugin/qsystemlibrary_p.h
--- qtwin-4.7.4.orig/src/corelib/plugin/qsystemlibrary_p.h	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/plugin/qsystemlibrary_p.h	2011-10-01 22:50:20.937700000 +0200
@@ -43,7 +43,7 @@
 #define QSYSTEMLIBRARY_P_H
 
 #include <QtCore/qglobal.h>
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
 #include <qt_windows.h>
 #include <QtCore/qstring.h>
 
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/thread/qthread.cpp qtwin-4.7.4/src/corelib/thread/qthread.cpp
--- qtwin-4.7.4.orig/src/corelib/thread/qthread.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/thread/qthread.cpp	2011-10-01 22:50:20.937700000 +0200
@@ -183,7 +183,7 @@ QThreadPrivate::QThreadPrivate(QThreadDa
     id = 0;
     waiters = 0;
 #endif
-#if defined (Q_WS_WIN) || defined (Q_OS_SYMBIAN)
+#if (defined(Q_WS_WIN) && !defined(Q_CYGWIN_WIN)) || defined (Q_OS_SYMBIAN)
     terminationEnabled = true;
     terminatePending = false;
 #endif
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/thread/qthread_unix.cpp qtwin-4.7.4/src/corelib/thread/qthread_unix.cpp
--- qtwin-4.7.4.orig/src/corelib/thread/qthread_unix.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/thread/qthread_unix.cpp	2011-10-01 22:50:20.953300000 +0200
@@ -50,6 +50,8 @@
 
 #ifdef Q_OS_SYMBIAN
 #include <private/qeventdispatcher_symbian_p.h>
+#elif defined(Q_CYGWIN_WIN)
+#include <private/qeventdispatcher_cygwin_p.h>
 #else
 #include <private/qeventdispatcher_unix_p.h>
 #endif
@@ -274,6 +276,8 @@ void QThreadPrivate::createEventDispatch
 #endif
 #ifdef Q_OS_SYMBIAN
         data->eventDispatcher = new QEventDispatcherSymbian;
+#elif defined(Q_CYGWIN_WIN)
+        data->eventDispatcher = new QEventDispatcherCygwin;
 #else
         data->eventDispatcher = new QEventDispatcherUNIX;
 #endif
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/tools/qelapsedtimer_unix.cpp qtwin-4.7.4/src/corelib/tools/qelapsedtimer_unix.cpp
--- qtwin-4.7.4.orig/src/corelib/tools/qelapsedtimer_unix.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/tools/qelapsedtimer_unix.cpp	2011-10-01 22:50:20.953300000 +0200
@@ -44,17 +44,59 @@
 #include <time.h>
 #include <unistd.h>
 
+// Monotonic clocks are supported in Cygwin starting from version 1.7.6.
+// Earlier Cygwin versions will use the Windows timers.
+#if defined(Q_OS_CYGWIN) && (_POSIX_MONOTONIC_CLOCK-0 == 0)
+#define USE_WIN_TIMERS
+#endif
+
 #if defined(QT_NO_CLOCK_MONOTONIC) || defined(QT_BOOTSTRAPPED)
 // turn off the monotonic clock
 # ifdef _POSIX_MONOTONIC_CLOCK
 #  undef _POSIX_MONOTONIC_CLOCK
 # endif
 # define _POSIX_MONOTONIC_CLOCK -1
+# undef USE_WIN_TIMERS
+#endif
+
+#ifdef USE_WIN_TIMERS
+#include "qt_windows.h"
 #endif
 
 QT_BEGIN_NAMESPACE
 
-#if (_POSIX_MONOTONIC_CLOCK-0 != 0)
+#ifdef USE_WIN_TIMERS
+static int monotonicClockChecked = false;
+static const bool monotonicClockAvailable = true;
+static bool hiresCounter = false;
+static qint64 hiresFreq = 0;
+
+// If GetTickCount64() is not available, fall back on GetTickCount()
+static quint64 get_tick_count(void) {
+    typedef ULONGLONG (WINAPI *PtrGetTickCount64)(void);
+    static PtrGetTickCount64 pGetTickCount64 = 0;
+    static bool getptr = true;
+    if (getptr) {
+        HMODULE kernel32 = GetModuleHandleW(L"kernel32");
+        if (kernel32) {
+            pGetTickCount64 =
+                (PtrGetTickCount64)GetProcAddress(kernel32, "GetTickCount64");
+        }
+        getptr = false;
+    }
+    if (pGetTickCount64)
+        return pGetTickCount64();
+
+    // Use GetTickCount and try to compensate for overflow
+    static quint32 highdword = 0;
+    static quint32 lastval = 0;
+    quint32 val = GetTickCount();
+    if (val < lastval)
+        ++highdword;
+    lastval = val;
+    return val | (quint64(highdword) << 32);
+}
+#elif (_POSIX_MONOTONIC_CLOCK-0 != 0)
 static const bool monotonicClockChecked = true;
 static const bool monotonicClockAvailable = _POSIX_MONOTONIC_CLOCK > 0;
 #else
@@ -76,7 +118,13 @@ static void unixCheckClockType()
     if (is_likely(load_acquire(monotonicClockChecked)))
         return;
 
-# if defined(_SC_MONOTONIC_CLOCK)
+# ifdef USE_WIN_TIMERS
+    LARGE_INTEGER freq;
+    if (QueryPerformanceFrequency(&freq)) {
+        hiresCounter = true;
+        hiresFreq = freq.QuadPart;
+    }
+# elif defined(_SC_MONOTONIC_CLOCK)
     // detect if the system support monotonic timers
     long x = sysconf(_SC_MONOTONIC_CLOCK);
     store_release(monotonicClockAvailable, x >= 200112L);
@@ -91,6 +139,16 @@ static inline qint64 fractionAdjustment(
     // disabled, but otherwise indicates bad usage of QElapsedTimer
     //Q_ASSERT(monotonicClockChecked);
 
+#ifdef USE_WIN_TIMERS
+    if (hiresCounter) {
+        // the high-resolution timer is measured in microseconds
+        // 1 ms = 1000 us
+        return 1000;
+    } else {
+        // ticks are measured in milliseconds
+        return 1;
+    }
+#else
     if (monotonicClockAvailable) {
         // the monotonic timer is measured in nanoseconds
         // 1 ms = 1000000 ns
@@ -100,6 +158,7 @@ static inline qint64 fractionAdjustment(
         // 1 ms = 1000 us
         return 1000;
     }
+#endif
 }
 
 bool QElapsedTimer::isMonotonic()
@@ -119,10 +178,30 @@ static inline void do_gettime(qint64 *se
 #if (_POSIX_MONOTONIC_CLOCK-0 >= 0)
     unixCheckClockType();
     if (is_likely(monotonicClockAvailable)) {
+# ifdef USE_WIN_TIMERS
+        if (hiresCounter) {
+            LARGE_INTEGER hires;
+            QueryPerformanceCounter(&hires);
+            *sec = hires.QuadPart / hiresFreq;
+            *frac = ((hires.QuadPart % hiresFreq) * 1000000) / hiresFreq;
+        } else {
+            // If a hires counter is not available, use GetTickCount64 (if
+            // available) or GetTickCount, which are unaffected by clock skew.
+            // Warning! GetTickCount64 is only available starting from Vista.
+            // If GetTickCount is used, the time will wrap around to zero every
+            // about 49.7 days if the system is run continuously. This overflow
+            // is accounted for, but different processes may have different
+            // understanding of how much time has actually elapsed.
+            quint64 lores = get_tick_count();
+            *sec = lores / 1000;
+            *frac = lores % 1000;
+        }
+# else
         timespec ts;
         clock_gettime(CLOCK_MONOTONIC, &ts);
         *sec = ts.tv_sec;
         *frac = ts.tv_nsec;
+# endif
         return;
     }
 #endif
@@ -142,8 +221,13 @@ timeval qt_gettime()
     timeval tv;
     tv.tv_sec = sec;
     tv.tv_usec = frac;
+#ifdef USE_WIN_TIMERS
+    if (!hiresCounter)
+        tv.tv_usec *= 1000;
+#else
     if (monotonicClockAvailable)
         tv.tv_usec /= 1000;
+#endif
 
     return tv;
 }
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/tools/qlocale.cpp qtwin-4.7.4/src/corelib/tools/qlocale.cpp
--- qtwin-4.7.4.orig/src/corelib/tools/qlocale.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/tools/qlocale.cpp	2011-10-01 22:50:20.968900000 +0200
@@ -393,7 +393,7 @@ static QByteArray envVarLocale()
 }
 
 
-#if defined(Q_OS_WIN)
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
 /******************************************************************************
 ** Wrappers for Windows locale system functions
 */
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/tools/qstringlist.cpp qtwin-4.7.4/src/corelib/tools/qstringlist.cpp
--- qtwin-4.7.4.orig/src/corelib/tools/qstringlist.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/tools/qstringlist.cpp	2011-10-01 22:50:20.968900000 +0200
@@ -418,7 +418,11 @@ QString QtPrivate::QStringList_join(cons
 	return res;
     res.reserve(totalLength);
     for (int i = 0; i < that->size(); ++i) {
+#ifdef Q_OS_CYGWIN
+        if (i && res != sep)	// avoid creating an UNC path on Cygwin
+#else
         if (i)
+#endif
             res += sep;
         res += that->at(i);
     }
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/corelib/tools/qvector.h qtwin-4.7.4/src/corelib/tools/qvector.h
--- qtwin-4.7.4.orig/src/corelib/tools/qvector.h	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/corelib/tools/qvector.h	2011-10-01 22:50:20.968900000 +0200
@@ -48,6 +48,7 @@
 #include <QtCore/qlist.h>
 
 #ifndef QT_NO_STL
+#undef max
 #include <iterator>
 #include <vector>
 #endif
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/declarative/qml/qdeclarativeimport.cpp qtwin-4.7.4/src/declarative/qml/qdeclarativeimport.cpp
--- qtwin-4.7.4.orig/src/declarative/qml/qdeclarativeimport.cpp	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/declarative/qml/qdeclarativeimport.cpp	2011-10-01 22:50:20.968900000 +0200
@@ -879,6 +879,11 @@ QString QDeclarativeImportDatabase::reso
                          << QLatin1String("d.dll") // try a qmake-style debug build first
 # endif
                          << QLatin1String(".dll"));
+#elif defined(Q_OS_CYGWIN)
+    return resolvePlugin(qmldirPath, qmldirPluginPath, baseName,
+                         QStringList()
+                         << QLatin1String(".dll"),
+                         QLatin1String("cyg"));
 #elif defined(Q_OS_SYMBIAN)
     return resolvePlugin(qmldirPath, qmldirPluginPath, baseName,
                          QStringList()
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/accessible/accessible.pri qtwin-4.7.4/src/gui/accessible/accessible.pri
--- qtwin-4.7.4.orig/src/gui/accessible/accessible.pri	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/accessible/accessible.pri	2011-10-01 22:50:20.984500000 +0200
@@ -18,6 +18,8 @@ contains(QT_CONFIG, accessibility) {
                              accessible/qaccessible_mac_cocoa.mm
       } else:win32 { 
         SOURCES += accessible/qaccessible_win.cpp
+      } else:cygwin-g++-win32 {
+        SOURCES += accessible/qaccessible_win.cpp
       } else {
         HEADERS += accessible/qaccessiblebridge.h
         SOURCES += accessible/qaccessible_unix.cpp accessible/qaccessiblebridge.cpp
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/dialogs/dialogs.pri qtwin-4.7.4/src/gui/dialogs/dialogs.pri
--- qtwin-4.7.4.orig/src/gui/dialogs/dialogs.pri	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/dialogs/dialogs.pri	2011-10-01 22:50:20.984500000 +0200
@@ -49,7 +49,7 @@ HEADERS += \
     QMAKE_EXTRA_COMPILERS += exceptions_compiler
 }
 
-win32 {
+win32|cygwin-g++-win32 {
     HEADERS += dialogs/qwizard_win_p.h \
                dialogs/qfiledialog_win_p.h
     SOURCES += dialogs/qdialogsbinarycompat_win.cpp \
@@ -61,7 +61,7 @@ win32 {
     !win32-borland:!wince*: LIBS += -lshell32 	# the filedialog needs this library
 }
 
-!mac:!embedded:!symbian:unix {
+!mac:!embedded:!symbian:!cygwin-g++-win32:unix {
         HEADERS += dialogs/qpagesetupdialog_unix_p.h
 	SOURCES += dialogs/qprintdialog_unix.cpp \
 		   dialogs/qpagesetupdialog_unix.cpp
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/dialogs/qfiledialog.cpp qtwin-4.7.4/src/gui/dialogs/qfiledialog.cpp
--- qtwin-4.7.4.orig/src/gui/dialogs/qfiledialog.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/dialogs/qfiledialog.cpp	2011-10-01 22:50:20.984500000 +0200
@@ -1688,11 +1688,12 @@ extern QString qtSymbianGetExistingDirec
 */
 QString QFileDialog::getOpenFileName(QWidget *parent,
                                const QString &caption,
-                               const QString &dir,
+                               const QString &idir,
                                const QString &filter,
                                QString *selectedFilter,
                                Options options)
 {
+    const QString dir = QDir::posixPath(idir);
     if (qt_filedialog_open_filename_hook && !(options & DontUseNativeDialog))
         return qt_filedialog_open_filename_hook(parent, caption, dir, filter, selectedFilter, options);
 #if defined(Q_WS_S60)
@@ -1780,11 +1781,12 @@ QString QFileDialog::getOpenFileName(QWi
 */
 QStringList QFileDialog::getOpenFileNames(QWidget *parent,
                                           const QString &caption,
-                                          const QString &dir,
+                                          const QString &idir,
                                           const QString &filter,
                                           QString *selectedFilter,
                                           Options options)
 {
+    const QString dir = QDir::posixPath(idir);
     if (qt_filedialog_open_filenames_hook && !(options & DontUseNativeDialog))
         return qt_filedialog_open_filenames_hook(parent, caption, dir, filter, selectedFilter, options);
 #if defined(Q_WS_S60)
@@ -1874,11 +1876,12 @@ QStringList QFileDialog::getOpenFileName
 */
 QString QFileDialog::getSaveFileName(QWidget *parent,
                                      const QString &caption,
-                                     const QString &dir,
+                                     const QString &idir,
                                      const QString &filter,
                                      QString *selectedFilter,
                                      Options options)
 {
+    const QString dir = QDir::posixPath(idir);
     if (qt_filedialog_save_filename_hook && !(options & DontUseNativeDialog))
         return qt_filedialog_save_filename_hook(parent, caption, dir, filter, selectedFilter, options);
 #if defined(Q_WS_S60)
@@ -1958,9 +1961,10 @@ QString QFileDialog::getSaveFileName(QWi
 */
 QString QFileDialog::getExistingDirectory(QWidget *parent,
                                           const QString &caption,
-                                          const QString &dir,
+                                          const QString &idir,
                                           Options options)
 {
+    const QString dir = QDir::posixPath(idir);
     if (qt_filedialog_existing_directory_hook && !(options & DontUseNativeDialog))
         return qt_filedialog_existing_directory_hook(parent, caption, dir, options);
 #if defined(Q_WS_S60)
@@ -3326,6 +3330,14 @@ QStringList QFSCompleter::splitPath(cons
 #if defined(Q_OS_SYMBIAN)
     if (pathCopy == QLatin1String("\\"))
         return QStringList(pathCopy);
+#elif defined(Q_OS_CYGWIN)
+    if (pathCopy == QLatin1String("//"))
+        return QStringList(pathCopy);
+    QString doubleSlash(QLatin1String("//"));
+    if (pathCopy.startsWith(doubleSlash))
+        pathCopy = pathCopy.mid(2);
+    else
+        doubleSlash.clear();
 #elif defined(Q_OS_WIN)
     if (pathCopy == QLatin1String("\\") || pathCopy == QLatin1String("\\\\"))
         return QStringList(pathCopy);
@@ -3342,6 +3354,21 @@ QStringList QFSCompleter::splitPath(cons
     QStringList parts = pathCopy.split(re, QString::SkipEmptyParts);
     if (pathCopy.endsWith(sep))
         parts.append(QString());
+#elif defined(Q_OS_CYGWIN)
+    QStringList parts;
+    if (doubleSlash.isEmpty()) {
+        parts = pathCopy.split(re);
+        if (path[0] == sep[0]) {
+            // read the "/" at the beginning as the split removed it
+            parts[0] = sep[0];
+        }
+    } else {
+        parts = pathCopy.split(re, QString::SkipEmptyParts);
+        if (!doubleSlash.isEmpty() && !parts.isEmpty())
+            parts[0].prepend(doubleSlash);
+        if (pathCopy.endsWith(sep))
+            parts.append(QString());
+    }
 #elif defined(Q_OS_WIN)
     QStringList parts = pathCopy.split(re, QString::SkipEmptyParts);
     if (!doubleSlash.isEmpty() && !parts.isEmpty())
@@ -3356,6 +3383,8 @@ QStringList QFSCompleter::splitPath(cons
 
 #if defined(Q_OS_WIN) || defined(Q_OS_SYMBIAN)
     bool startsFromRoot = !parts.isEmpty() && parts[0].endsWith(QLatin1Char(':'));
+#elif defined(Q_OS_CYGWIN)
+    bool startsFromRoot = path[0] == sep[0] && doubleSlash.isEmpty();
 #else
     bool startsFromRoot = path[0] == sep[0];
 #endif
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/dialogs/qfiledialog_win.cpp qtwin-4.7.4/src/gui/dialogs/qfiledialog_win.cpp
--- qtwin-4.7.4.orig/src/gui/dialogs/qfiledialog_win.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/dialogs/qfiledialog_win.cpp	2011-10-01 22:50:21.000100000 +0200
@@ -196,10 +196,10 @@ static OPENFILENAME* qt_win_make_OFN(QWi
     else
         parent = QApplication::activeWindow();
 
-    tInitDir = QDir::toNativeSeparators(initialDirectory);
+    tInitDir = QDir::win32Path(initialDirectory);
     tFilters = filters;
     tTitle = title;
-    QString initSel = QDir::toNativeSeparators(initialSelection);
+    QString initSel = QDir::win32Path(initialSelection);
     if (!initSel.isEmpty()) {
         initSel.remove(QLatin1Char('<'));
         initSel.remove(QLatin1Char('>'));
@@ -288,7 +288,7 @@ QString qt_win_get_open_file_name(const
     if (idx)
         ofn->nFilterIndex = idx + 1;
     if (GetOpenFileName(ofn)) {
-        result = QString::fromWCharArray(ofn->lpstrFile);
+        result = QDir::posixPath(QString::fromWCharArray(ofn->lpstrFile));
         selFilIdx = ofn->nFilterIndex;
     }
     qt_win_clean_up_OFN(&ofn);
@@ -368,7 +368,7 @@ QString qt_win_get_save_file_name(const
     if (idx)
         ofn->nFilterIndex = idx + 1;
     if (GetSaveFileName(ofn)) {
-        result = QString::fromWCharArray(ofn->lpstrFile);
+        result = QDir::posixPath(QString::fromWCharArray(ofn->lpstrFile));
         selFilIdx = ofn->nFilterIndex;
     }
     qt_win_clean_up_OFN(&ofn);
@@ -451,7 +451,7 @@ static bool qt_win_set_IFileDialogOption
         delete []filterSpec;
     }
     // Set the starting folder.
-    tInitDir = QDir::toNativeSeparators(initialDirectory);
+    tInitDir = QDir::win32Path(initialDirectory);
     if (!tInitDir.isEmpty()) {
         IShellItem *psiDefaultFolder;
         hr = pSHCreateItemFromParsingName((wchar_t*)tInitDir.utf16(), NULL, QT_IID_IShellItem, 
@@ -463,7 +463,7 @@ static bool qt_win_set_IFileDialogOption
         }
     }
     // Set the currently selected file.
-    QString initSel = QDir::toNativeSeparators(initialSelection);
+    QString initSel = QDir::win32Path(initialSelection);
     if (!initSel.isEmpty()) {
         initSel.remove(QLatin1Char('<'));
         initSel.remove(QLatin1Char('>'));
@@ -540,7 +540,7 @@ static QStringList qt_win_CID_get_open_f
                         hr = psi->GetDisplayName(SIGDN_FILESYSPATH, &pszPath);
                         if (SUCCEEDED(hr)) {
                             QString fileName = QString::fromWCharArray(pszPath);
-                            result.append(fileName);
+                            result.append(QDir::posixPath(fileName));
                             CoTaskMemFree(pszPath);
                         }
                         psi->Release(); // Free the current item.
@@ -562,7 +562,7 @@ static QStringList qt_win_CID_get_open_f
             wchar_t *pszPath;
             hr = psi->GetDisplayName(SIGDN_FILESYSPATH, &pszPath);
             if (SUCCEEDED(hr)) {
-                *initialDirectory = QString::fromWCharArray(pszPath);
+                *initialDirectory = QDir::posixPath(QString::fromWCharArray(pszPath));
                 CoTaskMemFree(pszPath);
             }
             psi->Release();
@@ -622,7 +622,7 @@ QString qt_win_CID_get_existing_director
                     wchar_t *pszPath;
                     hr = psi->GetDisplayName(SIGDN_FILESYSPATH, &pszPath);
                     if (SUCCEEDED(hr)) {
-                        result = QString::fromWCharArray(pszPath);
+                        result = QDir::posixPath(QString::fromWCharArray(pszPath));
                         CoTaskMemFree(pszPath);
                     }
                     psi->Release(); // Free the current item.
@@ -695,17 +695,17 @@ QStringList qt_win_get_open_file_names(c
         int offset = fileOrDir.length() + 1;
         if (ofn->lpstrFile[offset] == 0) {
             // Only one file selected; has full path
-            fi.setFile(fileOrDir);
+            fi.setFile(QDir::posixPath(fileOrDir));
             QString res = fi.absoluteFilePath();
             if (!res.isEmpty())
                 result.append(res);
         }
         else {
             // Several files selected; first string is path
-            dir.setPath(fileOrDir);
+            dir.setPath(QDir::posixPath(fileOrDir));
             QString f;
             while(!(f = QString::fromWCharArray(ofn->lpstrFile + offset)).isEmpty()) {
-                fi.setFile(dir, f);
+                fi.setFile(dir, QDir::posixPath(f));
                 QString res = fi.absoluteFilePath();
                 if (!res.isEmpty())
                     result.append(res);
@@ -777,7 +777,7 @@ QString qt_win_get_existing_directory(co
     modal_widget.setParent(parent, Qt::Window);
     QApplicationPrivate::enterModal(&modal_widget);
 
-    QString initDir = QDir::toNativeSeparators(args.directory);
+    QString initDir = QDir::win32Path(args.directory);
     wchar_t path[MAX_PATH];
     wchar_t initPath[MAX_PATH];
     initPath[0] = 0;
@@ -805,7 +805,7 @@ QString qt_win_get_existing_directory(co
             if (ptrSHGetMalloc(&pMalloc) == NOERROR) {
                 pMalloc->Free(pItemIDList);
                 pMalloc->Release();
-                result = QString::fromWCharArray(path);
+                result = QDir::posixPath(QString::fromWCharArray(path));
             }
         }
     }
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/dialogs/qfilesystemmodel.cpp qtwin-4.7.4/src/gui/dialogs/qfilesystemmodel.cpp
--- qtwin-4.7.4.orig/src/gui/dialogs/qfilesystemmodel.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/dialogs/qfilesystemmodel.cpp	2011-10-01 22:50:21.000100000 +0200
@@ -372,11 +372,17 @@ QFileSystemModelPrivate::QFileSystemNode
         )
         return const_cast<QFileSystemModelPrivate::QFileSystemNode*>(&root);
     QModelIndex index = QModelIndex(); // start with "My Computer"
-#if defined(Q_OS_WIN) && !defined(Q_OS_WINCE)
+#if (defined(Q_OS_WIN) || defined(Q_OS_CYGWIN)) && !defined(Q_OS_WINCE)
     if (absolutePath.startsWith(QLatin1String("//"))) { // UNC path
+#if defined(Q_OS_CYGWIN)
+        QString host = QLatin1String("//") + pathElements.first();
+        if (absolutePath == host)
+            absolutePath.append(QLatin1Char('/'));
+#else
         QString host = QLatin1String("\\\\") + pathElements.first();
         if (absolutePath == QDir::fromNativeSeparators(host))
             absolutePath.append(QLatin1Char('/'));
+#endif
         if (longPath.endsWith(QLatin1Char('/')) && !absolutePath.endsWith(QLatin1Char('/')))
             absolutePath.append(QLatin1Char('/'));
         int r = 0;
@@ -410,7 +416,7 @@ QFileSystemModelPrivate::QFileSystemNode
             pathElements[0].chop(1);
     }
 #else
-    // add the "/" item, since it is a valid path element on Unix
+    // add the "/" item, since it is a valid path element on Unix and Cygwin
     if (absolutePath[0] == QLatin1Char('/'))
         pathElements.prepend(QLatin1String("/"));
 #endif
@@ -419,7 +425,7 @@ QFileSystemModelPrivate::QFileSystemNode
 
     for (int i = 0; i < pathElements.count(); ++i) {
         QString element = pathElements.at(i);
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_OS_CYGWIN)
         // On Windows, "filename......." and "filename" are equivalent Task #133928
         while (element.endsWith(QLatin1Char('.')))
             element.chop(1);
@@ -1309,7 +1315,7 @@ QString QFileSystemModelPrivate::filePat
         idx = idx.parent();
     }
     QString fullPath = QDir::fromNativeSeparators(path.join(QDir::separator()));
-#if !defined(Q_OS_WIN) || defined(Q_OS_WINCE)
+#if (!defined(Q_OS_WIN) && !defined(Q_OS_CYGWIN)) || defined(Q_OS_WINCE)
     if ((fullPath.length() > 2) && fullPath[0] == QLatin1Char('/') && fullPath[1] == QLatin1Char('/'))
         fullPath = fullPath.mid(1);
 #endif
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/dialogs/qfscompleter_p.h qtwin-4.7.4/src/gui/dialogs/qfscompleter_p.h
--- qtwin-4.7.4.orig/src/gui/dialogs/qfscompleter_p.h	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/dialogs/qfscompleter_p.h	2011-10-01 22:50:21.000100000 +0200
@@ -66,7 +66,7 @@ public:
     QFSCompleter(QFileSystemModel *model, QObject *parent = 0)
         : QCompleter(model, parent), proxyModel(0), sourceModel(model)
     {
-#if defined(Q_OS_WIN) || defined(Q_OS_SYMBIAN)
+#if defined(Q_OS_WIN) || defined(Q_OS_SYMBIAN) || defined(Q_OS_CYGWIN)
         setCaseSensitivity(Qt::CaseInsensitive);
 #endif
     }
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/dialogs/qmessagebox.cpp qtwin-4.7.4/src/gui/dialogs/qmessagebox.cpp
--- qtwin-4.7.4.orig/src/gui/dialogs/qmessagebox.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/dialogs/qmessagebox.cpp	2011-10-01 22:50:21.015700000 +0200
@@ -1365,7 +1365,7 @@ void QMessageBox::keyPressEvent(QKeyEven
             return;
         }
 
-#if defined (Q_OS_WIN) && !defined(QT_NO_CLIPBOARD) && !defined(QT_NO_SHORTCUT)
+#if (defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)) && !defined(QT_NO_CLIPBOARD) && !defined(QT_NO_SHORTCUT)
         if (e == QKeySequence::Copy) {
             QString separator = QString::fromLatin1("---------------------------\n");
             QString textToCopy = separator;
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/dialogs/qpagesetupdialog.h qtwin-4.7.4/src/gui/dialogs/qpagesetupdialog.h
--- qtwin-4.7.4.orig/src/gui/dialogs/qpagesetupdialog.h	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/dialogs/qpagesetupdialog.h	2011-10-01 22:50:21.015700000 +0200
@@ -84,7 +84,7 @@ public:
     void setOptions(PageSetupDialogOptions options);
     PageSetupDialogOptions options() const;
 
-#if defined(Q_WS_MAC) || defined(Q_OS_WIN)
+#if defined(Q_WS_MAC) || defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
     virtual void setVisible(bool visible);
 #endif
     virtual int exec();
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/dialogs/qprintdialog.h qtwin-4.7.4/src/gui/dialogs/qprintdialog.h
--- qtwin-4.7.4.orig/src/gui/dialogs/qprintdialog.h	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/dialogs/qprintdialog.h	2011-10-01 22:50:21.015700000 +0200
@@ -56,7 +56,7 @@ class QPrintDialogPrivate;
 class QPushButton;
 class QPrinter;
 
-#if defined (Q_OS_UNIX) && !defined(QTOPIA_PRINTDIALOG) && !defined(Q_WS_MAC) && !defined(Q_OS_SYMBIAN)
+#if defined (Q_OS_UNIX) && !defined(QTOPIA_PRINTDIALOG) && !defined(Q_WS_MAC) && !defined(Q_OS_SYMBIAN) && !defined(Q_CYGWIN_WIN)
 class QUnixPrintWidgetPrivate;
 
 class Q_GUI_EXPORT QUnixPrintWidget : public QWidget
@@ -91,7 +91,7 @@ public:
     ~QPrintDialog();
 
     int exec();
-#if defined (Q_OS_UNIX) && !defined(QTOPIA_PRINTDIALOG) && !defined(Q_WS_MAC)
+#if defined (Q_OS_UNIX) && !defined(QTOPIA_PRINTDIALOG) && !defined(Q_WS_MAC) && !defined(Q_CYGWIN_WIN)
     virtual void accept();
 #endif
     void done(int result);
@@ -143,10 +143,10 @@ Q_SIGNALS:
 private:
 #ifndef QTOPIA_PRINTDIALOG
     Q_PRIVATE_SLOT(d_func(), void _q_chbPrintLastFirstToggled(bool))
-#if defined (Q_OS_UNIX) && !defined (Q_OS_MAC)
+#if defined (Q_OS_UNIX) && !defined (Q_OS_MAC) && !defined(Q_CYGWIN_WIN)
     Q_PRIVATE_SLOT(d_func(), void _q_collapseOrExpandDialog())
 #endif
-# if defined(Q_OS_UNIX) && !defined (Q_OS_MAC) && !defined(QT_NO_MESSAGEBOX)
+# if defined(Q_OS_UNIX) && !defined (Q_OS_MAC) && !defined(QT_NO_MESSAGEBOX) && !defined(Q_CYGWIN_WIN)
     Q_PRIVATE_SLOT(d_func(), void _q_checkFields())
 # endif
 #else // QTOPIA_PRINTDIALOG
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/dialogs/qsidebar.cpp qtwin-4.7.4/src/gui/dialogs/qsidebar.cpp
--- qtwin-4.7.4.orig/src/gui/dialogs/qsidebar.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/dialogs/qsidebar.cpp	2011-10-01 22:50:21.031300000 +0200
@@ -253,7 +253,7 @@ void QUrlModel::addUrls(const QList<QUrl
 
         for (int j = 0; move && j < rowCount(); ++j) {
             QString local = index(j, 0).data(UrlRole).toUrl().toLocalFile();
-#if defined(Q_OS_WIN)
+#if defined(Q_OS_WIN) || defined(Q_OS_CYGWIN)
             if (index(j, 0).data(UrlRole).toUrl().toLocalFile().toLower() == cleanUrl.toLower()) {
 #else
             if (index(j, 0).data(UrlRole).toUrl().toLocalFile() == cleanUrl) {
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/gui.pro qtwin-4.7.4/src/gui/gui.pro
--- qtwin-4.7.4.orig/src/gui/gui.pro	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/gui.pro	2011-10-01 22:50:21.031300000 +0200
@@ -5,7 +5,7 @@ DEFINES   += QT_BUILD_GUI_LIB QT_NO_USIN
 win32-msvc*|win32-icc:QMAKE_LFLAGS += /BASE:0x65000000
 irix-cc*:QMAKE_CXXFLAGS += -no_prelink -ptused
 
-!win32:!embedded:!mac:!symbian:CONFIG      += x11
+!win32:!cygwin-g++-win32:!embedded:!mac:!symbian:CONFIG      += x11
 
 unix:QMAKE_PKGCONFIG_REQUIRES = QtCore
 
@@ -16,7 +16,7 @@ contains(QT_CONFIG, x11sm):CONFIG += x11
 #platforms
 x11:include(kernel/x11.pri)
 mac:include(kernel/mac.pri)
-win32:include(kernel/win.pri)
+win32|cygwin-g++-win32:include(kernel/win.pri)
 embedded:include(embedded/embedded.pri)
 symbian {
     include(kernel/symbian.pri)
@@ -42,7 +42,7 @@ include(math3d/math3d.pri)
 include(effects/effects.pri)
 
 include(egl/egl.pri)
-win32:!wince*: DEFINES += QT_NO_EGL
+win32|cygwin-g++-win32:!wince*: DEFINES += QT_NO_EGL
 embedded: QT += network
 
 QMAKE_LIBS += $$QMAKE_LIBS_GUI
@@ -81,7 +81,7 @@ neon:*-g++* {
 contains(QMAKE_MAC_XARCH, no) {
     DEFINES += QT_NO_MAC_XARCH
 } else {
-    win32-g++*|!win32:!win32-icc*:!macx-icc* {
+    win32-g++*|cygwin-g++*|!win32:!win32-icc*:!macx-icc* {
         mmx {
             mmx_compiler.commands = $$QMAKE_CXX -c -Winline
 
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/image/image.pri qtwin-4.7.4/src/gui/image/image.pri
--- qtwin-4.7.4.orig/src/gui/image/image.pri	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/image/image.pri	2011-10-01 22:50:21.031300000 +0200
@@ -57,7 +57,7 @@ SOURCES += \
         image/qimagepixmapcleanuphooks.cpp \
         image/qvolatileimage.cpp
 
-win32 {
+win32|cygwin-g++-win32 {
     SOURCES += image/qpixmap_win.cpp
 }
 else:embedded {
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/inputmethod/inputmethod.pri qtwin-4.7.4/src/gui/inputmethod/inputmethod.pri
--- qtwin-4.7.4.orig/src/gui/inputmethod/inputmethod.pri	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/inputmethod/inputmethod.pri	2011-10-01 22:50:21.031300000 +0200
@@ -11,7 +11,7 @@ x11 {
     HEADERS += inputmethod/qximinputcontext_p.h
     SOURCES += inputmethod/qximinputcontext_x11.cpp
 }
-win32 {
+win32|cygwin-g++-win32 {
     HEADERS += inputmethod/qwininputcontext_p.h
     SOURCES += inputmethod/qwininputcontext_win.cpp
 }
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/itemviews/qdirmodel.cpp qtwin-4.7.4/src/gui/itemviews/qdirmodel.cpp
--- qtwin-4.7.4.orig/src/gui/itemviews/qdirmodel.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/itemviews/qdirmodel.cpp	2011-10-01 22:50:21.046900000 +0200
@@ -853,10 +853,10 @@ QModelIndex QDirModel::index(const QStri
         return QModelIndex();
 
     QString absolutePath = QDir(path).absolutePath();
-#if (defined(Q_OS_WIN) && !defined(Q_OS_WINCE)) || defined(Q_OS_SYMBIAN)
+#if (defined(Q_OS_WIN) && !defined(Q_OS_WINCE)) || defined(Q_OS_SYMBIAN) || defined(Q_OS_CYGWIN)
     absolutePath = absolutePath.toLower();
 #endif
-#if defined(Q_OS_WIN) && !defined(Q_OS_WINCE)
+#if (defined(Q_OS_WIN) && !defined(Q_OS_WINCE)) || defined(Q_OS_CYGWIN)
     // On Windows, "filename......." and "filename" are equivalent
     if (absolutePath.endsWith(QLatin1Char('.'))) {
         int i;
@@ -880,9 +880,11 @@ QModelIndex QDirModel::index(const QStri
     if (!d->root.populated) // make sure the root is populated
         d->populate(&d->root);
 
-#if defined(Q_OS_WIN) && !defined(Q_OS_WINCE)
+#if (defined(Q_OS_WIN) && !defined(Q_OS_WINCE)) || defined(Q_OS_CYGWIN)
+    bool unc = false;
     if (absolutePath.startsWith(QLatin1String("//"))) { // UNC path
         QString host = pathElements.first();
+        unc = true;
         int r = 0;
         for (; r < d->root.children.count(); ++r)
             if (d->root.children.at(r).info.fileName() == host)
@@ -903,7 +905,7 @@ QModelIndex QDirModel::index(const QStri
         pathElements[0] += QLatin1Char('/');
     }
 #else
-    // add the "/" item, since it is a valid path element on unix
+    // add the "/" item, since it is a valid path element on Unix and Cygwin
     pathElements.prepend(QLatin1String("/"));
 #endif
 
@@ -922,7 +924,7 @@ QModelIndex QDirModel::index(const QStri
             const QFileInfo& fi = parent->children.at(j).info;
             QString childFileName;
             childFileName = idx.isValid() ? fi.fileName() : fi.absoluteFilePath();
-#if (defined(Q_OS_WIN) && !defined(Q_OS_WINCE)) || defined(Q_OS_SYMBIAN)
+#if (defined(Q_OS_WIN) && !defined(Q_OS_WINCE)) || defined(Q_OS_SYMBIAN) || defined(Q_OS_CYGWIN)
             childFileName = childFileName.toLower();
 #endif
             if (childFileName == element) {
@@ -935,7 +937,13 @@ QModelIndex QDirModel::index(const QStri
 
         // we couldn't find the path element, we create a new node since we _know_ that the path is valid
         if (row == -1) {
-#if defined(Q_OS_WINCE)
+#if defined(Q_OS_CYGWIN)
+            QString newPath;
+	    if (parent->info.absoluteFilePath() == QLatin1String("/") && !unc)
+		newPath = QLatin1Char('/') + element;
+	    else
+		newPath = parent->info.absoluteFilePath() + QLatin1Char('/') + element;
+#elif defined(Q_OS_WINCE)
             QString newPath;
             if (parent->info.isRoot())
                 newPath = parent->info.absoluteFilePath() + element;
@@ -1295,7 +1303,10 @@ QString QDirModelPrivate::name(const QMo
     const QFileInfo info = n->info;
     if (info.isRoot()) {
         QString name = info.absoluteFilePath();
-#if defined(Q_OS_WIN) && !defined(Q_OS_WINCE)
+#if defined(Q_OS_CYGWIN)
+        if (name.startsWith(QLatin1String("//"))) // UNC host
+            return info.fileName();
+#elif defined(Q_OS_WIN) && !defined(Q_OS_WINCE)
         if (name.startsWith(QLatin1Char('/'))) // UNC host
             return info.fileName();
 #endif        
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/itemviews/qfileiconprovider.cpp qtwin-4.7.4/src/gui/itemviews/qfileiconprovider.cpp
--- qtwin-4.7.4.orig/src/gui/itemviews/qfileiconprovider.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/itemviews/qfileiconprovider.cpp	2011-10-01 22:50:21.046900000 +0200
@@ -259,7 +259,7 @@ QIcon QFileIconProviderPrivate::getWinIc
 
     //Get the small icon
 #ifndef Q_OS_WINCE
-    val = SHGetFileInfo((const wchar_t *)QDir::toNativeSeparators(fileInfo.filePath()).utf16(), 0, &info,
+    val = SHGetFileInfo((const wchar_t *)QDir::win32Path(fileInfo.filePath()).utf16(), 0, &info,
                         sizeof(SHFILEINFO), SHGFI_ICON|SHGFI_SMALLICON|SHGFI_SYSICONINDEX|SHGFI_ADDOVERLAYS|SHGFI_OVERLAYINDEX);
 #else
     val = SHGetFileInfo((const wchar_t *)QDir::toNativeSeparators(fileInfo.filePath()).utf16(), 0, &info,
@@ -300,7 +300,7 @@ QIcon QFileIconProviderPrivate::getWinIc
 
     //Get the big icon
 #ifndef Q_OS_WINCE
-    val = SHGetFileInfo((const wchar_t *)QDir::toNativeSeparators(fileInfo.filePath()).utf16(), 0, &info,
+    val = SHGetFileInfo((const wchar_t *)QDir::win32Path(fileInfo.filePath()).utf16(), 0, &info,
                         sizeof(SHFILEINFO), SHGFI_ICON|SHGFI_LARGEICON|SHGFI_SYSICONINDEX|SHGFI_ADDOVERLAYS|SHGFI_OVERLAYINDEX);
 #else
     val = SHGetFileInfo((const wchar_t *)QDir::toNativeSeparators(fileInfo.filePath()).utf16(), 0, &info,
@@ -416,13 +416,19 @@ QIcon QFileIconProvider::icon(const QFil
     QIcon retIcon = d->getMacIcon(info);
     if (!retIcon.isNull())
         return retIcon;
+#elif defined Q_CYGWIN_WIN
+    if (!info.isRoot()) {
+        QIcon icon = d->getWinIcon(info);
+        if (!icon.isNull())
+            return icon;
+    }
 #elif defined Q_WS_WIN
     QIcon icon = d->getWinIcon(info);
     if (!icon.isNull())
         return icon;
 #endif
     if (info.isRoot())
-#if defined (Q_WS_WIN) && !defined(Q_WS_WINCE)
+#if defined (Q_WS_WIN) && !defined(Q_WS_WINCE) && !defined(Q_CYGWIN_WIN)
     {
         UINT type = GetDriveType((wchar_t *)info.absoluteFilePath().utf16());
 
@@ -480,7 +486,7 @@ QString QFileIconProvider::type(const QF
     }
 
     if (info.isDir())
-#ifdef Q_WS_WIN
+#if defined(Q_WS_WIN) && !defined(Q_CYGWIN_WIN)
         return QApplication::translate("QFileDialog", "File Folder", "Match Windows Explorer");
 #else
         return QApplication::translate("QFileDialog", "Folder", "All other platforms");
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/kernel/kernel.pri qtwin-4.7.4/src/gui/kernel/kernel.pri
--- qtwin-4.7.4.orig/src/gui/kernel/kernel.pri	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/kernel/kernel.pri	2011-10-01 22:50:21.046900000 +0200
@@ -88,7 +88,7 @@ SOURCES += \
     kernel/qdesktopwidget.cpp \
 	kernel/qguiplatformplugin.cpp
 
-win32 {
+win32|cygwin-g++-win32 {
 	DEFINES += QT_NO_DIRECTDRAW
 
     HEADERS += \
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/kernel/qapplication.cpp qtwin-4.7.4/src/gui/kernel/qapplication.cpp
--- qtwin-4.7.4.orig/src/gui/kernel/qapplication.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/kernel/qapplication.cpp	2011-10-01 22:50:21.062500000 +0200
@@ -2479,7 +2479,7 @@ bool QApplication::event(QEvent *e)
             if (!(w->windowType() == Qt::Desktop))
                 postEvent(w, new QEvent(QEvent::LanguageChange));
         }
-#ifndef Q_OS_WIN
+#if !defined(Q_OS_WIN) && !defined(Q_CYGWIN_WIN)
     } else if (e->type() == QEvent::LocaleChange) {
         // on Windows the event propagation is taken care by the
         // WM_SETTINGCHANGE event handler.
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/kernel/qapplication.h qtwin-4.7.4/src/gui/kernel/qapplication.h
--- qtwin-4.7.4.orig/src/gui/kernel/qapplication.h	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/kernel/qapplication.h	2011-10-01 22:50:21.062500000 +0200
@@ -330,7 +330,7 @@ public:
     enum { NormalColors = NormalColor, CustomColors = CustomColor };
     static inline QT3_SUPPORT ColorMode colorMode() { return static_cast<ColorMode>(colorSpec()); }
     static inline QT3_SUPPORT void setColorMode(ColorMode mode) { setColorSpec(int(mode)); }
-#if defined(Q_OS_WIN32) || defined(Q_OS_CYGWIN)
+#if defined(Q_OS_WIN32) || defined(Q_CYGWIN_WIN)
     static QT3_SUPPORT Qt::WindowsVersion winVersion() { return (Qt::WindowsVersion)QSysInfo::WindowsVersion; }
 #endif
 #if defined(Q_OS_MAC)
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/kernel/qapplication_p.h qtwin-4.7.4/src/gui/kernel/qapplication_p.h
--- qtwin-4.7.4.orig/src/gui/kernel/qapplication_p.h	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/kernel/qapplication_p.h	2011-10-01 22:50:21.062500000 +0200
@@ -93,7 +93,7 @@ extern bool qt_is_gui_used;
 extern QClipboard *qt_clipboard;
 #endif
 
-#if defined (Q_OS_WIN32) || defined (Q_OS_CYGWIN) || defined(Q_OS_WINCE)
+#if defined (Q_OS_WIN32) || defined (Q_CYGWIN_WIN) || defined(Q_OS_WINCE)
 extern QSysInfo::WinVersion qt_winver;
 enum { QT_TABLET_NPACKETQSIZE = 128 };
 # ifdef Q_OS_WINCE
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/kernel/qapplication_win.cpp qtwin-4.7.4/src/gui/kernel/qapplication_win.cpp
--- qtwin-4.7.4.orig/src/gui/kernel/qapplication_win.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/kernel/qapplication_win.cpp	2011-10-01 22:50:21.078100000 +0200
@@ -61,7 +61,11 @@ extern void qt_wince_hide_taskbar(HWND h
 #include "qapplication.h"
 #include "qdesktopwidget.h"
 #include "qevent.h"
+#ifdef Q_CYGWIN_WIN
+#include "private/qeventdispatcher_cygwin_p.h"
+#else
 #include "private/qeventdispatcher_win_p.h"
+#endif
 #include "qeventloop.h"
 #include "qclipboard.h"
 #include "qcursor.h"
@@ -167,11 +171,6 @@ typedef struct tagTOUCHINPUT
 #endif
 #include <pktdef.h>
 
-#if defined(__CYGWIN32__)
-#define __INSIDE_CYGWIN32__
-#include <mywinsock.h>
-#endif
-
 #ifndef IMR_RECONVERTSTRING
 #define IMR_RECONVERTSTRING 4
 #endif
@@ -1151,6 +1150,39 @@ static void qWinProcessConfigRequests()
     GUI event dispatcher
  *****************************************************************************/
 
+#ifdef Q_CYGWIN_WIN
+class QGuiEventDispatcherWin32 : public QEventDispatcherCygwin
+{
+    Q_DECLARE_PRIVATE(QEventDispatcherCygwin)
+public:
+    QGuiEventDispatcherWin32(QObject *parent = 0);
+    bool processEvents(QEventLoop::ProcessEventsFlags flags);
+};
+
+QGuiEventDispatcherWin32::QGuiEventDispatcherWin32(QObject *parent)
+    : QEventDispatcherCygwin(parent)
+{ }
+
+bool QGuiEventDispatcherWin32::processEvents(QEventLoop::ProcessEventsFlags flags)
+{
+    if (!QEventDispatcherCygwin::processEvents(flags))
+	return false;
+
+    if (configRequests)				// any pending configs?
+	qWinProcessConfigRequests();
+
+    return true;
+}
+
+void QApplicationPrivate::createEventDispatcher()
+{
+    Q_Q(QApplication);
+    if (q->type() != QApplication::Tty)
+	eventDispatcher = new QGuiEventDispatcherWin32(q);
+    else
+	eventDispatcher = new QEventDispatcherCygwin(q);
+}
+#else
 class QGuiEventDispatcherWin32 : public QEventDispatcherWin32
 {
     Q_DECLARE_PRIVATE(QEventDispatcherWin32)
@@ -1184,6 +1216,7 @@ void QApplicationPrivate::createEventDis
     else
         eventDispatcher = new QEventDispatcherWin32(q);
 }
+#endif
 
 /*****************************************************************************
   Platform specific QApplication members
@@ -1510,7 +1543,11 @@ extern "C" LRESULT QT_WIN_CALLBACK QtWnd
         if (qt_session_manager_self)
             qApp->commitData(*qt_session_manager_self);
         if (lParam & ENDSESSION_LOGOFF) {
+#if defined (Q_OS_CYGWIN)
+	    fflush(NULL);
+#else
             _flushall();
+#endif
         }
         RETURN(!sm_cancel);
     }
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/kernel/qgesturemanager.cpp qtwin-4.7.4/src/gui/kernel/qgesturemanager.cpp
--- qtwin-4.7.4.orig/src/gui/kernel/qgesturemanager.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/kernel/qgesturemanager.cpp	2011-10-01 22:50:21.078100000 +0200
@@ -53,7 +53,7 @@
 #ifdef Q_WS_MAC
 #include "qmacgesturerecognizer_mac_p.h"
 #endif
-#if defined(Q_OS_WIN) && !defined(QT_NO_NATIVE_GESTURES)
+#if (defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)) && !defined(QT_NO_NATIVE_GESTURES)
 #include "qwinnativepangesturerecognizer_win_p.h"
 #endif
 
@@ -87,7 +87,7 @@ QGestureManager::QGestureManager(QObject
     registerGestureRecognizer(new QSwipeGestureRecognizer);
     registerGestureRecognizer(new QTapGestureRecognizer);
 #endif
-#if defined(Q_OS_WIN)
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
   #if !defined(QT_NO_NATIVE_GESTURES)
     if (QApplicationPrivate::HasTouchSupport)
         registerGestureRecognizer(new QWinNativePanGestureRecognizer);
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/kernel/qkeymapper_p.h qtwin-4.7.4/src/gui/kernel/qkeymapper_p.h
--- qtwin-4.7.4.orig/src/gui/kernel/qkeymapper_p.h	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/kernel/qkeymapper_p.h	2011-10-01 22:50:21.078100000 +0200
@@ -91,7 +91,7 @@ private:
 
 
 
-#if defined(Q_OS_WIN)
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
 enum WindowsNativeModifiers {
     ShiftLeft            = 0x00000001,
     ControlLeft          = 0x00000002,
@@ -155,7 +155,7 @@ public:
     QLocale keyboardInputLocale;
     Qt::LayoutDirection keyboardInputDirection;
 
-#if defined(Q_OS_WIN)
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
     void clearRecordedKeys();
     void updateKeyMap(const MSG &msg);
     bool translateKeyEvent(QWidget *receiver, const MSG &msg, bool grab);
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/kernel/qsound_win.cpp qtwin-4.7.4/src/gui/kernel/qsound_win.cpp
--- qtwin-4.7.4.orig/src/gui/kernel/qsound_win.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/kernel/qsound_win.cpp	2011-10-01 22:50:21.093700000 +0200
@@ -45,6 +45,7 @@
 
 #include "qapplication.h"
 #include "qapplication_p.h"
+#include <qdir.h>
 #include <qfile.h>
 #include "qpointer.h"
 #include "qsound_p.h"
@@ -113,7 +114,7 @@ DWORD WINAPI SoundPlayProc(LPVOID param)
     QAuServerWindows *server = info->server;
     QSound *sound = info->sound;
     int loops = info->loops;
-    QString filename = info->filename;
+    QString filename = QDir::win32Path(info->filename);
     HANDLE mutex = server->mutex;
     HANDLE event = server->event;
     info = 0;
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/kernel/qwidget.cpp qtwin-4.7.4/src/gui/kernel/qwidget.cpp
--- qtwin-4.7.4.orig/src/gui/kernel/qwidget.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/kernel/qwidget.cpp	2011-10-01 22:50:21.109300000 +0200
@@ -4623,7 +4623,7 @@ const QPalette &QWidget::palette() const
     if (!isEnabled()) {
         data->pal.setCurrentColorGroup(QPalette::Disabled);
     } else if ((!isVisible() || isActiveWindow())
-#if defined(Q_OS_WIN) && !defined(Q_WS_WINCE)
+#if (defined(Q_OS_WIN) && !defined(Q_WS_WINCE)) || defined(Q_CYGWIN_WIN)
         && !QApplicationPrivate::isBlockedByModal(const_cast<QWidget *>(this))
 #endif
         ) {
@@ -6390,7 +6390,7 @@ void QWidget::setFocus(Qt::FocusReason r
     if (f->isActiveWindow()) {
         QApplicationPrivate::setFocusWidget(f, reason);
 #ifndef QT_NO_ACCESSIBILITY
-# ifdef Q_OS_WIN
+# if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
         // The negation of the condition in setFocus_sys
         if (!(testAttribute(Qt::WA_WState_Created) && window()->windowType() != Qt::Popup && internalWinId()))
             //setFocusWidget will already post a focus event for us (that the AT client receives) on Windows
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/painting/painting.pri qtwin-4.7.4/src/gui/painting/painting.pri
--- qtwin-4.7.4.orig/src/gui/painting/painting.pri	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/painting/painting.pri	2011-10-01 22:50:21.109300000 +0200
@@ -97,7 +97,7 @@ SOURCES += \
                 painting/qrasterdefs_p.h                \
                 painting/qgrayraster_p.h
 
-win32 {
+win32|cygwin-g++-win32 {
         HEADERS += painting/qprintengine_win_p.h
 
         SOURCES += \
@@ -158,14 +158,14 @@ unix:x11 {
                 painting/qprintengine_mac.mm \
 }
 
-unix:!mac:!symbian {
+unix:!mac:!symbian:!cygwin-g++-win32 {
         HEADERS += \
                 painting/qprinterinfo_unix_p.h
         SOURCES += \
                 painting/qprinterinfo_unix.cpp
 }
 
-win32|x11|mac|embedded|symbian {
+win32|cygwin-g++-win32|x11|mac|embedded|symbian {
         SOURCES += painting/qbackingstore.cpp
         HEADERS += painting/qbackingstore_p.h
 }
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/painting/qbezier.cpp qtwin-4.7.4/src/gui/painting/qbezier.cpp
--- qtwin-4.7.4.orig/src/gui/painting/qbezier.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/painting/qbezier.cpp	2011-10-01 22:50:21.109300000 +0200
@@ -65,6 +65,7 @@ QT_BEGIN_NAMESPACE
 #define M_SQRT2	1.41421356237309504880
 #endif
 
+#undef log2
 #define log2(x) (qLn(x)/qLn(2.))
 
 static inline qreal log4(qreal x)
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/painting/qdrawhelper.cpp qtwin-4.7.4/src/gui/painting/qdrawhelper.cpp
--- qtwin-4.7.4.orig/src/gui/painting/qdrawhelper.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/painting/qdrawhelper.cpp	2011-10-01 22:50:21.124900000 +0200
@@ -7221,7 +7221,7 @@ void qt_build_pow_tables() {
     }
 #endif
 
-#if defined(Q_OS_WIN) && !defined(Q_OS_WINCE)
+#if (defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)) && !defined(Q_OS_WINCE)
     const qreal gray_gamma = 2.31;
     for (int i=0; i<256; ++i)
         qt_pow_gamma[i] = uint(qRound(qPow(i / qreal(255.), gray_gamma) * 2047));
@@ -7281,7 +7281,7 @@ static inline void rgbBlendPixel(quint32
     *dst = qRgb(nr, ng, nb);
 }
 
-#if defined(Q_OS_WIN) && !defined(Q_OS_WINCE)
+#if (defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)) && !defined(Q_OS_WINCE)
 static inline void grayBlendPixel(quint32 *dst, int coverage, int sr, int sg, int sb)
 {
     // Do a gammacorrected gray alphablend...
@@ -7316,7 +7316,7 @@ static void qt_alphamapblit_quint32(QRas
     const quint32 c = color;
     const int destStride = rasterBuffer->bytesPerLine() / sizeof(quint32);
 
-#if defined(Q_OS_WIN) && !defined(Q_OS_WINCE)
+#if (defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)) && !defined(Q_OS_WINCE)
     int sr = qRed(color);
     int sg = qGreen(color);
     int sb = qBlue(color);
@@ -7338,7 +7338,7 @@ static void qt_alphamapblit_quint32(QRas
                 } else if (coverage == 255) {
                     dest[i] = c;
                 } else {
-#if defined(Q_OS_WIN) && !defined(Q_OS_WINCE)
+#if (defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)) && !defined(Q_OS_WINCE)
                     if (QSysInfo::WindowsVersion >= QSysInfo::WV_XP && opaque_src
                         && qAlpha(dest[i]) == 255) {
                         grayBlendPixel(dest+i, coverage, sr, sg, sb);
@@ -7379,7 +7379,7 @@ static void qt_alphamapblit_quint32(QRas
                     } else if (coverage == 255) {
                         dest[xp] = c;
                     } else {
-#if defined(Q_OS_WIN) && !defined(Q_OS_WINCE)
+#if (defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)) && !defined(Q_OS_WINCE)
                         if (QSysInfo::WindowsVersion >= QSysInfo::WV_XP && opaque_src
                             && qAlpha(dest[xp]) == 255) {
                             grayBlendPixel(dest+xp, coverage, sr, sg, sb);
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/painting/qprinter.cpp qtwin-4.7.4/src/gui/painting/qprinter.cpp
--- qtwin-4.7.4.orig/src/gui/painting/qprinter.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/painting/qprinter.cpp	2011-10-01 22:50:21.124900000 +0200
@@ -162,7 +162,7 @@ void QPrinterPrivate::createDefaultEngin
 {
     QPrinter::OutputFormat realOutputFormat = outputFormat;
 #if !defined (QTOPIA_PRINTENGINE)
-#if defined (Q_OS_UNIX) && ! defined (Q_WS_MAC)
+#if defined (Q_OS_UNIX) && ! defined (Q_WS_MAC) && ! defined (Q_CYGWIN_WIN)
     if(outputFormat == QPrinter::NativeFormat) {
         realOutputFormat = QPrinter::PostScriptFormat;
     }
@@ -802,7 +802,7 @@ void QPrinter::setPrinterName(const QStr
     Q_D(QPrinter);
     ABORT_IF_ACTIVE("QPrinter::setPrinterName");
 
-#if defined(Q_OS_UNIX) && !defined(QT_NO_CUPS)
+#if defined(Q_OS_UNIX) && !defined(QT_NO_CUPS) && !defined(Q_CYGWIN_WIN)
     if(d->use_default_engine
         && d->outputFormat == QPrinter::NativeFormat) {
         if (QCUPSSupport::cupsVersion() >= 10200
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/styles/qwindowsstyle.cpp qtwin-4.7.4/src/gui/styles/qwindowsstyle.cpp
--- qtwin-4.7.4.orig/src/gui/styles/qwindowsstyle.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/styles/qwindowsstyle.cpp	2011-10-01 22:50:21.140500000 +0200
@@ -918,7 +918,7 @@ static const char *const question_xpm[]
 
 #endif //QT_NO_IMAGEFORMAT_XPM
 
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
 static QPixmap loadIconFromShell32( int resourceId, int size )
 {
 #ifdef Q_OS_WINCE
@@ -3258,7 +3258,7 @@ QIcon QWindowsStyle::standardIconImpleme
 {
     QIcon icon;
     QPixmap pixmap;
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
     switch (standardIcon) {
     case SP_FileDialogNewFolder:
     {
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/text/qfontdatabase.cpp qtwin-4.7.4/src/gui/text/qfontdatabase.cpp
--- qtwin-4.7.4.orig/src/gui/text/qfontdatabase.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/text/qfontdatabase.cpp	2011-10-01 22:50:21.140500000 +0200
@@ -645,7 +645,7 @@ public:
     struct ApplicationFont {
         QString fileName;
         QByteArray data;
-#if defined(Q_OS_WIN)
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
         HANDLE handle;
         bool memoryFont;
         QVector<FONTSIGNATURE> signatures;
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/text/qfontdatabase_win.cpp qtwin-4.7.4/src/gui/text/qfontdatabase_win.cpp
--- qtwin-4.7.4.orig/src/gui/text/qfontdatabase_win.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/text/qfontdatabase_win.cpp	2011-10-01 22:50:21.140500000 +0200
@@ -1114,7 +1114,7 @@ static void registerFont(QFontDatabasePr
         PtrAddFontResourceExW ptrAddFontResourceExW = (PtrAddFontResourceExW)QSystemLibrary::resolve(QLatin1String("gdi32"),
                                                                                                "AddFontResourceExW");
         if (!ptrAddFontResourceExW
-            || ptrAddFontResourceExW((wchar_t*)fnt->fileName.utf16(), FR_PRIVATE, 0) == 0)
+            || ptrAddFontResourceExW((wchar_t*)QDir::win32Path(fnt->fileName).utf16(), FR_PRIVATE, 0) == 0)
             return;
 #endif // Q_OS_WINCE
 
@@ -1154,7 +1154,7 @@ bool QFontDatabase::removeApplicationFon
         PtrRemoveFontResourceExW ptrRemoveFontResourceExW = (PtrRemoveFontResourceExW)QSystemLibrary::resolve(QLatin1String("gdi32"),
                                                                                                         "RemoveFontResourceExW");
         if (!ptrRemoveFontResourceExW
-            || !ptrRemoveFontResourceExW((LPCWSTR)font.fileName.utf16(), FR_PRIVATE, 0))
+            || !ptrRemoveFontResourceExW((LPCWSTR)QDir::win32Path(font.fileName).utf16(), FR_PRIVATE, 0))
             return false;
 #endif // Q_OS_WINCE
     }
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/text/qfontengine_win.cpp qtwin-4.7.4/src/gui/text/qfontengine_win.cpp
--- qtwin-4.7.4.orig/src/gui/text/qfontengine_win.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/text/qfontengine_win.cpp	2011-10-01 22:50:21.156100000 +0200
@@ -653,7 +653,7 @@ static const ushort char_table[] = {
 
 static const int char_table_entries = sizeof(char_table)/sizeof(ushort);
 
-#ifndef Q_CC_MINGW
+#ifndef Q_CC_GNU
 void QFontEngineWin::getGlyphBearings(glyph_t glyph, qreal *leftBearing, qreal *rightBearing)
 {
     HDC hdc = shared_dc();
@@ -678,7 +678,7 @@ void QFontEngineWin::getGlyphBearings(gl
     }
 #endif
 }
-#endif // Q_CC_MINGW
+#endif // Q_CC_GNU
 
 qreal QFontEngineWin::minLeftBearing() const
 {
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/text/qfontengine_win_p.h qtwin-4.7.4/src/gui/text/qfontengine_win_p.h
--- qtwin-4.7.4.orig/src/gui/text/qfontengine_win_p.h	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/text/qfontengine_win_p.h	2011-10-01 22:50:21.156100000 +0200
@@ -106,7 +106,7 @@ public:
     virtual QImage alphaMapForGlyph(glyph_t, const QTransform &xform);
     virtual QImage alphaRGBMapForGlyph(glyph_t t, int margin, const QTransform &xform);
 
-#ifndef Q_CC_MINGW
+#ifndef Q_CC_GNU
     virtual void getGlyphBearings(glyph_t glyph, qreal *leftBearing = 0, qreal *rightBearing = 0);
 #endif
 
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/text/text.pri qtwin-4.7.4/src/gui/text/text.pri
--- qtwin-4.7.4.orig/src/gui/text/text.pri	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/text/text.pri	2011-10-01 22:50:21.156100000 +0200
@@ -71,7 +71,7 @@ SOURCES += \
 	text/qtextodfwriter.cpp \
 	text/qstatictext.cpp
 
-win32 {
+win32|cygwin-g++-win32 {
 	SOURCES += \
 		text/qfont_win.cpp \
 		text/qfontengine_win.cpp
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/util/qcompleter.cpp qtwin-4.7.4/src/gui/util/qcompleter.cpp
--- qtwin-4.7.4.orig/src/gui/util/qcompleter.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/util/qcompleter.cpp	2011-10-01 22:50:21.171700000 +0200
@@ -1029,7 +1029,7 @@ void QCompleter::setModel(QAbstractItemM
         delete oldModel;
 #ifndef QT_NO_DIRMODEL
     if (qobject_cast<QDirModel *>(model)) {
-#if (defined(Q_OS_WIN) && !defined(Q_OS_WINCE)) || defined(Q_OS_SYMBIAN)
+#if (defined(Q_OS_WIN) && !defined(Q_OS_WINCE)) || defined(Q_OS_SYMBIAN) || defined(Q_OS_CYGWIN)
         setCaseSensitivity(Qt::CaseInsensitive);
 #else
         setCaseSensitivity(Qt::CaseSensitive);
@@ -1039,7 +1039,7 @@ void QCompleter::setModel(QAbstractItemM
 #ifndef QT_NO_FILESYSTEMMODEL
     QFileSystemModel *fsModel = qobject_cast<QFileSystemModel *>(model);
     if (fsModel) {
-#if (defined(Q_OS_WIN) && !defined(Q_OS_WINCE)) || defined(Q_OS_SYMBIAN)
+#if (defined(Q_OS_WIN) && !defined(Q_OS_WINCE)) || defined(Q_OS_SYMBIAN) || defined(Q_OS_CYGWIN)
         setCaseSensitivity(Qt::CaseInsensitive);
 #else
         setCaseSensitivity(Qt::CaseSensitive);
@@ -1766,6 +1766,14 @@ QStringList QCompleter::splitPath(const
 #if defined(Q_OS_SYMBIAN)
     if (pathCopy == QLatin1String("\\"))
         return QStringList(pathCopy);
+#elif defined(Q_OS_CYGWIN)
+    if (pathCopy == QLatin1String("//"))
+        return QStringList(pathCopy);
+    QString doubleSlash(QLatin1String("//"));
+    if (pathCopy.startsWith(doubleSlash))
+        pathCopy = pathCopy.mid(2);
+    else
+        doubleSlash.clear();
 #elif defined(Q_OS_WIN) && !defined(Q_OS_WINCE)
     if (pathCopy == QLatin1String("\\") || pathCopy == QLatin1String("\\\\"))
         return QStringList(pathCopy);
@@ -1781,6 +1789,13 @@ QStringList QCompleter::splitPath(const
 
 #if defined(Q_OS_SYMBIAN)
     // Do nothing
+#elif defined(Q_OS_CYGWIN)
+    if (!doubleSlash.isEmpty())
+        parts[0].prepend(doubleSlash);
+    else if (pathCopy[0] == sep[0]) {
+        // readd the "/" at the beginning as the split removed it
+        parts[0] = QString(sep[0]);
+    }
 #elif defined(Q_OS_WIN) && !defined(Q_OS_WINCE)
     if (!doubleSlash.isEmpty())
         parts[0].prepend(doubleSlash);
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/util/qdesktopservices_win.cpp qtwin-4.7.4/src/gui/util/qdesktopservices_win.cpp
--- qtwin-4.7.4.orig/src/gui/util/qdesktopservices_win.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/util/qdesktopservices_win.cpp	2011-10-01 22:50:21.171700000 +0200
@@ -253,7 +253,7 @@ QString QDesktopServices::storageLocatio
     default:
         break;
     }
-    return result;
+    return QDir::posixPath(result);
 }
 
 QString QDesktopServices::displayName(StandardLocation type)
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/util/util.pri qtwin-4.7.4/src/gui/util/util.pri
--- qtwin-4.7.4.orig/src/gui/util/util.pri	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/util/util.pri	2011-10-01 22:50:21.171700000 +0200
@@ -23,7 +23,7 @@ SOURCES += \
 wince* {
 		SOURCES += \
 				util/qsystemtrayicon_wince.cpp
-} else:win32 {
+} else:win32|cygwin-g++-win32 {
 		SOURCES += \
 				util/qsystemtrayicon_win.cpp
 }
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/widgets/qabstractspinbox.cpp qtwin-4.7.4/src/gui/widgets/qabstractspinbox.cpp
--- qtwin-4.7.4.orig/src/gui/widgets/qabstractspinbox.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/widgets/qabstractspinbox.cpp	2011-10-01 22:50:21.171700000 +0200
@@ -1180,7 +1180,7 @@ static int getKeyboardAutoRepeatRate() {
     TTimeIntervalMicroSeconds32 time;
     S60->wsSession().GetKeyboardRepeatRate(initialTime, time);
     ret = time.Int() / 1000; // msecs
-#elif defined(Q_OS_WIN) && !defined(Q_OS_WINCE)
+#elif (defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)) && !defined(Q_OS_WINCE)
     DWORD time;
     if (SystemParametersInfo(SPI_GETKEYBOARDSPEED, 0, &time, 0) != FALSE)
         ret = static_cast<int>(1000 / static_cast<int>(time)); // msecs
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/widgets/qdockwidget.cpp qtwin-4.7.4/src/gui/widgets/qdockwidget.cpp
--- qtwin-4.7.4.orig/src/gui/widgets/qdockwidget.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/widgets/qdockwidget.cpp	2011-10-01 22:50:21.187300000 +0200
@@ -855,7 +855,7 @@ bool QDockWidgetPrivate::mouseMoveEvent(
             && (event->pos() - state->pressPos).manhattanLength()
                 > QApplication::startDragDistance()) {
             startDrag();
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
             grabMouseWhileInWindow();
 #else
             q->grabMouse();
@@ -926,7 +926,7 @@ void QDockWidgetPrivate::nonClientAreaMo
             initDrag(event->pos(), true);
             if (state == 0)
                 break;
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
             // On Windows, NCA mouse events don't contain modifier info
             state->ctrlDrag = GetKeyState(VK_CONTROL) & 0x8000;
 #else
@@ -1434,7 +1434,7 @@ bool QDockWidget::event(QEvent *event)
         if (d->mouseMoveEvent(static_cast<QMouseEvent *>(event)))
             return true;
         break;
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
     case QEvent::Leave:
         if (d->state != 0 && d->state->dragging && !d->state->nca) {
             // This is a workaround for loosing the mouse on Vista.
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/widgets/qeffects.cpp qtwin-4.7.4/src/gui/widgets/qeffects.cpp
--- qtwin-4.7.4.orig/src/gui/widgets/qeffects.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/widgets/qeffects.cpp	2011-10-01 22:50:21.187300000 +0200
@@ -160,7 +160,7 @@ void QAlphaWidget::run(int time)
     checkTime.start();
 
     showWidget = true;
-#if defined(Q_OS_WIN) && !defined(Q_OS_WINCE)
+#if (defined(Q_OS_WIN) && !defined(Q_OS_WINCE)) || defined(Q_CYGWIN_WIN)
     qApp->installEventFilter(this);
     widget->setWindowOpacity(0.0);
     widget->show();
@@ -267,7 +267,7 @@ void QAlphaWidget::render()
     else
         alpha = 1;
 
-#if defined(Q_OS_WIN) && !defined(Q_OS_WINCE)
+#if (defined(Q_OS_WIN) && !defined(Q_OS_WINCE)) || defined(Q_CYGWIN_WIN)
     if (alpha >= windowOpacity || !showWidget) {
         anim.stop();
         qApp->removeEventFilter(this);
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/widgets/qmenu.cpp qtwin-4.7.4/src/gui/widgets/qmenu.cpp
--- qtwin-4.7.4.orig/src/gui/widgets/qmenu.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/widgets/qmenu.cpp	2011-10-01 22:50:21.187300000 +0200
@@ -2762,7 +2762,7 @@ void QMenu::keyPressEvent(QKeyEvent *e)
 #endif
         }
 
-#ifdef Q_OS_WIN32
+#if defined(Q_OS_WIN32) || defined(Q_CYGWIN_WIN)
         if (key_consumed && (e->key() == Qt::Key_Control || e->key() == Qt::Key_Shift || e->key() == Qt::Key_Meta))
             QApplication::beep();
 #endif // Q_OS_WIN32
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/gui/widgets/qtoolbar.cpp qtwin-4.7.4/src/gui/widgets/qtoolbar.cpp
--- qtwin-4.7.4.orig/src/gui/widgets/qtoolbar.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/gui/widgets/qtoolbar.cpp	2011-10-01 22:50:21.202900000 +0200
@@ -354,7 +354,7 @@ bool QToolBarPrivate::mouseMoveEvent(QMo
 
             startDrag(moving);
             if (!moving && !wasDragging) {
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
                 grabMouseWhileInWindow();
 #else
                 q->grabMouse();
@@ -1223,7 +1223,7 @@ bool QToolBar::event(QEvent *event)
 #endif
     case QEvent::Leave:
         if (d->state != 0 && d->state->dragging) {
-#ifdef Q_OS_WIN
+#if defined(Q_OS_WIN) || defined(Q_CYGWIN_WIN)
             // This is a workaround for loosing the mouse on Vista.
             QPoint pos = QCursor::pos();
             QMouseEvent fake(QEvent::MouseMove, mapFromGlobal(pos), pos, Qt::NoButton,
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/multimedia/audio/audio.pri qtwin-4.7.4/src/multimedia/audio/audio.pri
--- qtwin-4.7.4.orig/src/multimedia/audio/audio.pri	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/multimedia/audio/audio.pri	2011-10-01 22:50:21.202900000 +0200
@@ -32,7 +32,7 @@ mac {
 
     LIBS += -framework ApplicationServices -framework CoreAudio -framework AudioUnit -framework AudioToolbox
 
-} else:win32 {
+} else:win32|cygwin-g++* {
 
     HEADERS += $$PWD/qaudioinput_win32_p.h $$PWD/qaudiooutput_win32_p.h $$PWD/qaudiodeviceinfo_win32_p.h
     SOURCES += $$PWD/qaudiodeviceinfo_win32_p.cpp \
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/network/bearer/qnetworksession.h qtwin-4.7.4/src/network/bearer/qnetworksession.h
--- qtwin-4.7.4.orig/src/network/bearer/qnetworksession.h	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/network/bearer/qnetworksession.h	2011-10-01 22:50:21.202900000 +0200
@@ -50,7 +50,7 @@
 
 #ifndef QT_NO_BEARERMANAGEMENT
 
-#if defined(Q_OS_WIN) && defined(interface)
+#if (defined(Q_OS_WIN) || defined(Q_OS_CYGWIN)) && defined(interface)
 #undef interface
 #endif
 
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/network/ssl/qsslsocket_openssl_symbols.cpp qtwin-4.7.4/src/network/ssl/qsslsocket_openssl_symbols.cpp
--- qtwin-4.7.4.orig/src/network/ssl/qsslsocket_openssl_symbols.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/network/ssl/qsslsocket_openssl_symbols.cpp	2011-10-01 22:50:21.202900000 +0200
@@ -338,7 +338,11 @@ static QStringList findAllLibSsl()
     QStringList foundSsls;
     foreach (const QString &path, paths) {
         QDir dir = QDir(path);
+#ifdef Q_OS_CYGWIN
+        QStringList entryList = dir.entryList(QStringList() << QLatin1String("cygssl-*"), QDir::Files);
+#else
         QStringList entryList = dir.entryList(QStringList() << QLatin1String("libssl.*"), QDir::Files);
+#endif
 
         qSort(entryList.begin(), entryList.end(), libGreaterThan);
         foreach (const QString &entry, entryList)
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/opengl/opengl.pro qtwin-4.7.4/src/opengl/opengl.pro
--- qtwin-4.7.4.orig/src/opengl/opengl.pro	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/opengl/opengl.pro	2011-10-01 22:50:21.218500000 +0200
@@ -11,7 +11,7 @@ unix:QMAKE_PKGCONFIG_REQUIRES = QtCore Q
 
 include(../qbase.pri)
 
-!win32:!embedded:!mac:!symbian:CONFIG	   += x11
+!win32:!cygwin-g++-win32:!embedded:!mac:!symbian:CONFIG	   += x11
 contains(QT_CONFIG, opengl):CONFIG += opengl
 contains(QT_CONFIG, opengles1):CONFIG += opengles1
 contains(QT_CONFIG, opengles2):CONFIG += opengles2
@@ -116,7 +116,7 @@ mac {
                          qglpixelbuffer_mac.mm
     LIBS_PRIVATE += -framework AppKit -framework Carbon
 }
-win32:!wince*: {
+win32|cygwin-g++-win32:!wince*: {
     DEFINES += QT_NO_EGL
     SOURCES += qgl_win.cpp \
 	           qglpixelbuffer_win.cpp
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/plugins/plugins.pro qtwin-4.7.4/src/plugins/plugins.pro
--- qtwin-4.7.4.orig/src/plugins/plugins.pro	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/plugins/plugins.pro	2011-10-01 22:50:21.218500000 +0200
@@ -9,7 +9,7 @@ unix:!symbian {
 !contains(QT_CONFIG, no-gui): SUBDIRS *= imageformats iconengines
 !embedded:!contains(QT_CONFIG, no-gui):SUBDIRS *= graphicssystems
 embedded:SUBDIRS *=  gfxdrivers decorations mousedrivers kbddrivers
-!win32:!embedded:!mac:!symbian:!contains(QT_CONFIG, no-gui):SUBDIRS *= inputmethods
+!win32:!cygwin-g++-win32:!embedded:!mac:!symbian:!contains(QT_CONFIG, no-gui):SUBDIRS *= inputmethods
 !symbian:!contains(QT_CONFIG, no-gui):SUBDIRS += accessible
 symbian:SUBDIRS += s60
 contains(QT_CONFIG, phonon): SUBDIRS *= phonon
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/qbase.pri qtwin-4.7.4/src/qbase.pri
--- qtwin-4.7.4.orig/src/qbase.pri	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/qbase.pri	2011-10-01 22:50:21.218500000 +0200
@@ -129,6 +129,7 @@ DEPENDPATH += $$WORKSPACE_H;$$XML_H;$$ST
 embedded:DEPENDPATH += ;$$EMBEDDED_H
 
 !static:PRL_EXPORT_DEFINES += QT_SHARED
+cygwin-g++-win32:PRL_EXPORT_DEFINES += Q_CYGWIN_WIN
 
 #install directives
 include(qt_install.pri)
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/qt3support/network/q3dns.cpp qtwin-4.7.4/src/qt3support/network/q3dns.cpp
--- qtwin-4.7.4.orig/src/qt3support/network/q3dns.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/src/qt3support/network/q3dns.cpp	2011-10-01 22:50:21.218500000 +0200
@@ -42,7 +42,7 @@
 #include "qplatformdefs.h"
 #include "qbytearray.h"
 #include <private/qsystemlibrary_p.h>
-#if defined(Q_OS_WIN32) || defined(Q_OS_WINCE) || defined(Q_OS_CYGWIN)
+#if defined(Q_OS_WIN32) || defined(Q_OS_WINCE)
 # include "qt_windows.h"
 #else
 # include <sys/types.h>
@@ -2214,7 +2214,7 @@ void Q3Dns::connectNotify( const char *s
 }
 #endif
 
-#if defined(Q_OS_WIN32) || defined(Q_OS_CYGWIN)
+#if defined(Q_OS_WIN32)
 
 #if defined(Q_DNS_SYNCHRONOUS)
 void Q3Dns::doSynchronousLookup()
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/tools/moc/moc.pro qtwin-4.7.4/src/tools/moc/moc.pro
--- qtwin-4.7.4.orig/src/tools/moc/moc.pro	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/tools/moc/moc.pro	2011-10-01 22:50:21.234100000 +0200
@@ -8,6 +8,8 @@ DEPENDPATH	+= .
 LIBS	        =
 OBJECTS_DIR	= .
 
+win32:VPATH += $$QT_SOURCE_TREE/src/tools/moc
+ 
 include(moc.pri)
 HEADERS += qdatetime_p.h
 SOURCES += main.cpp
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/tools/rcc/rcc.pro qtwin-4.7.4/src/tools/rcc/rcc.pro
--- qtwin-4.7.4.orig/src/tools/rcc/rcc.pro	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/tools/rcc/rcc.pro	2011-10-01 22:50:21.234100000 +0200
@@ -5,6 +5,7 @@ DESTDIR = ../../../bin
 DEFINES += QT_RCC
 INCLUDEPATH += .
 DEPENDPATH += .
+win32:VPATH += $$QT_SOURCE_TREE/src/tools
 
 include(rcc.pri)
 HEADERS += ../../corelib/kernel/qcorecmdlineargs_p.h
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/src/tools/uic/uic.pro qtwin-4.7.4/src/tools/uic/uic.pro
--- qtwin-4.7.4.orig/src/tools/uic/uic.pro	2011-09-12 08:49:29.000000000 +0200
+++ qtwin-4.7.4/src/tools/uic/uic.pro	2011-10-01 22:50:21.234100000 +0200
@@ -5,6 +5,7 @@ DESTDIR = ../../../bin
 DEFINES += QT_UIC
 INCLUDEPATH += .
 DEPENDPATH += .
+win32:VPATH += $$QT_SOURCE_TREE/src/tools
 
 !contains(QT_CONFIG, qt3support):DEFINES += QT_NO_QT3_SUPPORT
 
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/tools/configure/configure.pro qtwin-4.7.4/tools/configure/configure.pro
--- qtwin-4.7.4.orig/tools/configure/configure.pro	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/tools/configure/configure.pro	2011-10-01 22:50:21.234100000 +0200
@@ -1,4 +1,4 @@
-TARGET    = configure
+TARGET    = mingw-configure
 DESTDIR   = $$PWD/../..  # build directly in source dir
 
 CONFIG   += console flat
@@ -7,6 +7,7 @@ DEFINES  = UNICODE QT_NODLL QT_NO_CODECS
 DEFINES  += QT_BOOTSTRAPPED
 
 win32 : LIBS += -lole32 -ladvapi32
+win32 : VPATH += $$QT_SOURCE_TREE
 win32-msvc.net | win32-msvc2* : QMAKE_CXXFLAGS += /EHsc
 win32-g++* : LIBS += -luuid
 
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/tools/configure/configureapp.cpp qtwin-4.7.4/tools/configure/configureapp.cpp
--- qtwin-4.7.4.orig/tools/configure/configureapp.cpp	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/tools/configure/configureapp.cpp	2011-10-01 22:50:21.249700000 +0200
@@ -89,9 +89,41 @@ bool writeToFile(const char* text, const
     return true;
 }
 
-Configure::Configure(int& argc, char** argv)
+bool ensurePath(const QString &absPath)
 {
-    useUnixSeparators = false;
+    QDir dir(absPath);
+
+    if (dir.exists())
+        return true;
+
+    return dir.mkpath(dir.absolutePath());
+}
+
+Configure::Configure( int& argc, char** argv ) : cygRoot("C:/cygwin")
+{
+    HKEY key;
+    char buf[MAX_PATH];
+    DWORD bufSize = sizeof(buf);
+    LONG retVal = RegOpenKeyExA(HKEY_LOCAL_MACHINE,
+                     "Software\\Cygwin\\setup", 0, KEY_QUERY_VALUE, &key);
+    if (retVal == ERROR_SUCCESS) {
+        retVal = RegQueryValueExA(key, "rootdir", NULL, NULL,
+                (LPBYTE) buf, &bufSize);
+        RegCloseKey(key);
+    } else {
+        LONG retVal = RegOpenKeyExA(HKEY_LOCAL_MACHINE,
+                         "Software\\Cygnus Solutions\\Cygwin\\mounts v2\\/",
+                         0, KEY_QUERY_VALUE, &key);
+        if (retVal == ERROR_SUCCESS) {
+            retVal = RegQueryValueExA(key, "native", NULL, NULL,
+                                     (LPBYTE) buf, &bufSize);
+            RegCloseKey(key);
+        }
+    }
+    if ((retVal == ERROR_SUCCESS) && (bufSize < sizeof(buf)))
+        cygRoot = QString(buf).replace('\\','/');
+
+    useUnixSeparators = true;
     // Default values for indentation
     optionIndent = 4;
     descIndent   = 25;
@@ -181,16 +213,20 @@ Configure::Configure(int& argc, char** a
             QFile syncqt(buildPath + "/bin/syncqt");
             if (syncqt.open(QFile::WriteOnly)) {
                 QTextStream stream(&syncqt);
-                stream << "#!/usr/bin/perl -w" << endl
-                       << "require \"" << sourcePath + "/bin/syncqt\";" << endl;
+                stream << "#!/bin/sh" << endl
+                       << "QTDIR=\"" << posixPath(sourcePath)
+                       << "\"; export QTDIR" << endl
+                       << "perl \"" << posixPath(sourcePath) + "/bin/syncqt\""
+                       << " -outdir \"" << posixPath(buildPath) + "\"" << endl;
             }
             QFile syncqt_bat(buildPath + "/bin/syncqt.bat");
             if (syncqt_bat.open(QFile::WriteOnly)) {
                 QTextStream stream(&syncqt_bat);
                 stream << "@echo off" << endl
-                       << "set QTDIR=" << QDir::toNativeSeparators(sourcePath) << endl
-                       << "call " << fixSeparators(sourcePath) << fixSeparators("/bin/syncqt.bat -outdir \"") << fixSeparators(buildPath) << "\"" << endl
-                       << "set QTDIR=" << QDir::toNativeSeparators(buildPath) << endl;
+                       << "set QTDIR=" << sourcePath << endl
+                       << cygRoot << "/bin/sh \"" << posixPath(buildPath)
+                       << "/bin/syncqt\"" << endl
+                       << "set QTDIR=" << buildPath << endl;
                 syncqt_bat.close();
             }
         }
@@ -259,12 +295,12 @@ Configure::Configure(int& argc, char** a
     dictionary[ "STL" ]             = "yes";
     dictionary[ "EXCEPTIONS" ]      = "yes";
     dictionary[ "RTTI" ]            = "yes";
-    dictionary[ "MMX" ]             = "auto";
+    dictionary[ "MMX" ]             = "yes";
     dictionary[ "3DNOW" ]           = "auto";
-    dictionary[ "SSE" ]             = "auto";
+    dictionary[ "SSE" ]             = "yes";
     dictionary[ "SSE2" ]            = "auto";
     dictionary[ "IWMMXT" ]          = "auto";
-    dictionary[ "SYNCQT" ]          = "auto";
+    dictionary[ "SYNCQT" ]          = "yes";
     dictionary[ "CE_CRT" ]          = "no";
     dictionary[ "CETEST" ]          = "auto";
     dictionary[ "CE_SIGNATURE" ]    = "no";
@@ -409,6 +445,14 @@ QString Configure::escapeSeparators(cons
     return out;
 }
 
+QString Configure::posixPath(QString somePath)
+{
+    if (somePath.startsWith(cygRoot, Qt::CaseInsensitive))
+        return somePath.remove(0, cygRoot.size());
+
+    return somePath;
+}
+
 // We could use QDir::homePath() + "/.qt-license", but
 // that will only look in the first of $HOME,$USERPROFILE
 // or $HOMEDRIVE$HOMEPATH. So, here we try'em all to be
@@ -1257,7 +1301,7 @@ void Configure::parseCmdLine()
             if (dictionary[ "MAKE" ].isEmpty()) dictionary[ "MAKE" ] = "nmake";
             dictionary[ "QMAKEMAKEFILE" ] = "Makefile.win32";
         } else if (dictionary[ "QMAKESPEC" ] == QString("win32-g++")) {
-            if (dictionary[ "MAKE" ].isEmpty()) dictionary[ "MAKE" ] = "mingw32-make";
+            if (dictionary[ "MAKE" ].isEmpty()) dictionary[ "MAKE" ] = "make";
             if (Environment::detectExecutable("sh.exe")) {
                 dictionary[ "QMAKEMAKEFILE" ] = "Makefile.win32-g++-sh";
             } else {
@@ -1634,9 +1678,9 @@ QString Configure::locateFile(const QStr
     QRegExp splitReg("[:]");
 #endif
     if (file.endsWith(".h"))
-        paths = QString::fromLocal8Bit(getenv("INCLUDE")).split(splitReg, QString::SkipEmptyParts);
+        paths = QString::fromLocal8Bit(getenv("MINGWINCLUDE")).split(splitReg, QString::SkipEmptyParts);
     else if (file.endsWith(".lib"))
-        paths = QString::fromLocal8Bit(getenv("LIB")).split(splitReg, QString::SkipEmptyParts);
+        paths = QString::fromLocal8Bit(getenv("MINGWLIB")).split(splitReg, QString::SkipEmptyParts);
     else
         paths = QString::fromLocal8Bit(getenv("PATH")).split(splitReg, QString::SkipEmptyParts);
     return locateFileInPaths(file, paths);
@@ -1980,11 +2024,11 @@ bool Configure::findFile(const QString &
                     return true;
             }
         }
-        paths = QString::fromLocal8Bit(getenv("INCLUDE"));
+        paths = QString::fromLocal8Bit(getenv("MINGWINCLUDE"));
     } else if (file.endsWith(".lib") ||  file.endsWith(".a")) {
         if (!mingwPath.isNull() && !findFileInPaths(file, mingwPath + QLatin1String("/../lib")).isNull())
             return true;
-        paths = QString::fromLocal8Bit(getenv("LIB"));
+        paths = QString::fromLocal8Bit(getenv("MINGWLIB"));
     } else {
         paths = pathEnvVar;
     }
@@ -3582,10 +3626,10 @@ void Configure::buildQmake()
             QFile out(makefile);
             if (out.open(QFile::WriteOnly | QFile::Text)) {
                 QTextStream stream(&out);
-                stream << "#AutoGenerated by configure.exe" << endl
-                    << "BUILD_PATH = " << QDir::convertSeparators(buildPath) << endl
-                    << "SOURCE_PATH = " << QDir::convertSeparators(sourcePath) << endl;
-                stream << "QMAKESPEC = " << dictionary["QMAKESPEC"] << endl;
+                stream << "#AutoGenerated by mingw-configure.exe" << endl
+                       << "BUILD_PATH = " << buildPath << endl
+                       << "SOURCE_PATH = " << sourcePath << endl
+                       << "QMAKESPEC = " << dictionary["QMAKESPEC"] << endl;
 
                 if (dictionary["EDITION"] == "OpenSource" ||
                     dictionary["QT_EDITION"].contains("OPENSOURCE"))
@@ -3824,22 +3868,50 @@ void Configure::generateMakefiles()
             for (i=0; i<3; i++) {
                 for (int j=0; j<makeList[i].size(); ++j) {
                     MakeItem *it=makeList[i][j];
-                    QString dirPath = fixSeparators(it->directory + "/");
+                    QString dirPath = it->directory.isEmpty() ?
+                                        "" : it->directory + "/";
+                    QString absDirPath = dirPath.isEmpty() ?
+                                buildPath + "/" : buildPath + "/" + dirPath;
                     QString projectName = it->proFile;
-                    QString makefileName = buildPath + "/" + dirPath + it->target;
+                    QString makefileName = absDirPath + it->target;
+                    QStringList args;
 
-                    // For shadowbuilds, we need to create the path first
-                    QDir buildPathDir(buildPath);
-                    if (sourcePath != buildPath && !buildPathDir.exists(dirPath))
-                        buildPathDir.mkpath(dirPath);
+                    if (dirPath.startsWith("build-")
+                            || dirPath.startsWith("config.tests")
+                            || dirPath.startsWith("demos")
+                            || dirPath.startsWith("doc")
+                            || dirPath.startsWith("examples")
+                            || dirPath.startsWith("src/3rdparty")
+                            || dirPath.startsWith("src/activeqt")
+                            || dirPath.startsWith("src/dbus")
+                            || dirPath.startsWith("src/opengl")
+                            || dirPath.startsWith("src/openvg")
+                            || dirPath.startsWith("src/phonon")
+                            || dirPath.startsWith("src/plugins")
+                            || dirPath.startsWith("src/qt3support")
+                            || dirPath.startsWith("src/s60")
+                            || dirPath.startsWith("src/sql")
+                            || dirPath.startsWith("src/xmlpatterns")
+                            || dirPath.startsWith("tools")) {
+                        //cout << "Skipping " << qPrintable(dirPath) << endl << flush;
+                        continue;
+                    }
 
-                    QStringList args;
+                    if (projectName == "translations.pro"
+                            || projectName.startsWith("s60")) {
+                        cout << "Skipping " << qPrintable(dirPath + projectName) << endl << flush;
+                        continue;
+                    }
+                    cout << "For " << qPrintable(dirPath + projectName) << endl << flush;
+                    const QString vPath = dirPath.isEmpty() ?
+                                        sourcePath : sourcePath + "/" + dirPath;
+                    const QString srcTreePath = dirPath.isEmpty() ?
+                                        buildPath : sourcePath;
 
                     args << fixSeparators(buildPath + "/bin/qmake");
-                    args << sourcePath + "/" + dirPath + projectName;
-                    args << dictionary[ "QMAKE_ALL_ARGS" ];
-
-                    cout << "For " << qPrintable(dirPath + projectName) << endl;
+                    args << fixSeparators( sourcePath + "/" + dirPath + projectName );
+                    args << fixSeparators( "VPATH+=" + vPath );
+                    args << fixSeparators( "QT_SOURCE_TREE=" + srcTreePath );
                     args << "-o";
                     args << it->target;
                     args << "-spec";
@@ -3847,8 +3919,20 @@ void Configure::generateMakefiles()
                     if (!dictionary[ "QMAKEADDITIONALARGS" ].isEmpty())
                         args << dictionary[ "QMAKEADDITIONALARGS" ];
 
-                    QDir::setCurrent(fixSeparators(dirPath));
+                    // For shadowbuilds, we need to create the path
+                    if (!ensurePath(absDirPath)) {
+                        printf("failed to make path '%s'\n", qPrintable(absDirPath));
+                        continue;
+                    }
+
+                    QDir::setCurrent( fixSeparators( absDirPath ) );
 
+#if 1
+                    if( int exitCode = Environment::execute(args, QStringList(), QStringList()) ) {
+                        cout << "Qmake failed, return code " << exitCode  << endl << endl << flush;
+                        dictionary[ "DONE" ] = "error";
+                    }
+#else
                     QFile file(makefileName);
                     if (!file.open(QFile::WriteOnly)) {
                         printf("failed on dirPath=%s, makefile=%s\n",
@@ -3862,6 +3946,7 @@ void Configure::generateMakefiles()
                     txt << "first: all\n";
                     txt << "qmake:\n";
                     txt << "\t" << args.join(" ") << "\n";
+#endif
                 }
             }
         }
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/tools/configure/configureapp.h qtwin-4.7.4/tools/configure/configureapp.h
--- qtwin-4.7.4.orig/tools/configure/configureapp.h	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/tools/configure/configureapp.h	2011-10-01 22:50:21.265300000 +0200
@@ -140,6 +140,7 @@ private:
 
     QTextStream outStream;
     QString sourcePath, buildPath;
+    QString cygRoot;
     QDir sourceDir, buildDir;
 
     // Variables for usage output
@@ -150,6 +151,7 @@ private:
     bool useUnixSeparators;
     QString fixSeparators(const QString &somePath, bool escape = false);
     QString escapeSeparators(const QString &somePath);
+    QString posixPath(QString somePath);
     bool filesDiffer(const QString &file1, const QString &file2);
 
     bool findFile(const QString &fileName);
diff -uNrp -x '*configure.exe' -x 'build*' -x doc qtwin-4.7.4.orig/tools/linguist/lrelease/lrelease.pro qtwin-4.7.4/tools/linguist/lrelease/lrelease.pro
--- qtwin-4.7.4.orig/tools/linguist/lrelease/lrelease.pro	2011-09-12 08:49:28.000000000 +0200
+++ qtwin-4.7.4/tools/linguist/lrelease/lrelease.pro	2011-10-01 22:50:21.265300000 +0200
@@ -9,7 +9,7 @@ INCLUDEPATH += $$QT_BUILD_TREE/src/corel
 SOURCES += \
     $$QT_SOURCE_TREE/src/corelib/global/qlibraryinfo.cpp \
     $$QT_SOURCE_TREE/src/corelib/io/qsettings.cpp
-win32:SOURCES += $$QT_SOURCE_TREE/src/corelib/io/qsettings_win.cpp
+win32|cygwin-g++-win32:SOURCES += $$QT_SOURCE_TREE/src/corelib/io/qsettings_win.cpp
 macx:SOURCES += $$QT_SOURCE_TREE/src/corelib/io/qsettings_mac.cpp
 
 include(../../../src/tools/bootstrap/bootstrap.pri)
@@ -17,7 +17,7 @@ include(../shared/formats.pri)
 include(../shared/proparser.pri)
 include(../../shared/symbian/epocroot.pri)
 
-win32:LIBS += -ladvapi32   # for qsettings_win.cpp
+win32|cygwin-g++-win32:LIBS += -ladvapi32   # for qsettings_win.cpp
 
 target.path=$$[QT_INSTALL_BINS]
 INSTALLS        += target
