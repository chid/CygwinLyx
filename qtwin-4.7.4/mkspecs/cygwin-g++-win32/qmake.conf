#
# qmake configuration for cygwin-g++-win32
#
# Written for Qt/Win on Cygwin, using the POSIX API.
#

MAKEFILE_GENERATOR	= UNIX
TARGET_PLATFORM		= unix
TEMPLATE		= app
CONFIG			+= qt warn_on release incremental link_prl
QT			+= core gui
DEFINES			+= UNICODE
QMAKE_INCREMENTAL_STYLE	= sublib
QMAKE_COMPILER_DEFINES	+= Q_CYGWIN_WIN

QMAKE_CC		= gcc-4
QMAKE_CFLAGS		= -pipe -DQ_CYGWIN_WIN -DUNICODE
QMAKE_CFLAGS_DEPS	= -M
QMAKE_CFLAGS_WARN_ON	= -Wall -W
QMAKE_CFLAGS_WARN_OFF	= -w
QMAKE_CFLAGS_RELEASE	= -O2
QMAKE_CFLAGS_DEBUG	= -g
QMAKE_CFLAGS_SHLIB	= -DPIC -DDLL_EXPORT
QMAKE_CFLAGS_STATIC_LIB =
QMAKE_CFLAGS_YACC	= -Wno-unused -Wno-parentheses
QMAKE_CFLAGS_HIDESYMS   =
QMAKE_CFLAGS_PRECOMPILE += -x c-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
QMAKE_CFLAGS_USE_PRECOMPILE += -include ${QMAKE_PCH_OUTPUT_BASE}
QMAKE_CFLAGS_THREAD	= -D_REENTRANT

QMAKE_CXX		= g++-4
QMAKE_CXXFLAGS		= $$QMAKE_CFLAGS
QMAKE_CXXFLAGS_DEPS	= $$QMAKE_CFLAGS_DEPS
QMAKE_CXXFLAGS_WARN_ON	= $$QMAKE_CFLAGS_WARN_ON
QMAKE_CXXFLAGS_WARN_OFF	= $$QMAKE_CFLAGS_WARN_OFF
QMAKE_CXXFLAGS_RELEASE	= $$QMAKE_CFLAGS_RELEASE
QMAKE_CXXFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
QMAKE_CXXFLAGS_SHLIB	= $$QMAKE_CFLAGS_SHLIB
QMAKE_CXXFLAGS_STATIC_LIB = $$QMAKE_CFLAGS_STATIC_LIB
QMAKE_CXXFLAGS_YACC	= $$QMAKE_CFLAGS_YACC
QMAKE_CXXFLAGS_HIDESYMS += $$QMAKE_CFLAGS_HIDESYMS
QMAKE_CXXFLAGS_PRECOMPILE = -x c++-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
QMAKE_CXXFLAGS_USE_PRECOMPILE = $$QMAKE_CFLAGS_USE_PRECOMPILE
QMAKE_CXXFLAGS_THREAD	= $$QMAKE_CFLAGS_THREAD

QMAKE_INCDIR		=
QMAKE_LIBDIR		= /usr/lib/w32api
QMAKE_INCDIR_X11	=
QMAKE_LIBDIR_X11	=
QMAKE_INCDIR_QT		= $$[QT_INSTALL_HEADERS]
QMAKE_LIBDIR_QT		= $$[QT_INSTALL_LIBS]
QMAKE_INCDIR_OPENGL	=
QMAKE_LIBDIR_OPENGL	=

QMAKE_LINK		= g++-4
QMAKE_LINK_SHLIB	= g++-4
QMAKE_LINK_C		= gcc-4
QMAKE_LINK_C_SHLIB	= gcc-4
QMAKE_LFLAGS		=
QMAKE_LFLAGS_RELEASE	= -Wl,-s
QMAKE_LFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
QMAKE_LFLAGS_SHLIB	= -shared  -Wl,--enable-auto-image-base
QMAKE_LFLAGS_PLUGIN	= $$QMAKE_LFLAGS_SHLIB
QMAKE_LFLAGS_SONAME	=
QMAKE_LFLAGS_THREAD	=
QMAKE_LFLAGS_RPATH	=

QMAKE_PCH_OUTPUT_EXT	= .gch

# -Bsymbolic-functions (ld) support
QMAKE_LFLAGS_BSYMBOLIC_FUNC =
QMAKE_LFLAGS_DYNAMIC_LIST =

QMAKE_LIBS		=
QMAKE_LIBS_DYNLOAD	= -ldl
QMAKE_LIBS_X11		=
QMAKE_LIBS_X11SM	=
QMAKE_LIBS_NIS		=
QMAKE_LIBS_CORE		= -lkernel32 -luser32 -lshell32 -luuid -lole32 -ladvapi32
QMAKE_LIBS_GUI		= -lgdi32 -lcomdlg32 -loleaut32 -limm32 -lwinmm -lwinspool -lole32 -luuid -luser32 -ladvapi32
QMAKE_LIBS_OPENGL	= -lopengl32 -lglu32 -lgdi32 -luser32
QMAKE_LIBS_OPENGL_QT	= $$QMAKE_LIBS_OPENGL
QMAKE_LIBS_PRIVATE	= -liconv
QMAKE_LIBS_THREAD	= -lpthread
QMAKE_LIBS_COMPAT	= -ladvapi32 -lshell32 -lcomdlg32 -luser32 -lgdi32

QMAKE_MOC		= $$[QT_INSTALL_BINS]/moc
QMAKE_UIC		= $$[QT_INSTALL_BINS]/uic

QMAKE_AR		= ar cqs
QMAKE_OBJCOPY		= objcopy
QMAKE_RANLIB		= ranlib

QMAKE_TAR		= tar -cf
QMAKE_GZIP		= gzip -9f

QMAKE_COPY		= cp -f
QMAKE_COPY_FILE		= $(COPY)
QMAKE_COPY_DIR		= $(COPY) -r
QMAKE_MOVE		= mv -f
QMAKE_DEL_FILE		= rm -f
QMAKE_DEL_DIR		= rmdir
QMAKE_STRIP		= strip
QMAKE_STRIPFLAGS_LIB	+= --strip-unneeded
QMAKE_CHK_DIR_EXISTS	= test -d
QMAKE_MKDIR		= mkdir -p
QMAKE_INSTALL_FILE	= install -m 644 -p
QMAKE_INSTALL_PROGRAM	= install -m 755 -p

QMAKE_LEX		= flex
QMAKE_LEXFLAGS		+= 
QMAKE_YACC		= byacc
QMAKE_YACCFLAGS		+= -d
QMAKE_YACCFLAGS_MANGLE	+= -p $base -b $base
QMAKE_YACC_HEADER	= $base.tab.h
QMAKE_YACC_SOURCE	= $base.tab.c
QMAKE_PREFIX_SHLIB	= lib
QMAKE_EXTENSION_SHLIB	= dll
QMAKE_PREFIX_STATICLIB	= lib
QMAKE_EXTENSION_STATICLIB = a
QMAKE_CYGWIN_EXE	= 1
# uncomment for building shared libs
#QMAKE_CYGWIN_SHLIB	= 1
load(qt_config)
